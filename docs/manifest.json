{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v7.json", "dbt_version": "1.3.2", "generated_at": "2023-01-19T17:09:25.911250Z", "invocation_id": "fd8638d2-b850-4839-a0d8-f51dbac75c87", "env": {}, "project_id": "73a35c2a0d3d8645b696b16e9759a76d", "user_id": "ba48c4c7-cb98-4c77-adf5-809e54be1cf5", "send_anonymous_usage_stats": true, "adapter_type": "duckdb"}, "nodes": {"model.hcup.stg_ny_sedd_2017_core": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.hcup.limit_data_in_dev"], "nodes": ["source.hcup.SEDD.NY_SEDD_2017_CORE"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["State", "ER", "SEDD", "Source", "Stage"], "meta": {}, "materialized": "external", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": "#829356"}, "format": "parquet", "post-hook": [], "pre-hook": []}, "database": "main", "schema": "parquet", "fqn": ["hcup", "base", "SEDD", "NY", "stg_ny_sedd_2017_core"], "unique_id": "model.hcup.stg_ny_sedd_2017_core", "raw_code": "{{ config(materialized='external', format =  target.schema) }}\r\nSELECT\r\n  \"KEY\",\r\n  AGE,\r\n  DIED,\r\n  RACE,\r\n  HISPANIC,\r\n  FEMALE,\r\n  PAY1,\r\n  ZIP,\r\n  AYEAR,\r\n  AMONTH,\r\n  I10_DX_Visit_Reason1,\r\n  I10_DX_Visit_Reason2,\r\n  I10_DX1,\r\n  I10_DX2,\r\n  'sedd_core' AS db_file,\r\n  CONCAT_WS('', AYEAR, '-', AMONTH, '-01') AS admit_date,\r\nFROM {{ source('SEDD', 'NY_SEDD_2017_CORE') }}\r\n\r\n{{ limit_data_in_dev() }}", "language": "sql", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "base\\SEDD\\NY\\stg_ny_sedd_2017_core.sql", "original_file_path": "models\\base\\SEDD\\NY\\stg_ny_sedd_2017_core.sql", "name": "stg_ny_sedd_2017_core", "alias": "stg_ny_sedd_2017_core", "checksum": {"name": "sha256", "checksum": "45efbad2e588fc8a6badece25c073f86aa1befd87ea0380296b7a0570e0857c1"}, "tags": ["State", "ER", "SEDD", "Source", "Stage"], "refs": [], "sources": [["SEDD", "NY_SEDD_2017_CORE"]], "metrics": [], "description": "Subset of original source file to include basic demographic and diagnosis information. We also assigned `db_file_name` to track file type.", "columns": {"AGE": {"name": "AGE", "description": "Age in years at admission", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AMONTH": {"name": "AMONTH", "description": "Admission month", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DIED": {"name": "DIED", "description": "Died during hospitalization", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "FEMALE": {"name": "FEMALE", "description": "Indicator of sex", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HISPANIC": {"name": "HISPANIC", "description": "Hispanic ethnicity (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "I10_DX_Visit_Reason1": {"name": "I10_DX_Visit_Reason1", "description": "ICD-10-CM Reason for visit diagnosis 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX_Visit_Reason2": {"name": "I10_DX_Visit_Reason2", "description": "ICD-10-CM Reason for visit diagnosis 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX1": {"name": "I10_DX1", "description": "ICD-10-CM Diagnosis 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX2": {"name": "I10_DX2", "description": "ICD-10-CM Diagnosis 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "KEY": {"name": "KEY", "description": "HCUP record identifier", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "PAY1": {"name": "PAY1", "description": "Primary expected payer (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "RACE": {"name": "RACE", "description": "Race (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "ZIP": {"name": "ZIP", "description": "Patient ZIP Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "AYEAR": {"name": "AYEAR", "description": "Admission year", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "db_file": {"name": "db_file", "description": "Concatenation of database and file.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "admit_date": {"name": "admit_date", "description": "concatenation of AYEAR + AMONTH + 01", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true, "node_color": "#829356"}, "patch_path": "hcup://models\\base\\SEDD\\NY\\stg_ny_sedd_2017_core.yml", "compiled_path": "target\\compiled\\hcup\\models\\base\\SEDD\\NY\\stg_ny_sedd_2017_core.sql", "build_path": null, "deferred": false, "unrendered_config": {"tags": ["State", "ER", "SEDD", "Source", "Stage"], "docs": {"node_color": "#829356"}, "materialized": "external", "format": "parquet"}, "created_at": 1674148166.71913, "compiled_code": "\nSELECT\n  \"KEY\",\n  AGE,\n  DIED,\n  RACE,\n  HISPANIC,\n  FEMALE,\n  PAY1,\n  ZIP,\n  AYEAR,\n  AMONTH,\n  I10_DX_Visit_Reason1,\n  I10_DX_Visit_Reason2,\n  I10_DX1,\n  I10_DX2,\n  'sedd_core' AS db_file,\n  CONCAT_WS('', AYEAR, '-', AMONTH, '-01') AS admit_date,\nFROM '\\\\files.drexel.edu\\encrypted\\SOPH\\UHC\\SchnakeMahl_HCUP\\dbt\\v0\\sources\\NY_SEDD_2017_CORE.parquet'\n\n\n  \n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"main\".\"parquet\".\"stg_ny_sedd_2017_core\""}, "model.hcup.stg_ny_sedd_2018_core": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.hcup.limit_data_in_dev"], "nodes": ["source.hcup.SEDD.NY_SEDD_2018_CORE"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["State", "ER", "SEDD", "Source", "Stage"], "meta": {}, "materialized": "external", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": "#829356"}, "format": "parquet", "post-hook": [], "pre-hook": []}, "database": "main", "schema": "parquet", "fqn": ["hcup", "base", "SEDD", "NY", "stg_ny_sedd_2018_core"], "unique_id": "model.hcup.stg_ny_sedd_2018_core", "raw_code": "{{ config(materialized='external', format =  target.schema) }}\r\nSELECT\r\n  \"KEY\",\r\n  AGE,\r\n  DIED,\r\n  RACE,\r\n  HISPANIC,\r\n  FEMALE,\r\n  PAY1,\r\n  ZIP,\r\n  AYEAR,\r\n  AMONTH,\r\n  I10_DX_Visit_Reason1,\r\n  I10_DX_Visit_Reason2,\r\n  I10_DX1,\r\n  I10_DX2,\r\n  'sedd_core' AS db_file,\r\n  CONCAT_WS('', AYEAR, '-', AMONTH, '-01') AS admit_date,\r\nFROM {{ source('SEDD', 'NY_SEDD_2018_CORE') }}\r\n\r\n{{ limit_data_in_dev() }}", "language": "sql", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "base\\SEDD\\NY\\stg_ny_sedd_2018_core.sql", "original_file_path": "models\\base\\SEDD\\NY\\stg_ny_sedd_2018_core.sql", "name": "stg_ny_sedd_2018_core", "alias": "stg_ny_sedd_2018_core", "checksum": {"name": "sha256", "checksum": "6aee8e807037a10cacff1e3425926fb56446e01ad37d4deb3079511ac05c68c7"}, "tags": ["State", "ER", "SEDD", "Source", "Stage"], "refs": [], "sources": [["SEDD", "NY_SEDD_2018_CORE"]], "metrics": [], "description": "Subset of original source file to include basic demographic and diagnosis information. We also assigned `db_file_name` to track file type.", "columns": {"AGE": {"name": "AGE", "description": "Age in years at admission", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AMONTH": {"name": "AMONTH", "description": "Admission month", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DIED": {"name": "DIED", "description": "Died during hospitalization", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "FEMALE": {"name": "FEMALE", "description": "Indicator of sex", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HISPANIC": {"name": "HISPANIC", "description": "Hispanic ethnicity (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "I10_DX_Visit_Reason1": {"name": "I10_DX_Visit_Reason1", "description": "ICD-10-CM Reason for visit diagnosis 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX_Visit_Reason2": {"name": "I10_DX_Visit_Reason2", "description": "ICD-10-CM Reason for visit diagnosis 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX1": {"name": "I10_DX1", "description": "ICD-10-CM Diagnosis 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX2": {"name": "I10_DX2", "description": "ICD-10-CM Diagnosis 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "KEY": {"name": "KEY", "description": "HCUP record identifier", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "PAY1": {"name": "PAY1", "description": "Primary expected payer (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "RACE": {"name": "RACE", "description": "Race (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "ZIP": {"name": "ZIP", "description": "Patient ZIP Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "AYEAR": {"name": "AYEAR", "description": "Admission year", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "db_file": {"name": "db_file", "description": "Concatenation of database and file.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "admit_date": {"name": "admit_date", "description": "concatenation of AYEAR + AMONTH + 01", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true, "node_color": "#829356"}, "patch_path": "hcup://models\\base\\SEDD\\NY\\stg_ny_sedd_2018_core.yml", "compiled_path": "target\\compiled\\hcup\\models\\base\\SEDD\\NY\\stg_ny_sedd_2018_core.sql", "build_path": null, "deferred": false, "unrendered_config": {"tags": ["State", "ER", "SEDD", "Source", "Stage"], "docs": {"node_color": "#829356"}, "materialized": "external", "format": "parquet"}, "created_at": 1674148166.7321026, "compiled_code": "\nSELECT\n  \"KEY\",\n  AGE,\n  DIED,\n  RACE,\n  HISPANIC,\n  FEMALE,\n  PAY1,\n  ZIP,\n  AYEAR,\n  AMONTH,\n  I10_DX_Visit_Reason1,\n  I10_DX_Visit_Reason2,\n  I10_DX1,\n  I10_DX2,\n  'sedd_core' AS db_file,\n  CONCAT_WS('', AYEAR, '-', AMONTH, '-01') AS admit_date,\nFROM '\\\\files.drexel.edu\\encrypted\\SOPH\\UHC\\SchnakeMahl_HCUP\\dbt\\v0\\sources\\NY_SEDD_2018_CORE.parquet'\n\n\n  \n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"main\".\"parquet\".\"stg_ny_sedd_2018_core\""}, "model.hcup.int_sedd_flu_line_level": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.hcup.dx_flag_flu", "macro.hcup.dx_flag_flu_like"], "nodes": ["model.hcup.stg_ny_sedd_2018_core", "model.hcup.stg_ny_sedd_2017_core"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["State", "ER", "SEDD", "Source", "Intermediate"], "meta": {}, "materialized": "external", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "format": "parquet", "post-hook": [], "pre-hook": []}, "database": "main", "schema": "parquet", "fqn": ["hcup", "intermediate", "flu", "int_sedd_flu_line_level"], "unique_id": "model.hcup.int_sedd_flu_line_level", "raw_code": "{{ config(materialized='external', format =  target.schema) }}\r\nwith \r\n\r\nstaged as (\r\n  select * from {{ref('stg_ny_sedd_2018_core')}}\r\n  union\r\n  select * from {{ref('stg_ny_sedd_2017_core')}}\r\n),\r\n\r\nint as (\r\n  select \r\n  *,\r\n  {{dx_flag_flu()}} AS flu,\r\n  {{dx_flag_flu_like()}} AS flu_like, \r\n  from staged\r\n),\r\n\r\nfinal as (\r\n  select \r\n  *,\r\n  CASE\r\n    WHEN (flu AND flu_like) THEN 'BOTH'\r\n    WHEN (flu AND NOT(flu_like)) THEN 'ILI'\r\n    WHEN (NOT(flu) AND flu_like) THEN 'ILI LIKE'\r\n    ELSE 'OTHER'\r\n    END AS ili_diagnosis_var  \r\n  from int\r\n)\r\n\r\nselect * from final", "language": "sql", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "intermediate\\flu\\int_sedd_flu_line_level.sql", "original_file_path": "models\\intermediate\\flu\\int_sedd_flu_line_level.sql", "name": "int_sedd_flu_line_level", "alias": "int_sedd_flu_line_level", "checksum": {"name": "sha256", "checksum": "a1b07c31da4b3b076369ab287b855a91396cd66ae18ab90bfacd3f7e3a7405ff"}, "tags": ["State", "ER", "SEDD", "Source", "Intermediate"], "refs": [["stg_ny_sedd_2018_core"], ["stg_ny_sedd_2017_core"]], "sources": [], "metrics": [], "description": "This intermediate model compiles state level emergency room data across years and states into a single table.", "columns": {"AGE": {"name": "AGE", "description": "Age in years at admission", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AMONTH": {"name": "AMONTH", "description": "Admission month", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DIED": {"name": "DIED", "description": "Died during hospitalization", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "FEMALE": {"name": "FEMALE", "description": "Indicator of sex", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HISPANIC": {"name": "HISPANIC", "description": "Hispanic ethnicity (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "I10_DX_Visit_Reason1": {"name": "I10_DX_Visit_Reason1", "description": "ICD-10-CM Reason for visit diagnosis 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX_Visit_Reason2": {"name": "I10_DX_Visit_Reason2", "description": "ICD-10-CM Reason for visit diagnosis 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX1": {"name": "I10_DX1", "description": "ICD-10-CM Diagnosis 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX2": {"name": "I10_DX2", "description": "ICD-10-CM Diagnosis 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "KEY": {"name": "KEY", "description": "HCUP record identifier", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "PAY1": {"name": "PAY1", "description": "Primary expected payer (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "RACE": {"name": "RACE", "description": "Race (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "ZIP": {"name": "ZIP", "description": "Patient ZIP Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "AYEAR": {"name": "AYEAR", "description": "Admission year", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "db_file": {"name": "db_file", "description": "Concatenation of database and file.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "admit_date": {"name": "admit_date", "description": "concatenation of AYEAR + AMONTH + 01", "meta": {}, "data_type": null, "quote": null, "tags": []}, "flu": {"name": "flu", "description": "True or false indicator for flu related dx codes. True if  either the primary or secondary ICD-10-CM Reason for visit diagnosis or  ICD-10-CM Diagnosis is a flu related dx code. See the `dx_flag_flu` macro for details", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "boolean"}, "flu_like": {"name": "flu_like", "description": "True or false indicator for flu-like related dx codes. True if  either the primary or secondary ICD-10-CM Reason for visit diagnosis or  ICD-10-CM Diagnosis is a flu-like related dx code. See the `dx_flag_flu_like` macro for details", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "boolean"}, "ili_diagnosis_var": {"name": "ili_diagnosis_var", "description": "Categorical indicator for influenza-like illness (ILI) diagnosis operationalized from the `flu` or `flu_like` intermediate indicators. There are three possible values:\r\n\r\n- \"BOTH\" if a patient has both flu and flu-like diagnoses\r\n- \"ILI\" if a patient has only flu diagnoses\r\n- \"ILI LIKE\" if a patient has only flu-like diagnoses\r\n- \"OTHER\" if a patient has neither flu nor flu-like diagnoses", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "hcup://models\\intermediate\\flu\\int_sedd_flu_line_level.yml", "compiled_path": "target\\compiled\\hcup\\models\\intermediate\\flu\\int_sedd_flu_line_level.sql", "build_path": null, "deferred": false, "unrendered_config": {"tags": ["State", "ER", "SEDD", "Source", "Intermediate"], "materialized": "external", "format": "parquet"}, "created_at": 1674148168.142481, "compiled_code": "\nwith \n\nstaged as (\n  select * from \"main\".\"parquet\".\"stg_ny_sedd_2018_core\"\n  union\n  select * from \"main\".\"parquet\".\"stg_ny_sedd_2017_core\"\n),\n\nint as (\n  select \n  *,\n  \n    \n    I10_DX_Visit_Reason1 IN ('J1000', 'J1001', 'J1008', 'J101', 'J102', 'J1081', 'J1082', 'J1083', 'J1089', 'J1100', 'J1108', 'J111', 'J112', 'J1181', 'J1182', 'J1183', 'J1189', 'J09X1', 'J09X2', 'J09X3', 'J09X9') OR I10_DX_Visit_Reason2 IN ('J1000', 'J1001', 'J1008', 'J101', 'J102', 'J1081', 'J1082', 'J1083', 'J1089', 'J1100', 'J1108', 'J111', 'J112', 'J1181', 'J1182', 'J1183', 'J1189', 'J09X1', 'J09X2', 'J09X3', 'J09X9') OR I10_DX1 IN ('J1000', 'J1001', 'J1008', 'J101', 'J102', 'J1081', 'J1082', 'J1083', 'J1089', 'J1100', 'J1108', 'J111', 'J112', 'J1181', 'J1182', 'J1183', 'J1189', 'J09X1', 'J09X2', 'J09X3', 'J09X9') OR I10_DX2 IN ('J1000', 'J1001', 'J1008', 'J101', 'J102', 'J1081', 'J1082', 'J1083', 'J1089', 'J1100', 'J1108', 'J111', 'J112', 'J1181', 'J1182', 'J1183', 'J1189', 'J09X1', 'J09X2', 'J09X3', 'J09X9') AS flu,\n  \n    \n    I10_DX_Visit_Reason1 IN ('J069', 'J399', 'J200', 'J201', 'J202', 'J203', 'J204', 'J205', 'J206', 'J207', 'J208', 'J209', 'J210', 'J211', 'J218', 'J219', 'J40', 'B012', 'B052', 'B0681', 'B250', 'J120', 'J121', 'J122', 'J123', 'J1281', 'J1289', 'J129', 'J440', 'J441', 'J470', 'J471') OR I10_DX_Visit_Reason2 IN ('J069', 'J399', 'J200', 'J201', 'J202', 'J203', 'J204', 'J205', 'J206', 'J207', 'J208', 'J209', 'J210', 'J211', 'J218', 'J219', 'J40', 'B012', 'B052', 'B0681', 'B250', 'J120', 'J121', 'J122', 'J123', 'J1281', 'J1289', 'J129', 'J440', 'J441', 'J470', 'J471') OR I10_DX1 IN ('J069', 'J399', 'J200', 'J201', 'J202', 'J203', 'J204', 'J205', 'J206', 'J207', 'J208', 'J209', 'J210', 'J211', 'J218', 'J219', 'J40', 'B012', 'B052', 'B0681', 'B250', 'J120', 'J121', 'J122', 'J123', 'J1281', 'J1289', 'J129', 'J440', 'J441', 'J470', 'J471') OR I10_DX2 IN ('J069', 'J399', 'J200', 'J201', 'J202', 'J203', 'J204', 'J205', 'J206', 'J207', 'J208', 'J209', 'J210', 'J211', 'J218', 'J219', 'J40', 'B012', 'B052', 'B0681', 'B250', 'J120', 'J121', 'J122', 'J123', 'J1281', 'J1289', 'J129', 'J440', 'J441', 'J470', 'J471') AS flu_like, \n  from staged\n),\n\nfinal as (\n  select \n  *,\n  CASE\n    WHEN (flu AND flu_like) THEN 'BOTH'\n    WHEN (flu AND NOT(flu_like)) THEN 'ILI'\n    WHEN (NOT(flu) AND flu_like) THEN 'ILI LIKE'\n    ELSE 'OTHER'\n    END AS ili_diagnosis_var  \n  from int\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"main\".\"parquet\".\"int_sedd_flu_line_level\""}, "model.hcup.mart__er_flu__line_level": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.hcup.int_sedd_flu_line_level"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["State", "ER", "SEDD", "Source", "Mart"], "meta": {}, "materialized": "external", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": "#9A2617"}, "format": "parquet", "post-hook": [], "pre-hook": []}, "database": "main", "schema": "parquet", "fqn": ["hcup", "marts", "flu", "line_level", "mart__er_flu__line_level"], "unique_id": "model.hcup.mart__er_flu__line_level", "raw_code": "{{ config(materialized='external', format =  target.schema) }}\r\nselect \r\n\"KEY\",\r\n  AGE,\r\n  DIED,\r\n  RACE,\r\n  HISPANIC,\r\n  FEMALE,\r\n  admit_date,\r\n  ZIP,\r\n  flu,\r\n  flu_like,\r\n  ili_diagnosis_var\r\nFROM {{ref('int_sedd_flu_line_level')}}", "language": "sql", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "marts\\flu\\line_level\\mart__er_flu__line_level.sql", "original_file_path": "models\\marts\\flu\\line_level\\mart__er_flu__line_level.sql", "name": "mart__er_flu__line_level", "alias": "mart__er_flu__line_level", "checksum": {"name": "sha256", "checksum": "c04933d46934f662bc0c5c35f74eba868521bf6cfffd2a14f94f6f9704328637"}, "tags": ["State", "ER", "SEDD", "Source", "Mart"], "refs": [["int_sedd_flu_line_level"]], "sources": [], "metrics": [], "description": "This final user facing model is meant the analysis of all emergency room HCUP related encounters for NY for the years of 2017 and 2018. It includes basic demographics as well as indiciators for flu, flu-like or ILI diagnosis. Staging and intermediate columns are removed.\r\n\r\nTo access this table, you can use the following code:\r\n\r\n```r\r\nlibrary(dplyr)\r\nlibrary(arrow)\r\n\r\n## work within Arrow \r\ndb = arrow::open_dataset(\"\\\\\\\\files.drexel.edu\\\\encrypted\\\\SOPH\\\\UHC\\\\SchnakeMahl_HCUP\\\\dbt\\\\v0\\\\models\\\\mart__er_flu__line_level.parquet\")\r\ndb %>% filter(flu) \r\n\r\n## work  within RAM\r\ndf = db %>% collect()\r\ndf %>% filter(flu) \r\n\r\n```", "columns": {"KEY": {"name": "KEY", "description": "HCUP record identifier", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "AGE": {"name": "AGE", "description": "Age in years at admission", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DIED": {"name": "DIED", "description": "Died during hospitalization", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "RACE": {"name": "RACE", "description": "Race (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HISPANIC": {"name": "HISPANIC", "description": "Hispanic ethnicity (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "FEMALE": {"name": "FEMALE", "description": "Indicator of sex", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "admit_date": {"name": "admit_date", "description": "concatenation of AYEAR + AMONTH + 01", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ZIP": {"name": "ZIP", "description": "Patient ZIP Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "flu": {"name": "flu", "description": "True or false indicator for flu related dx codes. True if  either the primary or secondary ICD-10-CM Reason for visit diagnosis or  ICD-10-CM Diagnosis is a flu related dx code. See the `dx_flag_flu` macro for details", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "boolean"}, "flu_like": {"name": "flu_like", "description": "True or false indicator for flu-like related dx codes. True if  either the primary or secondary ICD-10-CM Reason for visit diagnosis or  ICD-10-CM Diagnosis is a flu-like related dx code. See the `dx_flag_flu_like` macro for details", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "boolean"}, "ili_diagnosis_var": {"name": "ili_diagnosis_var", "description": "Categorical indicator for influenza-like illness (ILI) diagnosis operationalized from the `flu` or `flu_like` intermediate indicators. There are three possible values:\r\n\r\n- \"BOTH\" if a patient has both flu and flu-like diagnoses\r\n- \"ILI\" if a patient has only flu diagnoses\r\n- \"ILI LIKE\" if a patient has only flu-like diagnoses\r\n- \"OTHER\" if a patient has neither flu nor flu-like diagnoses", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}}, "meta": {}, "docs": {"show": true, "node_color": "#9A2617"}, "patch_path": "hcup://models\\marts\\flu\\line_level\\mart__er_flu__line_level.yml", "compiled_path": "target\\compiled\\hcup\\models\\marts\\flu\\line_level\\mart__er_flu__line_level.sql", "build_path": null, "deferred": false, "unrendered_config": {"tags": ["State", "ER", "SEDD", "Source", "Mart"], "docs": {"node_color": "#9A2617"}, "materialized": "external", "format": "parquet"}, "created_at": 1674148168.1525154, "compiled_code": "\nselect \n\"KEY\",\n  AGE,\n  DIED,\n  RACE,\n  HISPANIC,\n  FEMALE,\n  admit_date,\n  ZIP,\n  flu,\n  flu_like,\n  ili_diagnosis_var\nFROM \"main\".\"parquet\".\"int_sedd_flu_line_level\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"main\".\"parquet\".\"mart__er_flu__line_level\""}, "model.hcup.mart__er_flu__zip_level": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.hcup.mart__er_flu__line_level"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["State", "ER", "SEDD", "Source", "Mart"], "meta": {}, "materialized": "external", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": "#9A2617"}, "format": "parquet", "post-hook": [], "pre-hook": []}, "database": "main", "schema": "parquet", "fqn": ["hcup", "marts", "flu", "zip_level", "mart__er_flu__zip_level"], "unique_id": "model.hcup.mart__er_flu__zip_level", "raw_code": "{{ config(materialized='external', format =  target.schema) }}\r\nSELECT\r\n  AGE,\r\n  RACE,\r\n  HISPANIC,\r\n  ZIP,\r\n  FEMALE,\r\n  flu,\r\n  flu_like,\r\n  ili_diagnosis_var,\r\n  COUNT(*) AS count\r\nFROM {{ref('mart__er_flu__line_level')}}\r\nGROUP BY AGE, RACE, HISPANIC, ZIP, FEMALE, flu, flu_like, ili_diagnosis_var", "language": "sql", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "marts\\flu\\zip_level\\mart__er_flu__zip_level.sql", "original_file_path": "models\\marts\\flu\\zip_level\\mart__er_flu__zip_level.sql", "name": "mart__er_flu__zip_level", "alias": "mart__er_flu__zip_level", "checksum": {"name": "sha256", "checksum": "464bfb13c1679aa4637759bb3f55587fdebdeb40bfef0c03c6d02876891fa1c5"}, "tags": ["State", "ER", "SEDD", "Source", "Mart"], "refs": [["mart__er_flu__line_level"]], "sources": [], "metrics": [], "description": "This final user facing table is meant the analysis of all emergency room HCUP related encounters for NY for the years of 2017 and 2018; all counts are aggregated at the zip-code level. It includes basic demographics as well as indiciators for flu, flu-like or ILI diagnosis. Staging and intermediate columns are removed. \r\n\r\nTo access this table, you can use the following code:\r\n\r\n```r\r\nlibrary(dplyr)\r\nlibrary(arrow)\r\n\r\n## work within Arrow \r\ndb = arrow::open_dataset(\"\\\\\\\\files.drexel.edu\\\\encrypted\\\\SOPH\\\\UHC\\\\SchnakeMahl_HCUP\\\\dbt\\\\v0\\\\models\\\\mart__er_flu__zip_level.parquet\")\r\ndb %>% filter(flu) \r\n\r\n## work  within RAM\r\ndf = db %>% collect()\r\ndf %>% filter(flu) \r\n\r\n```", "columns": {"KEY": {"name": "KEY", "description": "HCUP record identifier", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "AGE": {"name": "AGE", "description": "Age in years at admission", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DIED": {"name": "DIED", "description": "Died during hospitalization", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "RACE": {"name": "RACE", "description": "Race (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HISPANIC": {"name": "HISPANIC", "description": "Hispanic ethnicity (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "FEMALE": {"name": "FEMALE", "description": "Indicator of sex", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "admit_date": {"name": "admit_date", "description": "concatenation of AYEAR + AMONTH + 01", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ZIP": {"name": "ZIP", "description": "Patient ZIP Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "flu": {"name": "flu", "description": "True or false indicator for flu related dx codes. True if  either the primary or secondary ICD-10-CM Reason for visit diagnosis or  ICD-10-CM Diagnosis is a flu related dx code. See the `dx_flag_flu` macro for details", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "boolean"}, "flu_like": {"name": "flu_like", "description": "True or false indicator for flu-like related dx codes. True if  either the primary or secondary ICD-10-CM Reason for visit diagnosis or  ICD-10-CM Diagnosis is a flu-like related dx code. See the `dx_flag_flu_like` macro for details", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "boolean"}, "ili_diagnosis_var": {"name": "ili_diagnosis_var", "description": "Categorical indicator for influenza-like illness (ILI) diagnosis operationalized from the `flu` or `flu_like` intermediate indicators. There are three possible values:\r\n\r\n- \"BOTH\" if a patient has both flu and flu-like diagnoses\r\n- \"ILI\" if a patient has only flu diagnoses\r\n- \"ILI LIKE\" if a patient has only flu-like diagnoses\r\n- \"OTHER\" if a patient has neither flu nor flu-like diagnoses", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "count": {"name": "count", "description": "this columns is the count of encounters by AGE, RACE, HISPANIC, ZIP, FEMALE, flu, flu_like, ili_diagnosis_var.", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "numeric"}}, "meta": {}, "docs": {"show": true, "node_color": "#9A2617"}, "patch_path": "hcup://models\\marts\\flu\\zip_level\\mart__er_flu__zip_level.yml", "compiled_path": "target\\compiled\\hcup\\models\\marts\\flu\\zip_level\\mart__er_flu__zip_level.sql", "build_path": null, "deferred": false, "unrendered_config": {"tags": ["State", "ER", "SEDD", "Source", "Mart"], "docs": {"node_color": "#9A2617"}, "materialized": "external", "format": "parquet"}, "created_at": 1674148168.1625152, "compiled_code": "\nSELECT\n  AGE,\n  RACE,\n  HISPANIC,\n  ZIP,\n  FEMALE,\n  flu,\n  flu_like,\n  ili_diagnosis_var,\n  COUNT(*) AS count\nFROM \"main\".\"parquet\".\"mart__er_flu__line_level\"\nGROUP BY AGE, RACE, HISPANIC, ZIP, FEMALE, flu, flu_like, ili_diagnosis_var", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"main\".\"parquet\".\"mart__er_flu__zip_level\""}, "model.hcup.mart__er_flu__zip_level_refactor": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt.py_script_postfix"], "nodes": ["model.hcup.mart__er_flu__line_level"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["State", "ER", "SEDD", "Source", "Mart"], "meta": {}, "materialized": "external", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": "#9A2617"}, "format": "parquet", "post-hook": [], "pre-hook": []}, "database": "main", "schema": "parquet", "fqn": ["hcup", "marts", "flu", "zip_level", "mart__er_flu__zip_level_refactor"], "unique_id": "model.hcup.mart__er_flu__zip_level_refactor", "raw_code": "import pyarrow as pa\r\nimport polars as pl\r\n\r\ndef model(dbt, session):\r\n    dbt.config(materialized = \"external\", format = 'parquet' )\r\n    intermediate = pl.from_arrow(dbt.ref(\"mart__er_flu__line_level\").arrow()) \r\n    \r\n    final = (intermediate\r\n      .groupby(['AGE','RACE','HISPANIC','ZIP','FEMALE','flu','flu_like','ili_diagnosis_var'])\r\n      .count()\r\n      .to_pandas())\r\n\r\n    return final", "language": "python", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "marts\\flu\\zip_level\\mart__er_flu__zip_level_refactor.py", "original_file_path": "models\\marts\\flu\\zip_level\\mart__er_flu__zip_level_refactor.py", "name": "mart__er_flu__zip_level_refactor", "alias": "mart__er_flu__zip_level_refactor", "checksum": {"name": "sha256", "checksum": "c9f77095d4d9f03f0a1038d38b5d03ca435b74b751a4835ceeac9127e23adf0b"}, "tags": ["State", "ER", "SEDD", "Source", "Mart"], "refs": [["mart__er_flu__line_level"]], "sources": [], "metrics": [], "description": "This final user facing table is meant the analysis of all emergency room HCUP related encounters for NY for the years of 2017 and 2018; all counts are aggregated at the zip-code level. It includes basic demographics as well as indiciators for flu, flu-like or ILI diagnosis. Staging and intermediate columns are removed. \r\n\r\nTo access this table, you can use the following code:\r\n\r\n```r\r\nlibrary(dplyr)\r\nlibrary(arrow)\r\n\r\n## work within Arrow \r\ndb = arrow::open_dataset(\"\\\\\\\\files.drexel.edu\\\\encrypted\\\\SOPH\\\\UHC\\\\SchnakeMahl_HCUP\\\\dbt\\\\v0\\\\models\\\\mart__er_flu__zip_level_refactor.parquet\")\r\ndb %>% filter(flu) \r\n\r\n## work  within RAM\r\ndf = db %>% collect()\r\ndf %>% filter(flu) \r\n```", "columns": {"KEY": {"name": "KEY", "description": "HCUP record identifier", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "AGE": {"name": "AGE", "description": "Age in years at admission", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DIED": {"name": "DIED", "description": "Died during hospitalization", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "RACE": {"name": "RACE", "description": "Race (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HISPANIC": {"name": "HISPANIC", "description": "Hispanic ethnicity (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "FEMALE": {"name": "FEMALE", "description": "Indicator of sex", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "admit_date": {"name": "admit_date", "description": "concatenation of AYEAR + AMONTH + 01", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ZIP": {"name": "ZIP", "description": "Patient ZIP Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "flu": {"name": "flu", "description": "True or false indicator for flu related dx codes. True if  either the primary or secondary ICD-10-CM Reason for visit diagnosis or  ICD-10-CM Diagnosis is a flu related dx code. See the `dx_flag_flu` macro for details", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "boolean"}, "flu_like": {"name": "flu_like", "description": "True or false indicator for flu-like related dx codes. True if  either the primary or secondary ICD-10-CM Reason for visit diagnosis or  ICD-10-CM Diagnosis is a flu-like related dx code. See the `dx_flag_flu_like` macro for details", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "boolean"}, "ili_diagnosis_var": {"name": "ili_diagnosis_var", "description": "Categorical indicator for influenza-like illness (ILI) diagnosis operationalized from the `flu` or `flu_like` intermediate indicators. There are three possible values:\r\n\r\n- \"BOTH\" if a patient has both flu and flu-like diagnoses\r\n- \"ILI\" if a patient has only flu diagnoses\r\n- \"ILI LIKE\" if a patient has only flu-like diagnoses\r\n- \"OTHER\" if a patient has neither flu nor flu-like diagnoses", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "count": {"name": "count", "description": "this columns is the count of encounters by AGE, RACE, HISPANIC, ZIP, FEMALE, flu, flu_like, ili_diagnosis_var.", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "numeric"}}, "meta": {}, "docs": {"show": true, "node_color": "#9A2617"}, "patch_path": "hcup://models\\marts\\flu\\zip_level\\mart__er_flu__zip_level_refactor.yml", "compiled_path": "target\\compiled\\hcup\\models\\marts\\flu\\zip_level\\mart__er_flu__zip_level_refactor.py", "build_path": null, "deferred": false, "unrendered_config": {"tags": ["State", "ER", "SEDD", "Source", "Mart"], "docs": {"node_color": "#9A2617"}, "materialized": "external", "format": "parquet"}, "created_at": 1674148168.1725156, "compiled_code": "import pyarrow as pa\r\nimport polars as pl\r\n\r\ndef model(dbt, session):\r\n    dbt.config(materialized = \"external\", format = 'parquet' )\r\n    intermediate = pl.from_arrow(dbt.ref(\"mart__er_flu__line_level\").arrow()) \r\n    \r\n    final = (intermediate\r\n      .groupby(['AGE','RACE','HISPANIC','ZIP','FEMALE','flu','flu_like','ili_diagnosis_var'])\r\n      .count()\r\n      .to_pandas())\r\n\r\n    return final\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args,dbt_load_df_function):\n    refs = {\"mart__er_flu__line_level\": \"main.parquet.mart__er_flu__line_level\"}\n    key = \".\".join(args)\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {}\n    key = \".\".join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = 'main'\n    schema = 'parquet'\n    identifier = 'mart__er_flu__zip_level_refactor'\n    def __repr__(self):\n        return 'main.parquet.mart__er_flu__zip_level_refactor'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args: ref(*args, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"main\".\"parquet\".\"mart__er_flu__zip_level_refactor\""}, "analysis.hcup.dev__sedd_dbt_prod_test": {"compiled": true, "resource_type": "analysis", "depends_on": {"macros": [], "nodes": ["source.hcup.SEDD.NY_SEDD_2017_CHGS"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "external", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "format": "csv", "post-hook": [], "pre-hook": []}, "database": "main", "schema": "parquet", "fqn": ["hcup", "analysis", "dev__sedd_dbt_prod_test"], "unique_id": "analysis.hcup.dev__sedd_dbt_prod_test", "raw_code": "{{ config(materialized='external', format = 'csv') }}\r\nSELECT  *\r\nFROM {{ source('SEDD', 'NY_SEDD_2017_CHGS') }}\r\nLIMIT 20", "language": "sql", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "analysis\\dev__sedd_dbt_prod_test.sql", "original_file_path": "analyses\\dev__sedd_dbt_prod_test.sql", "name": "dev__sedd_dbt_prod_test", "alias": "dev__sedd_dbt_prod_test", "checksum": {"name": "sha256", "checksum": "eb3b6b43ba7f04ee5edc537ad7ed9266e6917800bbddfdd44cd8ce68a9bf63b7"}, "tags": [], "refs": [], "sources": [["SEDD", "NY_SEDD_2017_CHGS"]], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target\\compiled\\hcup\\analyses\\dev__sedd_dbt_prod_test.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "external", "format": "csv"}, "created_at": 1674148166.68013, "compiled_code": "\nSELECT  *\nFROM '\\\\files.drexel.edu\\encrypted\\SOPH\\UHC\\SchnakeMahl_HCUP\\dbt\\v0\\sources\\NY_SEDD_2017_CHGS.parquet'\nLIMIT 20", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}}, "sources": {"source.hcup.SEDD.NY_SEDD_2017_CHGS": {"fqn": ["hcup", "docs", "state", "sedd", "2016_2018", "ny", "SEDD", "NY_SEDD_2017_CHGS"], "database": "main", "schema": "SEDD", "unique_id": "source.hcup.SEDD.NY_SEDD_2017_CHGS", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "models\\docs\\state\\sedd\\2016_2018\\ny\\ny_sedd_2017_chgs.yml", "original_file_path": "models\\docs\\state\\sedd\\2016_2018\\ny\\ny_sedd_2017_chgs.yml", "name": "NY_SEDD_2017_CHGS", "source_name": "SEDD", "source_description": "## Abstract: HCUP State Emergency Department Databases (SEDD)\r\nThe State Emergency Department Databases (SEDD) are part of the Healthcare Cost and Utilization Project (HCUP), sponsored by the Agency for Healthcare Research and Quality (AHRQ).\r\n\r\nThe HCUP State Emergency Department Databases (SEDD) are a powerful set of databases that capture discharge information on all emergency department visits that do not result in an admission. Information on patients initially seen in the emergency room and then admitted to the hospital is included in the HCUP State Inpatient Databases (SID). To enumerate all emergency department visits, SEDD discharges should be combined with SID discharges that originate in the emergency department.\r\n\r\n- The SEDD contain the emergency department encounter abstracts from hospital-affiliated emergency departments in participating States, translated into a uniform format to facilitate multistate comparisons and analyses.\r\n- The SEDD contain a core set of clinical and nonclinical information on all visits, regardless of the expected payer, including but not limited to Medicare, Medicaid, private insurance, self-pay, or those billed as 'no charge'.\r\n- In addition to the core set of uniform data elements common to all SEDD, some State data include other elements such as the patient's race.\r\n\r\nResearchers and policymakers use the SEDD to investigate access to healthcare in a changing healthcare marketplace; identify State-specific trends in emergency department utilization, access, charges, and outcomes; and conduct market-area research and small-area variation analyses.\r\n\r\nThe individual State databases are in the same HCUP uniform format and represent 100 percent of records processed by AHRQ. However, the participating data organizations control the release of specific data elements. AHRQ is currently assisting the data organizations in the release of the 1999-2021 SEDD.\r\n\r\nThe SEDD can be linked to hospital-level data from the American Hospital Association (AHA) Annual Survey of Hospitals and county-level data from the Bureau of Health Professions' Area Resource File (ARF), except in States that do not allow the release of hospital identifiers.\r\n\r\nThirty of the data organizations participating in HCUP have agreed to release their SEDD files through the HCUP Central Distributor under the auspices of AHRQ. Uses are limited to research, analysis, and aggregate statistical reporting.\r\n\r\nUseful links include: \r\n\r\n- [SEDD database home page](https://www.hcup-us.ahrq.gov/db/state/sedddbdocumentation.jsp)\r\n- [Intro to SEDD database](https://www.hcup-us.ahrq.gov/db/state/sedddist/SEDD_Introduction.jsp)\r\n\r\n## Introduction to SEDD\r\n\r\n#### Overview\r\n\r\nThe Healthcare Cost and Utilization Project (HCUP) State Emergency Department Databases (SEDD) consist of individual data files from 42 participating data organizations. The SEDD contain information on emergency department (ED) visits to hospital-affiliated emergency departments that do not result in admissions. Information on patients initially seen in the emergency room and then admitted to the hospital is included in the HCUP State Inpatient Databases (SID). Composition and completeness of data files may vary from State to State. The SEDD are annual, State-specific files that share a common structure and common data elements. Most data elements are coded in a uniform format across all States. In addition to the core set of uniform data elements, the SEDD include State-specific data elements or data elements available only for a limited number of States. The uniform format of the SEDD helps facilitate cross-State comparisons. In addition, the SEDD, in combination with the SID, are well suited for research that requires complete enumeration of hospitals and emergency room encounters within market areas or States.\r\n\r\nThirty of the 42 participating data organizations have agreed to release their SEDD files through the HCUP Central Distributor under the auspices of AHRQ. The individual State databases are in the same HCUP uniform format. In general, they represent 100 percent of records processed by AHRQ. However, the participating data organizations control the release of specific data elements. AHRQ is currently assisting the data organizations in the release of the 1999-2021 SEDD.\r\n\r\nSEDD data sets are currently available for multiple States and years. Each release of the SEDD includes:\r\n\r\n- Data in American Standard Code for Information Interchange (ASCII) format on a compact disc with read-only memory CD-ROM.\r\n- Patient-level discharge abstract data in participating States for 100 percent of discharges from hospital-affiliated emergency departments that do not result in admissions.\r\n- American Hospital Association (AHA) Linkage File to link the SEDD to data from the AHA Annual Survey of Hospitals. This is only available for States that allow the release of hospital identifiers.\r\n\r\nThe SEDD are calendar year files for all data years except 2015. Because of the transition to ICD-10-CM/PCS1 on October 1, 2015, the 2015 SEDD are split into two parts. Nine months of the 2015 data with ICD-9-CM2 codes (discharges from Jan 1, 2015 - September 30, 2015) are in one set of files labeled Q1Q3. Three months of 2015 data with ICD-10-CM/PCS codes (discharges from October 1, 2015 - December 31, 2015) are in a separate set of files labeled Q4. More information about the changes to the HCUP databases for ICD-10-CM/PCS and use of data across the two coding system may be found on the HCUP User Support website under ICD-10-CM/PCS Resources (www.hcup-us.ahrq.gov/datainnovations/icd10_resources.jsp).\r\n\r\nSEDD documentation and tools\u2014including file specifications, programming source code for loading ASCII data into SAS (SAS Institute Inc.; Cary, NC), SPSS (IBM Corp.; Somers, NY), and Stata (StataCorp; College Station, TX), and value labels\u00e2\u20ac\u201dare available online at the HCUP User Support website www.hcup-us.ahrq.gov.\r\n\r\nStarting with the 2006 SEDD, the AHA Linkage files are available via the HCUP User Support website www.hcup-us.ahrq.gov. The AHA Linkage files may not be available when the discharge-level database is released.\r\n\r\n#### How the HCUP SEDD Differ from State Data Files\r\n\r\nThe SEDD available through the HCUP Central Distributor differ from the data files available from the data organizations in the following ways:\r\n\r\n- Data elements available on the files\r\n- Coding of data elements\r\n\r\nBecause the data organizations dictate the data elements that may be released through the HCUP Central Distributor, the data elements on the SEDD are a subset of the data collected by the corresponding data organizations. HCUP uniform coding is used on most data elements on the SEDD. A few State-specific data elements retain the original values provided by the respective data organizations.\r\n\r\n#### What is the File Structure of the SEDD in the 2019-2021 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n- Diagnosis and Procedure Groups file\r\n\r\n#### What Types of Facilities Are Included in the SEDD?\r\n\r\nThe types of hospitals are included in the SEDD depend on the information provided by the data organizations. Most State government data organizations provide information on all acute care hospitals in the respective State. Private data organizations are often restricted to member hospitals and may not provide information on all hospitals in their State. All hospitals reported by the data organizations are retained in the SEDD files.\r\n\r\nTables showing the number of hospitals in the SEDD can be found online at the HCUP User Support website (www.hcup-us.ahrq.gov). The tables present the hospitals by the number of:\r\n\r\n- Community hospitals\r\n- Hospitals not classified as community\r\n- Community hospitals not in the SEDD\r\n\r\nThe only reason a hospital is not included in the SEDD is if the data organization did not supply the necessary data.\r\n\r\nInformation contained in the AHA Annual Survey of Hospitals was used to determine if a hospital was a community hospital. Community hospitals, as defined by AHA, include \"all nonfederal, short term, general and other specialty hospitals, excluding hospital units of institutions.\" Included among community hospitals are academic medical centers and specialty hospitals such as obstetrics, gynecology, otolaryngology, short term rehabilitation, orthopedic, and pediatric hospitals. Noncommunity hospitals include Federal hospitals (e.g., Veterans Affairs, Department of Defense, and Indian Health Service hospitals), long-term hospitals, psychiatric hospitals, alcohol/chemical dependency treatment facilities, and hospital units within institutions such as prisons.\r\n\r\nSome hospitals could not be categorized as community or noncommunity hospitals because they could not be matched with AHA information. This occurs when a hospital was closed in a previous year or when the hospital does not report to the AHA.\r\n\r\n#### What is the File Structure of the SEDD in the 2019-2021 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n- Diagnosis and Procedure Groups file\r\n\r\n#### What is the File Structure of the SEDD in the 2016-2018 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the 2016 SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n\r\nUnavailable with the 2016-2018 SEDD is the Diagnosis and Procedure Groups file that had been included with the SEDD in prior data years. The data elements included in that file were derived from AHRQ software tools. If you are interested in applying the AHRQ software tools to the ICD-10-CM/PCS data in the 2016-2018 SEDD, beta versions of the AHRQ software tools are available on the HCUP User Support website at www.hcup-us.ahrq.gov/tools_software.jsp. Also available is a tutorial on how to apply the AHRQ software tools to the HCUP databases at www.hcup-us.ahrq.gov/tech_assist/tutorials.jsp.", "loader": "", "identifier": "NY_SEDD_2017_CHGS", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "NY SEDD 2017 CHGS file. The Charges file contains detailed charge information. There are three kinds of Charges files:\r\n\r\n1. Line item detail in which a submitted charge pertains to a specified revenue center and there may be multiple charges reported for the same revenue center. This type of Charges file includes multiple records per discharge abstract. Each record includes the following information for one service:\r\n  a. Revenue center (REVCODE))\r\n  b. Charge (CHARGE) \r\n  c. Unit of service (UNITS)\r\n  d. Current Procedural Terminology (CPT\u00ae) and Healthcare Common Procedure Coding System (HCPCS) codes (CPTHCPCS)\r\n  e. Day of service (SERVDAY) for some files\r\nFor example, if a patient had five laboratory tests, there are five records in the Charges file with information on the charge for each laboratory test. Information from this type of Charges file may be combined with the Core file by the unique record identifier (KEY), but there is not a one-to-one correspondence of records.\r\n\r\n2. Summarized detail in which charge information is summed within the revenue center. This type of Charges file includes one record per discharge abstract. Each record contains three corresponding arrays with the following information:\r\n  a. Revenue center (REVCDn)\r\n  b. Total charge for the revenue center (CHGn)\r\n  c. Total units of service for the revenue center (UNITn)\r\n\r\nFor example, if a patient had five laboratory tests, REVCD1 would include the revenue code for laboratory, CHG1 would include the total charge for the five tests, and UNIT1 would be five. To combine data elements between this type of Charges file and the Core file, merge the files by the unique record identifier (KEY). There will be a one-to-one correspondence of records.\r\n\r\n3. Collapsed detail in which charge information is summed across revenue centers. This type of Charges file includes one record per discharge abstract. Each record contains an array of collapsed charges (CHGn) that are predefined by the data organization that provided the data.\r\n\r\nConsider the example of a patient that had five laboratory tests from different revenue centers in the range of 300 to 319. CHG1, which was predefined as Laboratory Charges for revenue centers 300-319, would include the total charge for the five tests, but there is no detail on which specific revenue centers were used. To combine data elements between this type of Charges file and the Core file, merge the files by the unique record identifier (KEY). There will be a one-to-one correspondence of records.\r\n\r\nRefer to the Description of Data Elements online at the HCUP User Support website (www.hcup-us.ahrq.gov) for more information on the charge information from the different States.", "columns": {"CHARGE": {"name": "CHARGE", "description": "Line item charges (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "CPTHCPCS": {"name": "CPTHCPCS", "description": "Line item CPT-4/HCPCS procedure code (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTMod1": {"name": "CPTMod1", "description": "Line item CPT-4/HCPCS first modifier (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTMod2": {"name": "CPTMod2", "description": "Line item CPT-4/HCPCS second modifier (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "KEY": {"name": "KEY", "description": "HCUP record identifier", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "REVCODE": {"name": "REVCODE", "description": "Line item revenue code (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "SERVDAY": {"name": "SERVDAY", "description": "Line item days from admission date", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "UNITS": {"name": "UNITS", "description": "Line item units (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}}, "meta": {}, "source_meta": {"external_location": "\\\\files.drexel.edu\\encrypted\\SOPH\\UHC\\SchnakeMahl_HCUP\\dbt\\v0\\sources\\{name}.parquet"}, "tags": ["ER", "SEDD", "Source", "State"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "'\\\\files.drexel.edu\\encrypted\\SOPH\\UHC\\SchnakeMahl_HCUP\\dbt\\v0\\sources\\NY_SEDD_2017_CHGS.parquet'", "created_at": 1674148168.1725156}, "source.hcup.SEDD.NY_SEDD_2017_CORE": {"fqn": ["hcup", "docs", "state", "sedd", "2016_2018", "ny", "SEDD", "NY_SEDD_2017_CORE"], "database": "main", "schema": "SEDD", "unique_id": "source.hcup.SEDD.NY_SEDD_2017_CORE", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "models\\docs\\state\\sedd\\2016_2018\\ny\\ny_sedd_2017_core.yml", "original_file_path": "models\\docs\\state\\sedd\\2016_2018\\ny\\ny_sedd_2017_core.yml", "name": "NY_SEDD_2017_CORE", "source_name": "SEDD", "source_description": "## Abstract: HCUP State Emergency Department Databases (SEDD)\r\nThe State Emergency Department Databases (SEDD) are part of the Healthcare Cost and Utilization Project (HCUP), sponsored by the Agency for Healthcare Research and Quality (AHRQ).\r\n\r\nThe HCUP State Emergency Department Databases (SEDD) are a powerful set of databases that capture discharge information on all emergency department visits that do not result in an admission. Information on patients initially seen in the emergency room and then admitted to the hospital is included in the HCUP State Inpatient Databases (SID). To enumerate all emergency department visits, SEDD discharges should be combined with SID discharges that originate in the emergency department.\r\n\r\n- The SEDD contain the emergency department encounter abstracts from hospital-affiliated emergency departments in participating States, translated into a uniform format to facilitate multistate comparisons and analyses.\r\n- The SEDD contain a core set of clinical and nonclinical information on all visits, regardless of the expected payer, including but not limited to Medicare, Medicaid, private insurance, self-pay, or those billed as 'no charge'.\r\n- In addition to the core set of uniform data elements common to all SEDD, some State data include other elements such as the patient's race.\r\n\r\nResearchers and policymakers use the SEDD to investigate access to healthcare in a changing healthcare marketplace; identify State-specific trends in emergency department utilization, access, charges, and outcomes; and conduct market-area research and small-area variation analyses.\r\n\r\nThe individual State databases are in the same HCUP uniform format and represent 100 percent of records processed by AHRQ. However, the participating data organizations control the release of specific data elements. AHRQ is currently assisting the data organizations in the release of the 1999-2021 SEDD.\r\n\r\nThe SEDD can be linked to hospital-level data from the American Hospital Association (AHA) Annual Survey of Hospitals and county-level data from the Bureau of Health Professions' Area Resource File (ARF), except in States that do not allow the release of hospital identifiers.\r\n\r\nThirty of the data organizations participating in HCUP have agreed to release their SEDD files through the HCUP Central Distributor under the auspices of AHRQ. Uses are limited to research, analysis, and aggregate statistical reporting.\r\n\r\nUseful links include: \r\n\r\n- [SEDD database home page](https://www.hcup-us.ahrq.gov/db/state/sedddbdocumentation.jsp)\r\n- [Intro to SEDD database](https://www.hcup-us.ahrq.gov/db/state/sedddist/SEDD_Introduction.jsp)\r\n\r\n## Introduction to SEDD\r\n\r\n#### Overview\r\n\r\nThe Healthcare Cost and Utilization Project (HCUP) State Emergency Department Databases (SEDD) consist of individual data files from 42 participating data organizations. The SEDD contain information on emergency department (ED) visits to hospital-affiliated emergency departments that do not result in admissions. Information on patients initially seen in the emergency room and then admitted to the hospital is included in the HCUP State Inpatient Databases (SID). Composition and completeness of data files may vary from State to State. The SEDD are annual, State-specific files that share a common structure and common data elements. Most data elements are coded in a uniform format across all States. In addition to the core set of uniform data elements, the SEDD include State-specific data elements or data elements available only for a limited number of States. The uniform format of the SEDD helps facilitate cross-State comparisons. In addition, the SEDD, in combination with the SID, are well suited for research that requires complete enumeration of hospitals and emergency room encounters within market areas or States.\r\n\r\nThirty of the 42 participating data organizations have agreed to release their SEDD files through the HCUP Central Distributor under the auspices of AHRQ. The individual State databases are in the same HCUP uniform format. In general, they represent 100 percent of records processed by AHRQ. However, the participating data organizations control the release of specific data elements. AHRQ is currently assisting the data organizations in the release of the 1999-2021 SEDD.\r\n\r\nSEDD data sets are currently available for multiple States and years. Each release of the SEDD includes:\r\n\r\n- Data in American Standard Code for Information Interchange (ASCII) format on a compact disc with read-only memory CD-ROM.\r\n- Patient-level discharge abstract data in participating States for 100 percent of discharges from hospital-affiliated emergency departments that do not result in admissions.\r\n- American Hospital Association (AHA) Linkage File to link the SEDD to data from the AHA Annual Survey of Hospitals. This is only available for States that allow the release of hospital identifiers.\r\n\r\nThe SEDD are calendar year files for all data years except 2015. Because of the transition to ICD-10-CM/PCS1 on October 1, 2015, the 2015 SEDD are split into two parts. Nine months of the 2015 data with ICD-9-CM2 codes (discharges from Jan 1, 2015 - September 30, 2015) are in one set of files labeled Q1Q3. Three months of 2015 data with ICD-10-CM/PCS codes (discharges from October 1, 2015 - December 31, 2015) are in a separate set of files labeled Q4. More information about the changes to the HCUP databases for ICD-10-CM/PCS and use of data across the two coding system may be found on the HCUP User Support website under ICD-10-CM/PCS Resources (www.hcup-us.ahrq.gov/datainnovations/icd10_resources.jsp).\r\n\r\nSEDD documentation and tools\u2014including file specifications, programming source code for loading ASCII data into SAS (SAS Institute Inc.; Cary, NC), SPSS (IBM Corp.; Somers, NY), and Stata (StataCorp; College Station, TX), and value labels\u00e2\u20ac\u201dare available online at the HCUP User Support website www.hcup-us.ahrq.gov.\r\n\r\nStarting with the 2006 SEDD, the AHA Linkage files are available via the HCUP User Support website www.hcup-us.ahrq.gov. The AHA Linkage files may not be available when the discharge-level database is released.\r\n\r\n#### How the HCUP SEDD Differ from State Data Files\r\n\r\nThe SEDD available through the HCUP Central Distributor differ from the data files available from the data organizations in the following ways:\r\n\r\n- Data elements available on the files\r\n- Coding of data elements\r\n\r\nBecause the data organizations dictate the data elements that may be released through the HCUP Central Distributor, the data elements on the SEDD are a subset of the data collected by the corresponding data organizations. HCUP uniform coding is used on most data elements on the SEDD. A few State-specific data elements retain the original values provided by the respective data organizations.\r\n\r\n#### What is the File Structure of the SEDD in the 2019-2021 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n- Diagnosis and Procedure Groups file\r\n\r\n#### What Types of Facilities Are Included in the SEDD?\r\n\r\nThe types of hospitals are included in the SEDD depend on the information provided by the data organizations. Most State government data organizations provide information on all acute care hospitals in the respective State. Private data organizations are often restricted to member hospitals and may not provide information on all hospitals in their State. All hospitals reported by the data organizations are retained in the SEDD files.\r\n\r\nTables showing the number of hospitals in the SEDD can be found online at the HCUP User Support website (www.hcup-us.ahrq.gov). The tables present the hospitals by the number of:\r\n\r\n- Community hospitals\r\n- Hospitals not classified as community\r\n- Community hospitals not in the SEDD\r\n\r\nThe only reason a hospital is not included in the SEDD is if the data organization did not supply the necessary data.\r\n\r\nInformation contained in the AHA Annual Survey of Hospitals was used to determine if a hospital was a community hospital. Community hospitals, as defined by AHA, include \"all nonfederal, short term, general and other specialty hospitals, excluding hospital units of institutions.\" Included among community hospitals are academic medical centers and specialty hospitals such as obstetrics, gynecology, otolaryngology, short term rehabilitation, orthopedic, and pediatric hospitals. Noncommunity hospitals include Federal hospitals (e.g., Veterans Affairs, Department of Defense, and Indian Health Service hospitals), long-term hospitals, psychiatric hospitals, alcohol/chemical dependency treatment facilities, and hospital units within institutions such as prisons.\r\n\r\nSome hospitals could not be categorized as community or noncommunity hospitals because they could not be matched with AHA information. This occurs when a hospital was closed in a previous year or when the hospital does not report to the AHA.\r\n\r\n#### What is the File Structure of the SEDD in the 2019-2021 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n- Diagnosis and Procedure Groups file\r\n\r\n#### What is the File Structure of the SEDD in the 2016-2018 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the 2016 SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n\r\nUnavailable with the 2016-2018 SEDD is the Diagnosis and Procedure Groups file that had been included with the SEDD in prior data years. The data elements included in that file were derived from AHRQ software tools. If you are interested in applying the AHRQ software tools to the ICD-10-CM/PCS data in the 2016-2018 SEDD, beta versions of the AHRQ software tools are available on the HCUP User Support website at www.hcup-us.ahrq.gov/tools_software.jsp. Also available is a tutorial on how to apply the AHRQ software tools to the HCUP databases at www.hcup-us.ahrq.gov/tech_assist/tutorials.jsp.", "loader": "", "identifier": "NY_SEDD_2017_CORE", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "NY SEDD 2017 CORE file. The Core file is a discharge-level file that contains:\r\n\r\n- Core data elements that form the nucleus of the SEDD\r\n- State-specific data elements intended for limited use\r\n\r\nCore data elements meet at least one of the following criteria:\r\n\r\n- Are available from all or nearly all data sources\r\n- Lend themselves to uniform coding across sources\r\n- Are needed for traditional applications (e.g., patient age, sex)\r\n\r\nState-specific data elements meet at least one of the following criteria:\r\n\r\n- Are available from a limited number of sources\r\n- Do not lend themselves to uniform coding across sources\r\n- Are not needed for traditional applications\r\n\r\nThe Core file is a discharge-level file with one observation per discharge abstract.", "columns": {"AGE": {"name": "AGE", "description": "Age in years at admission", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AGEDAY": {"name": "AGEDAY", "description": "Age in days (when age < 1 year)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AGEMONTH": {"name": "AGEMONTH", "description": "Age in months (when age < 11 years)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AHOUR": {"name": "AHOUR", "description": "Admission Hour", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AMONTH": {"name": "AMONTH", "description": "Admission month", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "ANESTH": {"name": "ANESTH", "description": "Method of anesthesia", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AWEEKEND": {"name": "AWEEKEND", "description": "Admission day is a weekend", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPT1": {"name": "CPT1", "description": "CPT/HCPCS procedure code 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT2": {"name": "CPT2", "description": "CPT/HCPCS procedure code 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT3": {"name": "CPT3", "description": "CPT/HCPCS procedure code 3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT4": {"name": "CPT4", "description": "CPT/HCPCS procedure code 4", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT5": {"name": "CPT5", "description": "CPT/HCPCS procedure code 5", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT6": {"name": "CPT6", "description": "CPT/HCPCS procedure code 6", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT7": {"name": "CPT7", "description": "CPT/HCPCS procedure code 7", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT8": {"name": "CPT8", "description": "CPT/HCPCS procedure code 8", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT9": {"name": "CPT9", "description": "CPT/HCPCS procedure code 9", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT10": {"name": "CPT10", "description": "CPT/HCPCS procedure code 10", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT11": {"name": "CPT11", "description": "CPT/HCPCS procedure code 11", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT12": {"name": "CPT12", "description": "CPT/HCPCS procedure code 12", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT13": {"name": "CPT13", "description": "CPT/HCPCS procedure code 13", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT14": {"name": "CPT14", "description": "CPT/HCPCS procedure code 14", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT15": {"name": "CPT15", "description": "CPT/HCPCS procedure code 15", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT16": {"name": "CPT16", "description": "CPT/HCPCS procedure code 16", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT17": {"name": "CPT17", "description": "CPT/HCPCS procedure code 17", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT18": {"name": "CPT18", "description": "CPT/HCPCS procedure code 18", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT19": {"name": "CPT19", "description": "CPT/HCPCS procedure code 19", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT20": {"name": "CPT20", "description": "CPT/HCPCS procedure code 20", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT21": {"name": "CPT21", "description": "CPT/HCPCS procedure code 21", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT22": {"name": "CPT22", "description": "CPT/HCPCS procedure code 22", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT23": {"name": "CPT23", "description": "CPT/HCPCS procedure code 23", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT24": {"name": "CPT24", "description": "CPT/HCPCS procedure code 24", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT25": {"name": "CPT25", "description": "CPT/HCPCS procedure code 25", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT26": {"name": "CPT26", "description": "CPT/HCPCS procedure code 26", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT27": {"name": "CPT27", "description": "CPT/HCPCS procedure code 27", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT28": {"name": "CPT28", "description": "CPT/HCPCS procedure code 28", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT29": {"name": "CPT29", "description": "CPT/HCPCS procedure code 29", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT30": {"name": "CPT30", "description": "CPT/HCPCS procedure code 30", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT31": {"name": "CPT31", "description": "CPT/HCPCS procedure code 31", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT32": {"name": "CPT32", "description": "CPT/HCPCS procedure code 32", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT33": {"name": "CPT33", "description": "CPT/HCPCS procedure code 33", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT34": {"name": "CPT34", "description": "CPT/HCPCS procedure code 34", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT35": {"name": "CPT35", "description": "CPT/HCPCS procedure code 35", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT36": {"name": "CPT36", "description": "CPT/HCPCS procedure code 36", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT37": {"name": "CPT37", "description": "CPT/HCPCS procedure code 37", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT38": {"name": "CPT38", "description": "CPT/HCPCS procedure code 38", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT39": {"name": "CPT39", "description": "CPT/HCPCS procedure code 39", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT40": {"name": "CPT40", "description": "CPT/HCPCS procedure code 40", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT41": {"name": "CPT41", "description": "CPT/HCPCS procedure code 41", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT42": {"name": "CPT42", "description": "CPT/HCPCS procedure code 42", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT43": {"name": "CPT43", "description": "CPT/HCPCS procedure code 43", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT44": {"name": "CPT44", "description": "CPT/HCPCS procedure code 44", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT45": {"name": "CPT45", "description": "CPT/HCPCS procedure code 45", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT46": {"name": "CPT46", "description": "CPT/HCPCS procedure code 46", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT47": {"name": "CPT47", "description": "CPT/HCPCS procedure code 47", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT48": {"name": "CPT48", "description": "CPT/HCPCS procedure code 48", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT49": {"name": "CPT49", "description": "CPT/HCPCS procedure code 49", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT50": {"name": "CPT50", "description": "CPT/HCPCS procedure code 50", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT51": {"name": "CPT51", "description": "CPT/HCPCS procedure code 51", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT52": {"name": "CPT52", "description": "CPT/HCPCS procedure code 52", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT53": {"name": "CPT53", "description": "CPT/HCPCS procedure code 53", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT54": {"name": "CPT54", "description": "CPT/HCPCS procedure code 54", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT55": {"name": "CPT55", "description": "CPT/HCPCS procedure code 55", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT56": {"name": "CPT56", "description": "CPT/HCPCS procedure code 56", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT57": {"name": "CPT57", "description": "CPT/HCPCS procedure code 57", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT58": {"name": "CPT58", "description": "CPT/HCPCS procedure code 58", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT59": {"name": "CPT59", "description": "CPT/HCPCS procedure code 59", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT60": {"name": "CPT60", "description": "CPT/HCPCS procedure code 60", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT61": {"name": "CPT61", "description": "CPT/HCPCS procedure code 61", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT62": {"name": "CPT62", "description": "CPT/HCPCS procedure code 62", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT63": {"name": "CPT63", "description": "CPT/HCPCS procedure code 63", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT64": {"name": "CPT64", "description": "CPT/HCPCS procedure code 64", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT65": {"name": "CPT65", "description": "CPT/HCPCS procedure code 65", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT66": {"name": "CPT66", "description": "CPT/HCPCS procedure code 66", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT67": {"name": "CPT67", "description": "CPT/HCPCS procedure code 67", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT68": {"name": "CPT68", "description": "CPT/HCPCS procedure code 68", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT69": {"name": "CPT69", "description": "CPT/HCPCS procedure code 69", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT70": {"name": "CPT70", "description": "CPT/HCPCS procedure code 70", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT71": {"name": "CPT71", "description": "CPT/HCPCS procedure code 71", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT72": {"name": "CPT72", "description": "CPT/HCPCS procedure code 72", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT73": {"name": "CPT73", "description": "CPT/HCPCS procedure code 73", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT74": {"name": "CPT74", "description": "CPT/HCPCS procedure code 74", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT75": {"name": "CPT75", "description": "CPT/HCPCS procedure code 75", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT76": {"name": "CPT76", "description": "CPT/HCPCS procedure code 76", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT77": {"name": "CPT77", "description": "CPT/HCPCS procedure code 77", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT78": {"name": "CPT78", "description": "CPT/HCPCS procedure code 78", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT79": {"name": "CPT79", "description": "CPT/HCPCS procedure code 79", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT80": {"name": "CPT80", "description": "CPT/HCPCS procedure code 80", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT81": {"name": "CPT81", "description": "CPT/HCPCS procedure code 81", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT82": {"name": "CPT82", "description": "CPT/HCPCS procedure code 82", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT83": {"name": "CPT83", "description": "CPT/HCPCS procedure code 83", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT84": {"name": "CPT84", "description": "CPT/HCPCS procedure code 84", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT85": {"name": "CPT85", "description": "CPT/HCPCS procedure code 85", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT86": {"name": "CPT86", "description": "CPT/HCPCS procedure code 86", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT87": {"name": "CPT87", "description": "CPT/HCPCS procedure code 87", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT88": {"name": "CPT88", "description": "CPT/HCPCS procedure code 88", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT89": {"name": "CPT89", "description": "CPT/HCPCS procedure code 89", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT90": {"name": "CPT90", "description": "CPT/HCPCS procedure code 90", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT91": {"name": "CPT91", "description": "CPT/HCPCS procedure code 91", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT92": {"name": "CPT92", "description": "CPT/HCPCS procedure code 92", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT93": {"name": "CPT93", "description": "CPT/HCPCS procedure code 93", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT94": {"name": "CPT94", "description": "CPT/HCPCS procedure code 94", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT95": {"name": "CPT95", "description": "CPT/HCPCS procedure code 95", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT96": {"name": "CPT96", "description": "CPT/HCPCS procedure code 96", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT97": {"name": "CPT97", "description": "CPT/HCPCS procedure code 97", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT98": {"name": "CPT98", "description": "CPT/HCPCS procedure code 98", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT99": {"name": "CPT99", "description": "CPT/HCPCS procedure code 99", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT100": {"name": "CPT100", "description": "CPT/HCPCS procedure code 100", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTCCS1": {"name": "CPTCCS1", "description": "CCS: CPT 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS2": {"name": "CPTCCS2", "description": "CCS: CPT 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS3": {"name": "CPTCCS3", "description": "CCS: CPT 3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS4": {"name": "CPTCCS4", "description": "CCS: CPT 4", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS5": {"name": "CPTCCS5", "description": "CCS: CPT 5", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS6": {"name": "CPTCCS6", "description": "CCS: CPT 6", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS7": {"name": "CPTCCS7", "description": "CCS: CPT 7", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS8": {"name": "CPTCCS8", "description": "CCS: CPT 8", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS9": {"name": "CPTCCS9", "description": "CCS: CPT 9", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS10": {"name": "CPTCCS10", "description": "CCS: CPT 10", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS11": {"name": "CPTCCS11", "description": "CCS: CPT 11", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS12": {"name": "CPTCCS12", "description": "CCS: CPT 12", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS13": {"name": "CPTCCS13", "description": "CCS: CPT 13", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS14": {"name": "CPTCCS14", "description": "CCS: CPT 14", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS15": {"name": "CPTCCS15", "description": "CCS: CPT 15", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS16": {"name": "CPTCCS16", "description": "CCS: CPT 16", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS17": {"name": "CPTCCS17", "description": "CCS: CPT 17", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS18": {"name": "CPTCCS18", "description": "CCS: CPT 18", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS19": {"name": "CPTCCS19", "description": "CCS: CPT 19", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS20": {"name": "CPTCCS20", "description": "CCS: CPT 20", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS21": {"name": "CPTCCS21", "description": "CCS: CPT 21", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS22": {"name": "CPTCCS22", "description": "CCS: CPT 22", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS23": {"name": "CPTCCS23", "description": "CCS: CPT 23", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS24": {"name": "CPTCCS24", "description": "CCS: CPT 24", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS25": {"name": "CPTCCS25", "description": "CCS: CPT 25", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS26": {"name": "CPTCCS26", "description": "CCS: CPT 26", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS27": {"name": "CPTCCS27", "description": "CCS: CPT 27", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS28": {"name": "CPTCCS28", "description": "CCS: CPT 28", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS29": {"name": "CPTCCS29", "description": "CCS: CPT 29", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS30": {"name": "CPTCCS30", "description": "CCS: CPT 30", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS31": {"name": "CPTCCS31", "description": "CCS: CPT 31", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS32": {"name": "CPTCCS32", "description": "CCS: CPT 32", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS33": {"name": "CPTCCS33", "description": "CCS: CPT 33", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS34": {"name": "CPTCCS34", "description": "CCS: CPT 34", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS35": {"name": "CPTCCS35", "description": "CCS: CPT 35", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS36": {"name": "CPTCCS36", "description": "CCS: CPT 36", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS37": {"name": "CPTCCS37", "description": "CCS: CPT 37", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS38": {"name": "CPTCCS38", "description": "CCS: CPT 38", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS39": {"name": "CPTCCS39", "description": "CCS: CPT 39", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS40": {"name": "CPTCCS40", "description": "CCS: CPT 40", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS41": {"name": "CPTCCS41", "description": "CCS: CPT 41", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS42": {"name": "CPTCCS42", "description": "CCS: CPT 42", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS43": {"name": "CPTCCS43", "description": "CCS: CPT 43", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS44": {"name": "CPTCCS44", "description": "CCS: CPT 44", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS45": {"name": "CPTCCS45", "description": "CCS: CPT 45", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS46": {"name": "CPTCCS46", "description": "CCS: CPT 46", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS47": {"name": "CPTCCS47", "description": "CCS: CPT 47", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS48": {"name": "CPTCCS48", "description": "CCS: CPT 48", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS49": {"name": "CPTCCS49", "description": "CCS: CPT 49", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS50": {"name": "CPTCCS50", "description": "CCS: CPT 50", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS51": {"name": "CPTCCS51", "description": "CCS: CPT 51", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS52": {"name": "CPTCCS52", "description": "CCS: CPT 52", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS53": {"name": "CPTCCS53", "description": "CCS: CPT 53", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS54": {"name": "CPTCCS54", "description": "CCS: CPT 54", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS55": {"name": "CPTCCS55", "description": "CCS: CPT 55", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS56": {"name": "CPTCCS56", "description": "CCS: CPT 56", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS57": {"name": "CPTCCS57", "description": "CCS: CPT 57", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS58": {"name": "CPTCCS58", "description": "CCS: CPT 58", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS59": {"name": "CPTCCS59", "description": "CCS: CPT 59", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS60": {"name": "CPTCCS60", "description": "CCS: CPT 60", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS61": {"name": "CPTCCS61", "description": "CCS: CPT 61", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS62": {"name": "CPTCCS62", "description": "CCS: CPT 62", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS63": {"name": "CPTCCS63", "description": "CCS: CPT 63", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS64": {"name": "CPTCCS64", "description": "CCS: CPT 64", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS65": {"name": "CPTCCS65", "description": "CCS: CPT 65", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS66": {"name": "CPTCCS66", "description": "CCS: CPT 66", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS67": {"name": "CPTCCS67", "description": "CCS: CPT 67", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS68": {"name": "CPTCCS68", "description": "CCS: CPT 68", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS69": {"name": "CPTCCS69", "description": "CCS: CPT 69", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS70": {"name": "CPTCCS70", "description": "CCS: CPT 70", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS71": {"name": "CPTCCS71", "description": "CCS: CPT 71", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS72": {"name": "CPTCCS72", "description": "CCS: CPT 72", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS73": {"name": "CPTCCS73", "description": "CCS: CPT 73", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS74": {"name": "CPTCCS74", "description": "CCS: CPT 74", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS75": {"name": "CPTCCS75", "description": "CCS: CPT 75", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS76": {"name": "CPTCCS76", "description": "CCS: CPT 76", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS77": {"name": "CPTCCS77", "description": "CCS: CPT 77", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS78": {"name": "CPTCCS78", "description": "CCS: CPT 78", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS79": {"name": "CPTCCS79", "description": "CCS: CPT 79", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS80": {"name": "CPTCCS80", "description": "CCS: CPT 80", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS81": {"name": "CPTCCS81", "description": "CCS: CPT 81", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS82": {"name": "CPTCCS82", "description": "CCS: CPT 82", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS83": {"name": "CPTCCS83", "description": "CCS: CPT 83", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS84": {"name": "CPTCCS84", "description": "CCS: CPT 84", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS85": {"name": "CPTCCS85", "description": "CCS: CPT 85", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS86": {"name": "CPTCCS86", "description": "CCS: CPT 86", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS87": {"name": "CPTCCS87", "description": "CCS: CPT 87", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS88": {"name": "CPTCCS88", "description": "CCS: CPT 88", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS89": {"name": "CPTCCS89", "description": "CCS: CPT 89", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS90": {"name": "CPTCCS90", "description": "CCS: CPT 90", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS91": {"name": "CPTCCS91", "description": "CCS: CPT 91", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS92": {"name": "CPTCCS92", "description": "CCS: CPT 92", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS93": {"name": "CPTCCS93", "description": "CCS: CPT 93", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS94": {"name": "CPTCCS94", "description": "CCS: CPT 94", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS95": {"name": "CPTCCS95", "description": "CCS: CPT 95", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS96": {"name": "CPTCCS96", "description": "CCS: CPT 96", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS97": {"name": "CPTCCS97", "description": "CCS: CPT 97", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS98": {"name": "CPTCCS98", "description": "CCS: CPT 98", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS99": {"name": "CPTCCS99", "description": "CCS: CPT 99", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS100": {"name": "CPTCCS100", "description": "CCS: CPT 100", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY1": {"name": "CPTDAY1", "description": "Number of days from admission to CPT1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY2": {"name": "CPTDAY2", "description": "Number of days from admission to CPT2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY3": {"name": "CPTDAY3", "description": "Number of days from admission to CPT3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY4": {"name": "CPTDAY4", "description": "Number of days from admission to CPT4", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY5": {"name": "CPTDAY5", "description": "Number of days from admission to CPT5", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY6": {"name": "CPTDAY6", "description": "Number of days from admission to CPT6", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY7": {"name": "CPTDAY7", "description": "Number of days from admission to CPT7", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY8": {"name": "CPTDAY8", "description": "Number of days from admission to CPT8", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY9": {"name": "CPTDAY9", "description": "Number of days from admission to CPT9", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY10": {"name": "CPTDAY10", "description": "Number of days from admission to CPT10", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY11": {"name": "CPTDAY11", "description": "Number of days from admission to CPT11", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY12": {"name": "CPTDAY12", "description": "Number of days from admission to CPT12", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY13": {"name": "CPTDAY13", "description": "Number of days from admission to CPT13", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY14": {"name": "CPTDAY14", "description": "Number of days from admission to CPT14", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY15": {"name": "CPTDAY15", "description": "Number of days from admission to CPT15", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY16": {"name": "CPTDAY16", "description": "Number of days from admission to CPT16", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY17": {"name": "CPTDAY17", "description": "Number of days from admission to CPT17", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY18": {"name": "CPTDAY18", "description": "Number of days from admission to CPT18", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY19": {"name": "CPTDAY19", "description": "Number of days from admission to CPT19", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY20": {"name": "CPTDAY20", "description": "Number of days from admission to CPT20", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY21": {"name": "CPTDAY21", "description": "Number of days from admission to CPT21", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY22": {"name": "CPTDAY22", "description": "Number of days from admission to CPT22", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY23": {"name": "CPTDAY23", "description": "Number of days from admission to CPT23", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY24": {"name": "CPTDAY24", "description": "Number of days from admission to CPT24", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY25": {"name": "CPTDAY25", "description": "Number of days from admission to CPT25", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY26": {"name": "CPTDAY26", "description": "Number of days from admission to CPT26", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY27": {"name": "CPTDAY27", "description": "Number of days from admission to CPT27", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY28": {"name": "CPTDAY28", "description": "Number of days from admission to CPT28", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY29": {"name": "CPTDAY29", "description": "Number of days from admission to CPT29", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY30": {"name": "CPTDAY30", "description": "Number of days from admission to CPT30", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY31": {"name": "CPTDAY31", "description": "Number of days from admission to CPT31", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY32": {"name": "CPTDAY32", "description": "Number of days from admission to CPT32", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY33": {"name": "CPTDAY33", "description": "Number of days from admission to CPT33", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY34": {"name": "CPTDAY34", "description": "Number of days from admission to CPT34", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY35": {"name": "CPTDAY35", "description": "Number of days from admission to CPT35", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY36": {"name": "CPTDAY36", "description": "Number of days from admission to CPT36", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY37": {"name": "CPTDAY37", "description": "Number of days from admission to CPT37", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY38": {"name": "CPTDAY38", "description": "Number of days from admission to CPT38", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY39": {"name": "CPTDAY39", "description": "Number of days from admission to CPT39", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY40": {"name": "CPTDAY40", "description": "Number of days from admission to CPT40", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY41": {"name": "CPTDAY41", "description": "Number of days from admission to CPT41", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY42": {"name": "CPTDAY42", "description": "Number of days from admission to CPT42", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY43": {"name": "CPTDAY43", "description": "Number of days from admission to CPT43", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY44": {"name": "CPTDAY44", "description": "Number of days from admission to CPT44", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY45": {"name": "CPTDAY45", "description": "Number of days from admission to CPT45", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY46": {"name": "CPTDAY46", "description": "Number of days from admission to CPT46", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY47": {"name": "CPTDAY47", "description": "Number of days from admission to CPT47", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY48": {"name": "CPTDAY48", "description": "Number of days from admission to CPT48", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY49": {"name": "CPTDAY49", "description": "Number of days from admission to CPT49", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY50": {"name": "CPTDAY50", "description": "Number of days from admission to CPT50", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY51": {"name": "CPTDAY51", "description": "Number of days from admission to CPT51", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY52": {"name": "CPTDAY52", "description": "Number of days from admission to CPT52", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY53": {"name": "CPTDAY53", "description": "Number of days from admission to CPT53", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY54": {"name": "CPTDAY54", "description": "Number of days from admission to CPT54", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY55": {"name": "CPTDAY55", "description": "Number of days from admission to CPT55", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY56": {"name": "CPTDAY56", "description": "Number of days from admission to CPT56", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY57": {"name": "CPTDAY57", "description": "Number of days from admission to CPT57", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY58": {"name": "CPTDAY58", "description": "Number of days from admission to CPT58", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY59": {"name": "CPTDAY59", "description": "Number of days from admission to CPT59", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY60": {"name": "CPTDAY60", "description": "Number of days from admission to CPT60", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY61": {"name": "CPTDAY61", "description": "Number of days from admission to CPT61", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY62": {"name": "CPTDAY62", "description": "Number of days from admission to CPT62", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY63": {"name": "CPTDAY63", "description": "Number of days from admission to CPT63", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY64": {"name": "CPTDAY64", "description": "Number of days from admission to CPT64", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY65": {"name": "CPTDAY65", "description": "Number of days from admission to CPT65", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY66": {"name": "CPTDAY66", "description": "Number of days from admission to CPT66", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY67": {"name": "CPTDAY67", "description": "Number of days from admission to CPT67", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY68": {"name": "CPTDAY68", "description": "Number of days from admission to CPT68", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY69": {"name": "CPTDAY69", "description": "Number of days from admission to CPT69", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY70": {"name": "CPTDAY70", "description": "Number of days from admission to CPT70", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY71": {"name": "CPTDAY71", "description": "Number of days from admission to CPT71", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY72": {"name": "CPTDAY72", "description": "Number of days from admission to CPT72", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY73": {"name": "CPTDAY73", "description": "Number of days from admission to CPT73", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY74": {"name": "CPTDAY74", "description": "Number of days from admission to CPT74", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY75": {"name": "CPTDAY75", "description": "Number of days from admission to CPT75", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY76": {"name": "CPTDAY76", "description": "Number of days from admission to CPT76", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY77": {"name": "CPTDAY77", "description": "Number of days from admission to CPT77", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY78": {"name": "CPTDAY78", "description": "Number of days from admission to CPT78", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY79": {"name": "CPTDAY79", "description": "Number of days from admission to CPT79", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY80": {"name": "CPTDAY80", "description": "Number of days from admission to CPT80", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY81": {"name": "CPTDAY81", "description": "Number of days from admission to CPT81", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY82": {"name": "CPTDAY82", "description": "Number of days from admission to CPT82", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY83": {"name": "CPTDAY83", "description": "Number of days from admission to CPT83", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY84": {"name": "CPTDAY84", "description": "Number of days from admission to CPT84", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY85": {"name": "CPTDAY85", "description": "Number of days from admission to CPT85", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY86": {"name": "CPTDAY86", "description": "Number of days from admission to CPT86", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY87": {"name": "CPTDAY87", "description": "Number of days from admission to CPT87", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY88": {"name": "CPTDAY88", "description": "Number of days from admission to CPT88", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY89": {"name": "CPTDAY89", "description": "Number of days from admission to CPT89", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY90": {"name": "CPTDAY90", "description": "Number of days from admission to CPT90", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY91": {"name": "CPTDAY91", "description": "Number of days from admission to CPT91", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY92": {"name": "CPTDAY92", "description": "Number of days from admission to CPT92", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY93": {"name": "CPTDAY93", "description": "Number of days from admission to CPT93", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY94": {"name": "CPTDAY94", "description": "Number of days from admission to CPT94", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY95": {"name": "CPTDAY95", "description": "Number of days from admission to CPT95", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY96": {"name": "CPTDAY96", "description": "Number of days from admission to CPT96", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY97": {"name": "CPTDAY97", "description": "Number of days from admission to CPT97", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY98": {"name": "CPTDAY98", "description": "Number of days from admission to CPT98", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY99": {"name": "CPTDAY99", "description": "Number of days from admission to CPT99", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY100": {"name": "CPTDAY100", "description": "Number of days from admission to CPT100", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTM1_1": {"name": "CPTM1_1", "description": "First CPT-4/HCPCS modifier 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_2": {"name": "CPTM1_2", "description": "First CPT-4/HCPCS modifier 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_3": {"name": "CPTM1_3", "description": "First CPT-4/HCPCS modifier 3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_4": {"name": "CPTM1_4", "description": "First CPT-4/HCPCS modifier 4", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_5": {"name": "CPTM1_5", "description": "First CPT-4/HCPCS modifier 5", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_6": {"name": "CPTM1_6", "description": "First CPT-4/HCPCS modifier 6", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_7": {"name": "CPTM1_7", "description": "First CPT-4/HCPCS modifier 7", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_8": {"name": "CPTM1_8", "description": "First CPT-4/HCPCS modifier 8", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_9": {"name": "CPTM1_9", "description": "First CPT-4/HCPCS modifier 9", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_10": {"name": "CPTM1_10", "description": "First CPT-4/HCPCS modifier 10", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_11": {"name": "CPTM1_11", "description": "First CPT-4/HCPCS modifier 11", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_12": {"name": "CPTM1_12", "description": "First CPT-4/HCPCS modifier 12", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_13": {"name": "CPTM1_13", "description": "First CPT-4/HCPCS modifier 13", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_14": {"name": "CPTM1_14", "description": "First CPT-4/HCPCS modifier 14", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_15": {"name": "CPTM1_15", "description": "First CPT-4/HCPCS modifier 15", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_16": {"name": "CPTM1_16", "description": "First CPT-4/HCPCS modifier 16", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_17": {"name": "CPTM1_17", "description": "First CPT-4/HCPCS modifier 17", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_18": {"name": "CPTM1_18", "description": "First CPT-4/HCPCS modifier 18", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_19": {"name": "CPTM1_19", "description": "First CPT-4/HCPCS modifier 19", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_20": {"name": "CPTM1_20", "description": "First CPT-4/HCPCS modifier 20", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_21": {"name": "CPTM1_21", "description": "First CPT-4/HCPCS modifier 21", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_22": {"name": "CPTM1_22", "description": "First CPT-4/HCPCS modifier 22", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_23": {"name": "CPTM1_23", "description": "First CPT-4/HCPCS modifier 23", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_24": {"name": "CPTM1_24", "description": "First CPT-4/HCPCS modifier 24", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_25": {"name": "CPTM1_25", "description": "First CPT-4/HCPCS modifier 25", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_26": {"name": "CPTM1_26", "description": "First CPT-4/HCPCS modifier 26", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_27": {"name": "CPTM1_27", "description": "First CPT-4/HCPCS modifier 27", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_28": {"name": "CPTM1_28", "description": "First CPT-4/HCPCS modifier 28", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_29": {"name": "CPTM1_29", "description": "First CPT-4/HCPCS modifier 29", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_30": {"name": "CPTM1_30", "description": "First CPT-4/HCPCS modifier 30", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_31": {"name": "CPTM1_31", "description": "First CPT-4/HCPCS modifier 31", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_32": {"name": "CPTM1_32", "description": "First CPT-4/HCPCS modifier 32", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_33": {"name": "CPTM1_33", "description": "First CPT-4/HCPCS modifier 33", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_34": {"name": "CPTM1_34", "description": "First CPT-4/HCPCS modifier 34", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_35": {"name": "CPTM1_35", "description": "First CPT-4/HCPCS modifier 35", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_36": {"name": "CPTM1_36", "description": "First CPT-4/HCPCS modifier 36", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_37": {"name": "CPTM1_37", "description": "First CPT-4/HCPCS modifier 37", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_38": {"name": "CPTM1_38", "description": "First CPT-4/HCPCS modifier 38", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_39": {"name": "CPTM1_39", "description": "First CPT-4/HCPCS modifier 39", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_40": {"name": "CPTM1_40", "description": "First CPT-4/HCPCS modifier 40", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_41": {"name": "CPTM1_41", "description": "First CPT-4/HCPCS modifier 41", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_42": {"name": "CPTM1_42", "description": "First CPT-4/HCPCS modifier 42", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_43": {"name": "CPTM1_43", "description": "First CPT-4/HCPCS modifier 43", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_44": {"name": "CPTM1_44", "description": "First CPT-4/HCPCS modifier 44", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_45": {"name": "CPTM1_45", "description": "First CPT-4/HCPCS modifier 45", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_46": {"name": "CPTM1_46", "description": "First CPT-4/HCPCS modifier 46", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_47": {"name": "CPTM1_47", "description": "First CPT-4/HCPCS modifier 47", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_48": {"name": "CPTM1_48", "description": "First CPT-4/HCPCS modifier 48", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_49": {"name": "CPTM1_49", "description": "First CPT-4/HCPCS modifier 49", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_50": {"name": "CPTM1_50", "description": "First CPT-4/HCPCS modifier 50", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_51": {"name": "CPTM1_51", "description": "First CPT-4/HCPCS modifier 51", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_52": {"name": "CPTM1_52", "description": "First CPT-4/HCPCS modifier 52", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_53": {"name": "CPTM1_53", "description": "First CPT-4/HCPCS modifier 53", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_54": {"name": "CPTM1_54", "description": "First CPT-4/HCPCS modifier 54", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_55": {"name": "CPTM1_55", "description": "First CPT-4/HCPCS modifier 55", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_56": {"name": "CPTM1_56", "description": "First CPT-4/HCPCS modifier 56", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_57": {"name": "CPTM1_57", "description": "First CPT-4/HCPCS modifier 57", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_58": {"name": "CPTM1_58", "description": "First CPT-4/HCPCS modifier 58", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_59": {"name": "CPTM1_59", "description": "First CPT-4/HCPCS modifier 59", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_60": {"name": "CPTM1_60", "description": "First CPT-4/HCPCS modifier 60", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_61": {"name": "CPTM1_61", "description": "First CPT-4/HCPCS modifier 61", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_62": {"name": "CPTM1_62", "description": "First CPT-4/HCPCS modifier 62", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_63": {"name": "CPTM1_63", "description": "First CPT-4/HCPCS modifier 63", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_64": {"name": "CPTM1_64", "description": "First CPT-4/HCPCS modifier 64", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_65": {"name": "CPTM1_65", "description": "First CPT-4/HCPCS modifier 65", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_66": {"name": "CPTM1_66", "description": "First CPT-4/HCPCS modifier 66", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_67": {"name": "CPTM1_67", "description": "First CPT-4/HCPCS modifier 67", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_68": {"name": "CPTM1_68", "description": "First CPT-4/HCPCS modifier 68", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_69": {"name": "CPTM1_69", "description": "First CPT-4/HCPCS modifier 69", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_70": {"name": "CPTM1_70", "description": "First CPT-4/HCPCS modifier 70", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_71": {"name": "CPTM1_71", "description": "First CPT-4/HCPCS modifier 71", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_72": {"name": "CPTM1_72", "description": "First CPT-4/HCPCS modifier 72", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_73": {"name": "CPTM1_73", "description": "First CPT-4/HCPCS modifier 73", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_74": {"name": "CPTM1_74", "description": "First CPT-4/HCPCS modifier 74", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_75": {"name": "CPTM1_75", "description": "First CPT-4/HCPCS modifier 75", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_76": {"name": "CPTM1_76", "description": "First CPT-4/HCPCS modifier 76", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_77": {"name": "CPTM1_77", "description": "First CPT-4/HCPCS modifier 77", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_78": {"name": "CPTM1_78", "description": "First CPT-4/HCPCS modifier 78", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_79": {"name": "CPTM1_79", "description": "First CPT-4/HCPCS modifier 79", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_80": {"name": "CPTM1_80", "description": "First CPT-4/HCPCS modifier 80", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_81": {"name": "CPTM1_81", "description": "First CPT-4/HCPCS modifier 81", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_82": {"name": "CPTM1_82", "description": "First CPT-4/HCPCS modifier 82", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_83": {"name": "CPTM1_83", "description": "First CPT-4/HCPCS modifier 83", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_84": {"name": "CPTM1_84", "description": "First CPT-4/HCPCS modifier 84", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_85": {"name": "CPTM1_85", "description": "First CPT-4/HCPCS modifier 85", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_86": {"name": "CPTM1_86", "description": "First CPT-4/HCPCS modifier 86", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_87": {"name": "CPTM1_87", "description": "First CPT-4/HCPCS modifier 87", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_88": {"name": "CPTM1_88", "description": "First CPT-4/HCPCS modifier 88", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_89": {"name": "CPTM1_89", "description": "First CPT-4/HCPCS modifier 89", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_90": {"name": "CPTM1_90", "description": "First CPT-4/HCPCS modifier 90", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_91": {"name": "CPTM1_91", "description": "First CPT-4/HCPCS modifier 91", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_92": {"name": "CPTM1_92", "description": "First CPT-4/HCPCS modifier 92", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_93": {"name": "CPTM1_93", "description": "First CPT-4/HCPCS modifier 93", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_94": {"name": "CPTM1_94", "description": "First CPT-4/HCPCS modifier 94", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_95": {"name": "CPTM1_95", "description": "First CPT-4/HCPCS modifier 95", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_96": {"name": "CPTM1_96", "description": "First CPT-4/HCPCS modifier 96", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_97": {"name": "CPTM1_97", "description": "First CPT-4/HCPCS modifier 97", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_98": {"name": "CPTM1_98", "description": "First CPT-4/HCPCS modifier 98", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_99": {"name": "CPTM1_99", "description": "First CPT-4/HCPCS modifier 99", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_100": {"name": "CPTM1_100", "description": "First CPT-4/HCPCS modifier 100", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_1": {"name": "CPTM2_1", "description": "Second CPT-4/HCPCS modifier 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_2": {"name": "CPTM2_2", "description": "Second CPT-4/HCPCS modifier 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_3": {"name": "CPTM2_3", "description": "Second CPT-4/HCPCS modifier 3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_4": {"name": "CPTM2_4", "description": "Second CPT-4/HCPCS modifier 4", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_5": {"name": "CPTM2_5", "description": "Second CPT-4/HCPCS modifier 5", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_6": {"name": "CPTM2_6", "description": "Second CPT-4/HCPCS modifier 6", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_7": {"name": "CPTM2_7", "description": "Second CPT-4/HCPCS modifier 7", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_8": {"name": "CPTM2_8", "description": "Second CPT-4/HCPCS modifier 8", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_9": {"name": "CPTM2_9", "description": "Second CPT-4/HCPCS modifier 9", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_10": {"name": "CPTM2_10", "description": "Second CPT-4/HCPCS modifier 10", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_11": {"name": "CPTM2_11", "description": "Second CPT-4/HCPCS modifier 11", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_12": {"name": "CPTM2_12", "description": "Second CPT-4/HCPCS modifier 12", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_13": {"name": "CPTM2_13", "description": "Second CPT-4/HCPCS modifier 13", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_14": {"name": "CPTM2_14", "description": "Second CPT-4/HCPCS modifier 14", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_15": {"name": "CPTM2_15", "description": "Second CPT-4/HCPCS modifier 15", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_16": {"name": "CPTM2_16", "description": "Second CPT-4/HCPCS modifier 16", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_17": {"name": "CPTM2_17", "description": "Second CPT-4/HCPCS modifier 17", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_18": {"name": "CPTM2_18", "description": "Second CPT-4/HCPCS modifier 18", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_19": {"name": "CPTM2_19", "description": "Second CPT-4/HCPCS modifier 19", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_20": {"name": "CPTM2_20", "description": "Second CPT-4/HCPCS modifier 20", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_21": {"name": "CPTM2_21", "description": "Second CPT-4/HCPCS modifier 21", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_22": {"name": "CPTM2_22", "description": "Second CPT-4/HCPCS modifier 22", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_23": {"name": "CPTM2_23", "description": "Second CPT-4/HCPCS modifier 23", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_24": {"name": "CPTM2_24", "description": "Second CPT-4/HCPCS modifier 24", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_25": {"name": "CPTM2_25", "description": "Second CPT-4/HCPCS modifier 25", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_26": {"name": "CPTM2_26", "description": "Second CPT-4/HCPCS modifier 26", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_27": {"name": "CPTM2_27", "description": "Second CPT-4/HCPCS modifier 27", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_28": {"name": "CPTM2_28", "description": "Second CPT-4/HCPCS modifier 28", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_29": {"name": "CPTM2_29", "description": "Second CPT-4/HCPCS modifier 29", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_30": {"name": "CPTM2_30", "description": "Second CPT-4/HCPCS modifier 30", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_31": {"name": "CPTM2_31", "description": "Second CPT-4/HCPCS modifier 31", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_32": {"name": "CPTM2_32", "description": "Second CPT-4/HCPCS modifier 32", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_33": {"name": "CPTM2_33", "description": "Second CPT-4/HCPCS modifier 33", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_34": {"name": "CPTM2_34", "description": "Second CPT-4/HCPCS modifier 34", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_35": {"name": "CPTM2_35", "description": "Second CPT-4/HCPCS modifier 35", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_36": {"name": "CPTM2_36", "description": "Second CPT-4/HCPCS modifier 36", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_37": {"name": "CPTM2_37", "description": "Second CPT-4/HCPCS modifier 37", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_38": {"name": "CPTM2_38", "description": "Second CPT-4/HCPCS modifier 38", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_39": {"name": "CPTM2_39", "description": "Second CPT-4/HCPCS modifier 39", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_40": {"name": "CPTM2_40", "description": "Second CPT-4/HCPCS modifier 40", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_41": {"name": "CPTM2_41", "description": "Second CPT-4/HCPCS modifier 41", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_42": {"name": "CPTM2_42", "description": "Second CPT-4/HCPCS modifier 42", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_43": {"name": "CPTM2_43", "description": "Second CPT-4/HCPCS modifier 43", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_44": {"name": "CPTM2_44", "description": "Second CPT-4/HCPCS modifier 44", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_45": {"name": "CPTM2_45", "description": "Second CPT-4/HCPCS modifier 45", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_46": {"name": "CPTM2_46", "description": "Second CPT-4/HCPCS modifier 46", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_47": {"name": "CPTM2_47", "description": "Second CPT-4/HCPCS modifier 47", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_48": {"name": "CPTM2_48", "description": "Second CPT-4/HCPCS modifier 48", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_49": {"name": "CPTM2_49", "description": "Second CPT-4/HCPCS modifier 49", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_50": {"name": "CPTM2_50", "description": "Second CPT-4/HCPCS modifier 50", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_51": {"name": "CPTM2_51", "description": "Second CPT-4/HCPCS modifier 51", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_52": {"name": "CPTM2_52", "description": "Second CPT-4/HCPCS modifier 52", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_53": {"name": "CPTM2_53", "description": "Second CPT-4/HCPCS modifier 53", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_54": {"name": "CPTM2_54", "description": "Second CPT-4/HCPCS modifier 54", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_55": {"name": "CPTM2_55", "description": "Second CPT-4/HCPCS modifier 55", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_56": {"name": "CPTM2_56", "description": "Second CPT-4/HCPCS modifier 56", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_57": {"name": "CPTM2_57", "description": "Second CPT-4/HCPCS modifier 57", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_58": {"name": "CPTM2_58", "description": "Second CPT-4/HCPCS modifier 58", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_59": {"name": "CPTM2_59", "description": "Second CPT-4/HCPCS modifier 59", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_60": {"name": "CPTM2_60", "description": "Second CPT-4/HCPCS modifier 60", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_61": {"name": "CPTM2_61", "description": "Second CPT-4/HCPCS modifier 61", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_62": {"name": "CPTM2_62", "description": "Second CPT-4/HCPCS modifier 62", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_63": {"name": "CPTM2_63", "description": "Second CPT-4/HCPCS modifier 63", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_64": {"name": "CPTM2_64", "description": "Second CPT-4/HCPCS modifier 64", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_65": {"name": "CPTM2_65", "description": "Second CPT-4/HCPCS modifier 65", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_66": {"name": "CPTM2_66", "description": "Second CPT-4/HCPCS modifier 66", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_67": {"name": "CPTM2_67", "description": "Second CPT-4/HCPCS modifier 67", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_68": {"name": "CPTM2_68", "description": "Second CPT-4/HCPCS modifier 68", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_69": {"name": "CPTM2_69", "description": "Second CPT-4/HCPCS modifier 69", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_70": {"name": "CPTM2_70", "description": "Second CPT-4/HCPCS modifier 70", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_71": {"name": "CPTM2_71", "description": "Second CPT-4/HCPCS modifier 71", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_72": {"name": "CPTM2_72", "description": "Second CPT-4/HCPCS modifier 72", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_73": {"name": "CPTM2_73", "description": "Second CPT-4/HCPCS modifier 73", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_74": {"name": "CPTM2_74", "description": "Second CPT-4/HCPCS modifier 74", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_75": {"name": "CPTM2_75", "description": "Second CPT-4/HCPCS modifier 75", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_76": {"name": "CPTM2_76", "description": "Second CPT-4/HCPCS modifier 76", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_77": {"name": "CPTM2_77", "description": "Second CPT-4/HCPCS modifier 77", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_78": {"name": "CPTM2_78", "description": "Second CPT-4/HCPCS modifier 78", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_79": {"name": "CPTM2_79", "description": "Second CPT-4/HCPCS modifier 79", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_80": {"name": "CPTM2_80", "description": "Second CPT-4/HCPCS modifier 80", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_81": {"name": "CPTM2_81", "description": "Second CPT-4/HCPCS modifier 81", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_82": {"name": "CPTM2_82", "description": "Second CPT-4/HCPCS modifier 82", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_83": {"name": "CPTM2_83", "description": "Second CPT-4/HCPCS modifier 83", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_84": {"name": "CPTM2_84", "description": "Second CPT-4/HCPCS modifier 84", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_85": {"name": "CPTM2_85", "description": "Second CPT-4/HCPCS modifier 85", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_86": {"name": "CPTM2_86", "description": "Second CPT-4/HCPCS modifier 86", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_87": {"name": "CPTM2_87", "description": "Second CPT-4/HCPCS modifier 87", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_88": {"name": "CPTM2_88", "description": "Second CPT-4/HCPCS modifier 88", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_89": {"name": "CPTM2_89", "description": "Second CPT-4/HCPCS modifier 89", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_90": {"name": "CPTM2_90", "description": "Second CPT-4/HCPCS modifier 90", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_91": {"name": "CPTM2_91", "description": "Second CPT-4/HCPCS modifier 91", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_92": {"name": "CPTM2_92", "description": "Second CPT-4/HCPCS modifier 92", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_93": {"name": "CPTM2_93", "description": "Second CPT-4/HCPCS modifier 93", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_94": {"name": "CPTM2_94", "description": "Second CPT-4/HCPCS modifier 94", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_95": {"name": "CPTM2_95", "description": "Second CPT-4/HCPCS modifier 95", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_96": {"name": "CPTM2_96", "description": "Second CPT-4/HCPCS modifier 96", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_97": {"name": "CPTM2_97", "description": "Second CPT-4/HCPCS modifier 97", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_98": {"name": "CPTM2_98", "description": "Second CPT-4/HCPCS modifier 98", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_99": {"name": "CPTM2_99", "description": "Second CPT-4/HCPCS modifier 99", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_100": {"name": "CPTM2_100", "description": "Second CPT-4/HCPCS modifier 100", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DaysToEvent": {"name": "DaysToEvent", "description": "Days from 'start date' to admission", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DHOUR": {"name": "DHOUR", "description": "Discharge Hour", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DIED": {"name": "DIED", "description": "Died during hospitalization", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DISP_X": {"name": "DISP_X", "description": "Disposition of patient (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DISPUB04": {"name": "DISPUB04", "description": "Disposition of patient (UB-04 standard coding)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DISPUNIFORM": {"name": "DISPUNIFORM", "description": "Disposition of patient (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DMONTH": {"name": "DMONTH", "description": "Discharge month", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DQTR": {"name": "DQTR", "description": "Discharge quarter", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DSHOSPID": {"name": "DSHOSPID", "description": "Data source hospital identifier", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DURATION": {"name": "DURATION", "description": "Elapsed time for hospital care in hours and minutes", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DXVER": {"name": "DXVER", "description": "Diagnosis Version", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "FEMALE": {"name": "FEMALE", "description": "Indicator of sex", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HCUP_ED": {"name": "HCUP_ED", "description": "HCUP Emergency Department service indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HCUP_OS": {"name": "HCUP_OS", "description": "HCUP Observation Stay service indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HISPANIC": {"name": "HISPANIC", "description": "Hispanic ethnicity (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HISPANIC_X": {"name": "HISPANIC_X", "description": "Hispanic ethnicity (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "Homeless": {"name": "Homeless", "description": "Indicator that patient is homeless", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HOSP_NPI": {"name": "HOSP_NPI", "description": "Hospital NPI", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "HOSPST": {"name": "HOSPST", "description": "Hospital state postal code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX_Visit_Reason1": {"name": "I10_DX_Visit_Reason1", "description": "ICD-10-CM Reason for visit diagnosis 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX_Visit_Reason2": {"name": "I10_DX_Visit_Reason2", "description": "ICD-10-CM Reason for visit diagnosis 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX_Visit_Reason3": {"name": "I10_DX_Visit_Reason3", "description": "ICD-10-CM Reason for visit diagnosis 3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX1": {"name": "I10_DX1", "description": "ICD-10-CM Diagnosis 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX2": {"name": "I10_DX2", "description": "ICD-10-CM Diagnosis 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX3": {"name": "I10_DX3", "description": "ICD-10-CM Diagnosis 3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX4": {"name": "I10_DX4", "description": "ICD-10-CM Diagnosis 4", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX5": {"name": "I10_DX5", "description": "ICD-10-CM Diagnosis 5", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX6": {"name": "I10_DX6", "description": "ICD-10-CM Diagnosis 6", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX7": {"name": "I10_DX7", "description": "ICD-10-CM Diagnosis 7", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX8": {"name": "I10_DX8", "description": "ICD-10-CM Diagnosis 8", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX9": {"name": "I10_DX9", "description": "ICD-10-CM Diagnosis 9", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX10": {"name": "I10_DX10", "description": "ICD-10-CM Diagnosis 10", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX11": {"name": "I10_DX11", "description": "ICD-10-CM Diagnosis 11", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX12": {"name": "I10_DX12", "description": "ICD-10-CM Diagnosis 12", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX13": {"name": "I10_DX13", "description": "ICD-10-CM Diagnosis 13", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX14": {"name": "I10_DX14", "description": "ICD-10-CM Diagnosis 14", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX15": {"name": "I10_DX15", "description": "ICD-10-CM Diagnosis 15", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX16": {"name": "I10_DX16", "description": "ICD-10-CM Diagnosis 16", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX17": {"name": "I10_DX17", "description": "ICD-10-CM Diagnosis 17", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX18": {"name": "I10_DX18", "description": "ICD-10-CM Diagnosis 18", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX19": {"name": "I10_DX19", "description": "ICD-10-CM Diagnosis 19", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX20": {"name": "I10_DX20", "description": "ICD-10-CM Diagnosis 20", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX21": {"name": "I10_DX21", "description": "ICD-10-CM Diagnosis 21", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX22": {"name": "I10_DX22", "description": "ICD-10-CM Diagnosis 22", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX23": {"name": "I10_DX23", "description": "ICD-10-CM Diagnosis 23", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX24": {"name": "I10_DX24", "description": "ICD-10-CM Diagnosis 24", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX25": {"name": "I10_DX25", "description": "ICD-10-CM Diagnosis 25", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX26": {"name": "I10_DX26", "description": "ICD-10-CM Diagnosis 26", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX27": {"name": "I10_DX27", "description": "ICD-10-CM Diagnosis 27", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX28": {"name": "I10_DX28", "description": "ICD-10-CM Diagnosis 28", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX29": {"name": "I10_DX29", "description": "ICD-10-CM Diagnosis 29", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX30": {"name": "I10_DX30", "description": "ICD-10-CM Diagnosis 30", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX31": {"name": "I10_DX31", "description": "ICD-10-CM Diagnosis 31", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX32": {"name": "I10_DX32", "description": "ICD-10-CM Diagnosis 32", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX33": {"name": "I10_DX33", "description": "ICD-10-CM Diagnosis 33", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_NDX": {"name": "I10_NDX", "description": "ICD-10-CM Number of diagnoses on this record", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "I10_PROCTYPE": {"name": "I10_PROCTYPE", "description": "ICD-10-PCS Procedure type indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "KEY": {"name": "KEY", "description": "HCUP record identifier", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "LOS": {"name": "LOS", "description": "Length of stay (cleaned)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "LOS_X": {"name": "LOS_X", "description": "Length of stay (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "MDNUM1_R": {"name": "MDNUM1_R", "description": "Physician 1 number (re-identified)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "MDNUM2_R": {"name": "MDNUM2_R", "description": "Physician 2 number (re-identified)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "MEDINCSTQ": {"name": "MEDINCSTQ", "description": "Median household income state quartile for patient ZIP Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "NCPT": {"name": "NCPT", "description": "Number of CPT/HCPCS procedures for this visit", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "OPservice": {"name": "OPservice", "description": "Indicator of outpatient service (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "ORTIME": {"name": "ORTIME", "description": "Operating room time in minutes", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "OS_TIME": {"name": "OS_TIME", "description": "Observation stay time summed from UNITS", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "PAY1": {"name": "PAY1", "description": "Primary expected payer (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PAY1_X": {"name": "PAY1_X", "description": "Primary expected payer (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PAY2": {"name": "PAY2", "description": "Secondary expected payer (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PAY2_X": {"name": "PAY2_X", "description": "Secondary expected payer (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PAY3": {"name": "PAY3", "description": "Tertiary expected payer (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PAY3_X": {"name": "PAY3_X", "description": "Tertiary expected payer (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PL_CBSA": {"name": "PL_CBSA", "description": "Patient location: Core Based Statistical Area (CBSA)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PL_NCHS": {"name": "PL_NCHS", "description": "Patient Location: NCHS Urban-Rural Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PL_RUCC": {"name": "PL_RUCC", "description": "Patient location: Rural-Urban Continuum Codes (RUCC)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PL_UIC": {"name": "PL_UIC", "description": "Patient location: Urban Influence Codes", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PL_UR_CAT4": {"name": "PL_UR_CAT4", "description": "Patient Location: Urban-Rural 4 Categories", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PSTATE": {"name": "PSTATE", "description": "Patient State postal code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PSTCO": {"name": "PSTCO", "description": "Patient state/county FIPS code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PSTCO2": {"name": "PSTCO2", "description": "Patient state/county FIPS code, possibly derived from ZIP Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "RACE": {"name": "RACE", "description": "Race (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "RACE_X": {"name": "RACE_X", "description": "Race (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "STATE_AS": {"name": "STATE_AS", "description": "State Ambulatory Surgery service indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "STATE_ED": {"name": "STATE_ED", "description": "State Emergency Department service indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "STATE_OS": {"name": "STATE_OS", "description": "State Observation Stay service indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "TOTCHG": {"name": "TOTCHG", "description": "Total charges (cleaned)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "TOTCHG_X": {"name": "TOTCHG_X", "description": "Total charges (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "VisitLink": {"name": "VisitLink", "description": "Visit linkage variable", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "YEAR": {"name": "YEAR", "description": "Calendar year", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "ZIP": {"name": "ZIP", "description": "Patient ZIP Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "ZIP3": {"name": "ZIP3", "description": "Patient ZIP Code, first 3 digits", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "ZIPINC_QRTL": {"name": "ZIPINC_QRTL", "description": "Median household income national quartile for patient ZIP Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AYEAR": {"name": "AYEAR", "description": "Admission year", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "BMONTH": {"name": "BMONTH", "description": "Birth month", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "BYEAR": {"name": "BYEAR", "description": "Birth year", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}}, "meta": {}, "source_meta": {"external_location": "\\\\files.drexel.edu\\encrypted\\SOPH\\UHC\\SchnakeMahl_HCUP\\dbt\\v0\\sources\\{name}.parquet"}, "tags": ["ER", "SEDD", "Source", "State"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "'\\\\files.drexel.edu\\encrypted\\SOPH\\UHC\\SchnakeMahl_HCUP\\dbt\\v0\\sources\\NY_SEDD_2017_CORE.parquet'", "created_at": 1674148168.174486}, "source.hcup.SEDD.NY_SEDD_2018_CHGS": {"fqn": ["hcup", "docs", "state", "sedd", "2016_2018", "ny", "SEDD", "NY_SEDD_2018_CHGS"], "database": "main", "schema": "SEDD", "unique_id": "source.hcup.SEDD.NY_SEDD_2018_CHGS", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "models\\docs\\state\\sedd\\2016_2018\\ny\\ny_sedd_2018_chgs.yml", "original_file_path": "models\\docs\\state\\sedd\\2016_2018\\ny\\ny_sedd_2018_chgs.yml", "name": "NY_SEDD_2018_CHGS", "source_name": "SEDD", "source_description": "## Abstract: HCUP State Emergency Department Databases (SEDD)\r\nThe State Emergency Department Databases (SEDD) are part of the Healthcare Cost and Utilization Project (HCUP), sponsored by the Agency for Healthcare Research and Quality (AHRQ).\r\n\r\nThe HCUP State Emergency Department Databases (SEDD) are a powerful set of databases that capture discharge information on all emergency department visits that do not result in an admission. Information on patients initially seen in the emergency room and then admitted to the hospital is included in the HCUP State Inpatient Databases (SID). To enumerate all emergency department visits, SEDD discharges should be combined with SID discharges that originate in the emergency department.\r\n\r\n- The SEDD contain the emergency department encounter abstracts from hospital-affiliated emergency departments in participating States, translated into a uniform format to facilitate multistate comparisons and analyses.\r\n- The SEDD contain a core set of clinical and nonclinical information on all visits, regardless of the expected payer, including but not limited to Medicare, Medicaid, private insurance, self-pay, or those billed as 'no charge'.\r\n- In addition to the core set of uniform data elements common to all SEDD, some State data include other elements such as the patient's race.\r\n\r\nResearchers and policymakers use the SEDD to investigate access to healthcare in a changing healthcare marketplace; identify State-specific trends in emergency department utilization, access, charges, and outcomes; and conduct market-area research and small-area variation analyses.\r\n\r\nThe individual State databases are in the same HCUP uniform format and represent 100 percent of records processed by AHRQ. However, the participating data organizations control the release of specific data elements. AHRQ is currently assisting the data organizations in the release of the 1999-2021 SEDD.\r\n\r\nThe SEDD can be linked to hospital-level data from the American Hospital Association (AHA) Annual Survey of Hospitals and county-level data from the Bureau of Health Professions' Area Resource File (ARF), except in States that do not allow the release of hospital identifiers.\r\n\r\nThirty of the data organizations participating in HCUP have agreed to release their SEDD files through the HCUP Central Distributor under the auspices of AHRQ. Uses are limited to research, analysis, and aggregate statistical reporting.\r\n\r\nUseful links include: \r\n\r\n- [SEDD database home page](https://www.hcup-us.ahrq.gov/db/state/sedddbdocumentation.jsp)\r\n- [Intro to SEDD database](https://www.hcup-us.ahrq.gov/db/state/sedddist/SEDD_Introduction.jsp)\r\n\r\n## Introduction to SEDD\r\n\r\n#### Overview\r\n\r\nThe Healthcare Cost and Utilization Project (HCUP) State Emergency Department Databases (SEDD) consist of individual data files from 42 participating data organizations. The SEDD contain information on emergency department (ED) visits to hospital-affiliated emergency departments that do not result in admissions. Information on patients initially seen in the emergency room and then admitted to the hospital is included in the HCUP State Inpatient Databases (SID). Composition and completeness of data files may vary from State to State. The SEDD are annual, State-specific files that share a common structure and common data elements. Most data elements are coded in a uniform format across all States. In addition to the core set of uniform data elements, the SEDD include State-specific data elements or data elements available only for a limited number of States. The uniform format of the SEDD helps facilitate cross-State comparisons. In addition, the SEDD, in combination with the SID, are well suited for research that requires complete enumeration of hospitals and emergency room encounters within market areas or States.\r\n\r\nThirty of the 42 participating data organizations have agreed to release their SEDD files through the HCUP Central Distributor under the auspices of AHRQ. The individual State databases are in the same HCUP uniform format. In general, they represent 100 percent of records processed by AHRQ. However, the participating data organizations control the release of specific data elements. AHRQ is currently assisting the data organizations in the release of the 1999-2021 SEDD.\r\n\r\nSEDD data sets are currently available for multiple States and years. Each release of the SEDD includes:\r\n\r\n- Data in American Standard Code for Information Interchange (ASCII) format on a compact disc with read-only memory CD-ROM.\r\n- Patient-level discharge abstract data in participating States for 100 percent of discharges from hospital-affiliated emergency departments that do not result in admissions.\r\n- American Hospital Association (AHA) Linkage File to link the SEDD to data from the AHA Annual Survey of Hospitals. This is only available for States that allow the release of hospital identifiers.\r\n\r\nThe SEDD are calendar year files for all data years except 2015. Because of the transition to ICD-10-CM/PCS1 on October 1, 2015, the 2015 SEDD are split into two parts. Nine months of the 2015 data with ICD-9-CM2 codes (discharges from Jan 1, 2015 - September 30, 2015) are in one set of files labeled Q1Q3. Three months of 2015 data with ICD-10-CM/PCS codes (discharges from October 1, 2015 - December 31, 2015) are in a separate set of files labeled Q4. More information about the changes to the HCUP databases for ICD-10-CM/PCS and use of data across the two coding system may be found on the HCUP User Support website under ICD-10-CM/PCS Resources (www.hcup-us.ahrq.gov/datainnovations/icd10_resources.jsp).\r\n\r\nSEDD documentation and tools\u2014including file specifications, programming source code for loading ASCII data into SAS (SAS Institute Inc.; Cary, NC), SPSS (IBM Corp.; Somers, NY), and Stata (StataCorp; College Station, TX), and value labels\u00e2\u20ac\u201dare available online at the HCUP User Support website www.hcup-us.ahrq.gov.\r\n\r\nStarting with the 2006 SEDD, the AHA Linkage files are available via the HCUP User Support website www.hcup-us.ahrq.gov. The AHA Linkage files may not be available when the discharge-level database is released.\r\n\r\n#### How the HCUP SEDD Differ from State Data Files\r\n\r\nThe SEDD available through the HCUP Central Distributor differ from the data files available from the data organizations in the following ways:\r\n\r\n- Data elements available on the files\r\n- Coding of data elements\r\n\r\nBecause the data organizations dictate the data elements that may be released through the HCUP Central Distributor, the data elements on the SEDD are a subset of the data collected by the corresponding data organizations. HCUP uniform coding is used on most data elements on the SEDD. A few State-specific data elements retain the original values provided by the respective data organizations.\r\n\r\n#### What is the File Structure of the SEDD in the 2019-2021 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n- Diagnosis and Procedure Groups file\r\n\r\n#### What Types of Facilities Are Included in the SEDD?\r\n\r\nThe types of hospitals are included in the SEDD depend on the information provided by the data organizations. Most State government data organizations provide information on all acute care hospitals in the respective State. Private data organizations are often restricted to member hospitals and may not provide information on all hospitals in their State. All hospitals reported by the data organizations are retained in the SEDD files.\r\n\r\nTables showing the number of hospitals in the SEDD can be found online at the HCUP User Support website (www.hcup-us.ahrq.gov). The tables present the hospitals by the number of:\r\n\r\n- Community hospitals\r\n- Hospitals not classified as community\r\n- Community hospitals not in the SEDD\r\n\r\nThe only reason a hospital is not included in the SEDD is if the data organization did not supply the necessary data.\r\n\r\nInformation contained in the AHA Annual Survey of Hospitals was used to determine if a hospital was a community hospital. Community hospitals, as defined by AHA, include \"all nonfederal, short term, general and other specialty hospitals, excluding hospital units of institutions.\" Included among community hospitals are academic medical centers and specialty hospitals such as obstetrics, gynecology, otolaryngology, short term rehabilitation, orthopedic, and pediatric hospitals. Noncommunity hospitals include Federal hospitals (e.g., Veterans Affairs, Department of Defense, and Indian Health Service hospitals), long-term hospitals, psychiatric hospitals, alcohol/chemical dependency treatment facilities, and hospital units within institutions such as prisons.\r\n\r\nSome hospitals could not be categorized as community or noncommunity hospitals because they could not be matched with AHA information. This occurs when a hospital was closed in a previous year or when the hospital does not report to the AHA.\r\n\r\n#### What is the File Structure of the SEDD in the 2019-2021 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n- Diagnosis and Procedure Groups file\r\n\r\n#### What is the File Structure of the SEDD in the 2016-2018 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the 2016 SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n\r\nUnavailable with the 2016-2018 SEDD is the Diagnosis and Procedure Groups file that had been included with the SEDD in prior data years. The data elements included in that file were derived from AHRQ software tools. If you are interested in applying the AHRQ software tools to the ICD-10-CM/PCS data in the 2016-2018 SEDD, beta versions of the AHRQ software tools are available on the HCUP User Support website at www.hcup-us.ahrq.gov/tools_software.jsp. Also available is a tutorial on how to apply the AHRQ software tools to the HCUP databases at www.hcup-us.ahrq.gov/tech_assist/tutorials.jsp.", "loader": "", "identifier": "NY_SEDD_2018_CHGS", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "NY SEDD 2018 CHGS file. The Charges file contains detailed charge information. There are three kinds of Charges files:\r\n\r\n1. Line item detail in which a submitted charge pertains to a specified revenue center and there may be multiple charges reported for the same revenue center. This type of Charges file includes multiple records per discharge abstract. Each record includes the following information for one service:\r\n  a. Revenue center (REVCODE))\r\n  b. Charge (CHARGE) \r\n  c. Unit of service (UNITS)\r\n  d. Current Procedural Terminology (CPT\u00ae) and Healthcare Common Procedure Coding System (HCPCS) codes (CPTHCPCS)\r\n  e. Day of service (SERVDAY) for some files\r\nFor example, if a patient had five laboratory tests, there are five records in the Charges file with information on the charge for each laboratory test. Information from this type of Charges file may be combined with the Core file by the unique record identifier (KEY), but there is not a one-to-one correspondence of records.\r\n\r\n2. Summarized detail in which charge information is summed within the revenue center. This type of Charges file includes one record per discharge abstract. Each record contains three corresponding arrays with the following information:\r\n  a. Revenue center (REVCDn)\r\n  b. Total charge for the revenue center (CHGn)\r\n  c. Total units of service for the revenue center (UNITn)\r\n\r\nFor example, if a patient had five laboratory tests, REVCD1 would include the revenue code for laboratory, CHG1 would include the total charge for the five tests, and UNIT1 would be five. To combine data elements between this type of Charges file and the Core file, merge the files by the unique record identifier (KEY). There will be a one-to-one correspondence of records.\r\n\r\n3. Collapsed detail in which charge information is summed across revenue centers. This type of Charges file includes one record per discharge abstract. Each record contains an array of collapsed charges (CHGn) that are predefined by the data organization that provided the data.\r\n\r\nConsider the example of a patient that had five laboratory tests from different revenue centers in the range of 300 to 319. CHG1, which was predefined as Laboratory Charges for revenue centers 300-319, would include the total charge for the five tests, but there is no detail on which specific revenue centers were used. To combine data elements between this type of Charges file and the Core file, merge the files by the unique record identifier (KEY). There will be a one-to-one correspondence of records.\r\n\r\nRefer to the Description of Data Elements online at the HCUP User Support website (www.hcup-us.ahrq.gov) for more information on the charge information from the different States.", "columns": {"CHARGE": {"name": "CHARGE", "description": "Line item charges (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "CPTHCPCS": {"name": "CPTHCPCS", "description": "Line item CPT-4/HCPCS procedure code (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTMod1": {"name": "CPTMod1", "description": "Line item CPT-4/HCPCS first modifier (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTMod2": {"name": "CPTMod2", "description": "Line item CPT-4/HCPCS second modifier (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "KEY": {"name": "KEY", "description": "HCUP record identifier", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "REVCODE": {"name": "REVCODE", "description": "Line item revenue code (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "SERVDAY": {"name": "SERVDAY", "description": "Line item days from admission date", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "UNITS": {"name": "UNITS", "description": "Line item units (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}}, "meta": {}, "source_meta": {"external_location": "\\\\files.drexel.edu\\encrypted\\SOPH\\UHC\\SchnakeMahl_HCUP\\dbt\\v0\\sources\\{name}.parquet"}, "tags": ["ER", "SEDD", "Source", "State"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "'\\\\files.drexel.edu\\encrypted\\SOPH\\UHC\\SchnakeMahl_HCUP\\dbt\\v0\\sources\\NY_SEDD_2018_CHGS.parquet'", "created_at": 1674148168.174486}, "source.hcup.SEDD.NY_SEDD_2018_CORE": {"fqn": ["hcup", "docs", "state", "sedd", "2016_2018", "ny", "SEDD", "NY_SEDD_2018_CORE"], "database": "main", "schema": "SEDD", "unique_id": "source.hcup.SEDD.NY_SEDD_2018_CORE", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "models\\docs\\state\\sedd\\2016_2018\\ny\\ny_sedd_2018_core.yml", "original_file_path": "models\\docs\\state\\sedd\\2016_2018\\ny\\ny_sedd_2018_core.yml", "name": "NY_SEDD_2018_CORE", "source_name": "SEDD", "source_description": "## Abstract: HCUP State Emergency Department Databases (SEDD)\r\nThe State Emergency Department Databases (SEDD) are part of the Healthcare Cost and Utilization Project (HCUP), sponsored by the Agency for Healthcare Research and Quality (AHRQ).\r\n\r\nThe HCUP State Emergency Department Databases (SEDD) are a powerful set of databases that capture discharge information on all emergency department visits that do not result in an admission. Information on patients initially seen in the emergency room and then admitted to the hospital is included in the HCUP State Inpatient Databases (SID). To enumerate all emergency department visits, SEDD discharges should be combined with SID discharges that originate in the emergency department.\r\n\r\n- The SEDD contain the emergency department encounter abstracts from hospital-affiliated emergency departments in participating States, translated into a uniform format to facilitate multistate comparisons and analyses.\r\n- The SEDD contain a core set of clinical and nonclinical information on all visits, regardless of the expected payer, including but not limited to Medicare, Medicaid, private insurance, self-pay, or those billed as 'no charge'.\r\n- In addition to the core set of uniform data elements common to all SEDD, some State data include other elements such as the patient's race.\r\n\r\nResearchers and policymakers use the SEDD to investigate access to healthcare in a changing healthcare marketplace; identify State-specific trends in emergency department utilization, access, charges, and outcomes; and conduct market-area research and small-area variation analyses.\r\n\r\nThe individual State databases are in the same HCUP uniform format and represent 100 percent of records processed by AHRQ. However, the participating data organizations control the release of specific data elements. AHRQ is currently assisting the data organizations in the release of the 1999-2021 SEDD.\r\n\r\nThe SEDD can be linked to hospital-level data from the American Hospital Association (AHA) Annual Survey of Hospitals and county-level data from the Bureau of Health Professions' Area Resource File (ARF), except in States that do not allow the release of hospital identifiers.\r\n\r\nThirty of the data organizations participating in HCUP have agreed to release their SEDD files through the HCUP Central Distributor under the auspices of AHRQ. Uses are limited to research, analysis, and aggregate statistical reporting.\r\n\r\nUseful links include: \r\n\r\n- [SEDD database home page](https://www.hcup-us.ahrq.gov/db/state/sedddbdocumentation.jsp)\r\n- [Intro to SEDD database](https://www.hcup-us.ahrq.gov/db/state/sedddist/SEDD_Introduction.jsp)\r\n\r\n## Introduction to SEDD\r\n\r\n#### Overview\r\n\r\nThe Healthcare Cost and Utilization Project (HCUP) State Emergency Department Databases (SEDD) consist of individual data files from 42 participating data organizations. The SEDD contain information on emergency department (ED) visits to hospital-affiliated emergency departments that do not result in admissions. Information on patients initially seen in the emergency room and then admitted to the hospital is included in the HCUP State Inpatient Databases (SID). Composition and completeness of data files may vary from State to State. The SEDD are annual, State-specific files that share a common structure and common data elements. Most data elements are coded in a uniform format across all States. In addition to the core set of uniform data elements, the SEDD include State-specific data elements or data elements available only for a limited number of States. The uniform format of the SEDD helps facilitate cross-State comparisons. In addition, the SEDD, in combination with the SID, are well suited for research that requires complete enumeration of hospitals and emergency room encounters within market areas or States.\r\n\r\nThirty of the 42 participating data organizations have agreed to release their SEDD files through the HCUP Central Distributor under the auspices of AHRQ. The individual State databases are in the same HCUP uniform format. In general, they represent 100 percent of records processed by AHRQ. However, the participating data organizations control the release of specific data elements. AHRQ is currently assisting the data organizations in the release of the 1999-2021 SEDD.\r\n\r\nSEDD data sets are currently available for multiple States and years. Each release of the SEDD includes:\r\n\r\n- Data in American Standard Code for Information Interchange (ASCII) format on a compact disc with read-only memory CD-ROM.\r\n- Patient-level discharge abstract data in participating States for 100 percent of discharges from hospital-affiliated emergency departments that do not result in admissions.\r\n- American Hospital Association (AHA) Linkage File to link the SEDD to data from the AHA Annual Survey of Hospitals. This is only available for States that allow the release of hospital identifiers.\r\n\r\nThe SEDD are calendar year files for all data years except 2015. Because of the transition to ICD-10-CM/PCS1 on October 1, 2015, the 2015 SEDD are split into two parts. Nine months of the 2015 data with ICD-9-CM2 codes (discharges from Jan 1, 2015 - September 30, 2015) are in one set of files labeled Q1Q3. Three months of 2015 data with ICD-10-CM/PCS codes (discharges from October 1, 2015 - December 31, 2015) are in a separate set of files labeled Q4. More information about the changes to the HCUP databases for ICD-10-CM/PCS and use of data across the two coding system may be found on the HCUP User Support website under ICD-10-CM/PCS Resources (www.hcup-us.ahrq.gov/datainnovations/icd10_resources.jsp).\r\n\r\nSEDD documentation and tools\u2014including file specifications, programming source code for loading ASCII data into SAS (SAS Institute Inc.; Cary, NC), SPSS (IBM Corp.; Somers, NY), and Stata (StataCorp; College Station, TX), and value labels\u00e2\u20ac\u201dare available online at the HCUP User Support website www.hcup-us.ahrq.gov.\r\n\r\nStarting with the 2006 SEDD, the AHA Linkage files are available via the HCUP User Support website www.hcup-us.ahrq.gov. The AHA Linkage files may not be available when the discharge-level database is released.\r\n\r\n#### How the HCUP SEDD Differ from State Data Files\r\n\r\nThe SEDD available through the HCUP Central Distributor differ from the data files available from the data organizations in the following ways:\r\n\r\n- Data elements available on the files\r\n- Coding of data elements\r\n\r\nBecause the data organizations dictate the data elements that may be released through the HCUP Central Distributor, the data elements on the SEDD are a subset of the data collected by the corresponding data organizations. HCUP uniform coding is used on most data elements on the SEDD. A few State-specific data elements retain the original values provided by the respective data organizations.\r\n\r\n#### What is the File Structure of the SEDD in the 2019-2021 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n- Diagnosis and Procedure Groups file\r\n\r\n#### What Types of Facilities Are Included in the SEDD?\r\n\r\nThe types of hospitals are included in the SEDD depend on the information provided by the data organizations. Most State government data organizations provide information on all acute care hospitals in the respective State. Private data organizations are often restricted to member hospitals and may not provide information on all hospitals in their State. All hospitals reported by the data organizations are retained in the SEDD files.\r\n\r\nTables showing the number of hospitals in the SEDD can be found online at the HCUP User Support website (www.hcup-us.ahrq.gov). The tables present the hospitals by the number of:\r\n\r\n- Community hospitals\r\n- Hospitals not classified as community\r\n- Community hospitals not in the SEDD\r\n\r\nThe only reason a hospital is not included in the SEDD is if the data organization did not supply the necessary data.\r\n\r\nInformation contained in the AHA Annual Survey of Hospitals was used to determine if a hospital was a community hospital. Community hospitals, as defined by AHA, include \"all nonfederal, short term, general and other specialty hospitals, excluding hospital units of institutions.\" Included among community hospitals are academic medical centers and specialty hospitals such as obstetrics, gynecology, otolaryngology, short term rehabilitation, orthopedic, and pediatric hospitals. Noncommunity hospitals include Federal hospitals (e.g., Veterans Affairs, Department of Defense, and Indian Health Service hospitals), long-term hospitals, psychiatric hospitals, alcohol/chemical dependency treatment facilities, and hospital units within institutions such as prisons.\r\n\r\nSome hospitals could not be categorized as community or noncommunity hospitals because they could not be matched with AHA information. This occurs when a hospital was closed in a previous year or when the hospital does not report to the AHA.\r\n\r\n#### What is the File Structure of the SEDD in the 2019-2021 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n- Diagnosis and Procedure Groups file\r\n\r\n#### What is the File Structure of the SEDD in the 2016-2018 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the 2016 SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n\r\nUnavailable with the 2016-2018 SEDD is the Diagnosis and Procedure Groups file that had been included with the SEDD in prior data years. The data elements included in that file were derived from AHRQ software tools. If you are interested in applying the AHRQ software tools to the ICD-10-CM/PCS data in the 2016-2018 SEDD, beta versions of the AHRQ software tools are available on the HCUP User Support website at www.hcup-us.ahrq.gov/tools_software.jsp. Also available is a tutorial on how to apply the AHRQ software tools to the HCUP databases at www.hcup-us.ahrq.gov/tech_assist/tutorials.jsp.", "loader": "", "identifier": "NY_SEDD_2018_CORE", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "NY SEDD 2018 CORE file. The Core file is a discharge-level file that contains:\r\n\r\n- Core data elements that form the nucleus of the SEDD\r\n- State-specific data elements intended for limited use\r\n\r\nCore data elements meet at least one of the following criteria:\r\n\r\n- Are available from all or nearly all data sources\r\n- Lend themselves to uniform coding across sources\r\n- Are needed for traditional applications (e.g., patient age, sex)\r\n\r\nState-specific data elements meet at least one of the following criteria:\r\n\r\n- Are available from a limited number of sources\r\n- Do not lend themselves to uniform coding across sources\r\n- Are not needed for traditional applications\r\n\r\nThe Core file is a discharge-level file with one observation per discharge abstract.", "columns": {"AGE": {"name": "AGE", "description": "Age in years at admission", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AGEDAY": {"name": "AGEDAY", "description": "Age in days (when age < 1 year)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AGEMONTH": {"name": "AGEMONTH", "description": "Age in months (when age < 11 years)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AHOUR": {"name": "AHOUR", "description": "Admission Hour", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AMONTH": {"name": "AMONTH", "description": "Admission month", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "ATYPE": {"name": "ATYPE", "description": "Admission type", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AWEEKEND": {"name": "AWEEKEND", "description": "Admission day is a weekend", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "BLOOD": {"name": "BLOOD", "description": "Pints of blood furnished to the patient", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "BP_DIASTOLIC_X": {"name": "BP_DIASTOLIC_X", "description": "Diastolic blood pressure of the patient, as received from data source", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "BP_SYSTOLIC_X": {"name": "BP_SYSTOLIC_X", "description": "Systolic blood pressure of the patient, as received from data source", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPT1": {"name": "CPT1", "description": "CPT/HCPCS procedure code 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT2": {"name": "CPT2", "description": "CPT/HCPCS procedure code 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT3": {"name": "CPT3", "description": "CPT/HCPCS procedure code 3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT4": {"name": "CPT4", "description": "CPT/HCPCS procedure code 4", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT5": {"name": "CPT5", "description": "CPT/HCPCS procedure code 5", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT6": {"name": "CPT6", "description": "CPT/HCPCS procedure code 6", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT7": {"name": "CPT7", "description": "CPT/HCPCS procedure code 7", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT8": {"name": "CPT8", "description": "CPT/HCPCS procedure code 8", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT9": {"name": "CPT9", "description": "CPT/HCPCS procedure code 9", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT10": {"name": "CPT10", "description": "CPT/HCPCS procedure code 10", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT11": {"name": "CPT11", "description": "CPT/HCPCS procedure code 11", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT12": {"name": "CPT12", "description": "CPT/HCPCS procedure code 12", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT13": {"name": "CPT13", "description": "CPT/HCPCS procedure code 13", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT14": {"name": "CPT14", "description": "CPT/HCPCS procedure code 14", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT15": {"name": "CPT15", "description": "CPT/HCPCS procedure code 15", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT16": {"name": "CPT16", "description": "CPT/HCPCS procedure code 16", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT17": {"name": "CPT17", "description": "CPT/HCPCS procedure code 17", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT18": {"name": "CPT18", "description": "CPT/HCPCS procedure code 18", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT19": {"name": "CPT19", "description": "CPT/HCPCS procedure code 19", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT20": {"name": "CPT20", "description": "CPT/HCPCS procedure code 20", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT21": {"name": "CPT21", "description": "CPT/HCPCS procedure code 21", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT22": {"name": "CPT22", "description": "CPT/HCPCS procedure code 22", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT23": {"name": "CPT23", "description": "CPT/HCPCS procedure code 23", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT24": {"name": "CPT24", "description": "CPT/HCPCS procedure code 24", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT25": {"name": "CPT25", "description": "CPT/HCPCS procedure code 25", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT26": {"name": "CPT26", "description": "CPT/HCPCS procedure code 26", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT27": {"name": "CPT27", "description": "CPT/HCPCS procedure code 27", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT28": {"name": "CPT28", "description": "CPT/HCPCS procedure code 28", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT29": {"name": "CPT29", "description": "CPT/HCPCS procedure code 29", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT30": {"name": "CPT30", "description": "CPT/HCPCS procedure code 30", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT31": {"name": "CPT31", "description": "CPT/HCPCS procedure code 31", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT32": {"name": "CPT32", "description": "CPT/HCPCS procedure code 32", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT33": {"name": "CPT33", "description": "CPT/HCPCS procedure code 33", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT34": {"name": "CPT34", "description": "CPT/HCPCS procedure code 34", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT35": {"name": "CPT35", "description": "CPT/HCPCS procedure code 35", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT36": {"name": "CPT36", "description": "CPT/HCPCS procedure code 36", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT37": {"name": "CPT37", "description": "CPT/HCPCS procedure code 37", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT38": {"name": "CPT38", "description": "CPT/HCPCS procedure code 38", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT39": {"name": "CPT39", "description": "CPT/HCPCS procedure code 39", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT40": {"name": "CPT40", "description": "CPT/HCPCS procedure code 40", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT41": {"name": "CPT41", "description": "CPT/HCPCS procedure code 41", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT42": {"name": "CPT42", "description": "CPT/HCPCS procedure code 42", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT43": {"name": "CPT43", "description": "CPT/HCPCS procedure code 43", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT44": {"name": "CPT44", "description": "CPT/HCPCS procedure code 44", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT45": {"name": "CPT45", "description": "CPT/HCPCS procedure code 45", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT46": {"name": "CPT46", "description": "CPT/HCPCS procedure code 46", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT47": {"name": "CPT47", "description": "CPT/HCPCS procedure code 47", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT48": {"name": "CPT48", "description": "CPT/HCPCS procedure code 48", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT49": {"name": "CPT49", "description": "CPT/HCPCS procedure code 49", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT50": {"name": "CPT50", "description": "CPT/HCPCS procedure code 50", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT51": {"name": "CPT51", "description": "CPT/HCPCS procedure code 51", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT52": {"name": "CPT52", "description": "CPT/HCPCS procedure code 52", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT53": {"name": "CPT53", "description": "CPT/HCPCS procedure code 53", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT54": {"name": "CPT54", "description": "CPT/HCPCS procedure code 54", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT55": {"name": "CPT55", "description": "CPT/HCPCS procedure code 55", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT56": {"name": "CPT56", "description": "CPT/HCPCS procedure code 56", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT57": {"name": "CPT57", "description": "CPT/HCPCS procedure code 57", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT58": {"name": "CPT58", "description": "CPT/HCPCS procedure code 58", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT59": {"name": "CPT59", "description": "CPT/HCPCS procedure code 59", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT60": {"name": "CPT60", "description": "CPT/HCPCS procedure code 60", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT61": {"name": "CPT61", "description": "CPT/HCPCS procedure code 61", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT62": {"name": "CPT62", "description": "CPT/HCPCS procedure code 62", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT63": {"name": "CPT63", "description": "CPT/HCPCS procedure code 63", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT64": {"name": "CPT64", "description": "CPT/HCPCS procedure code 64", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT65": {"name": "CPT65", "description": "CPT/HCPCS procedure code 65", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT66": {"name": "CPT66", "description": "CPT/HCPCS procedure code 66", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT67": {"name": "CPT67", "description": "CPT/HCPCS procedure code 67", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT68": {"name": "CPT68", "description": "CPT/HCPCS procedure code 68", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT69": {"name": "CPT69", "description": "CPT/HCPCS procedure code 69", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT70": {"name": "CPT70", "description": "CPT/HCPCS procedure code 70", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT71": {"name": "CPT71", "description": "CPT/HCPCS procedure code 71", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT72": {"name": "CPT72", "description": "CPT/HCPCS procedure code 72", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT73": {"name": "CPT73", "description": "CPT/HCPCS procedure code 73", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT74": {"name": "CPT74", "description": "CPT/HCPCS procedure code 74", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT75": {"name": "CPT75", "description": "CPT/HCPCS procedure code 75", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT76": {"name": "CPT76", "description": "CPT/HCPCS procedure code 76", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT77": {"name": "CPT77", "description": "CPT/HCPCS procedure code 77", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT78": {"name": "CPT78", "description": "CPT/HCPCS procedure code 78", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT79": {"name": "CPT79", "description": "CPT/HCPCS procedure code 79", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT80": {"name": "CPT80", "description": "CPT/HCPCS procedure code 80", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT81": {"name": "CPT81", "description": "CPT/HCPCS procedure code 81", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT82": {"name": "CPT82", "description": "CPT/HCPCS procedure code 82", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT83": {"name": "CPT83", "description": "CPT/HCPCS procedure code 83", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT84": {"name": "CPT84", "description": "CPT/HCPCS procedure code 84", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT85": {"name": "CPT85", "description": "CPT/HCPCS procedure code 85", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT86": {"name": "CPT86", "description": "CPT/HCPCS procedure code 86", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT87": {"name": "CPT87", "description": "CPT/HCPCS procedure code 87", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT88": {"name": "CPT88", "description": "CPT/HCPCS procedure code 88", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT89": {"name": "CPT89", "description": "CPT/HCPCS procedure code 89", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT90": {"name": "CPT90", "description": "CPT/HCPCS procedure code 90", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT91": {"name": "CPT91", "description": "CPT/HCPCS procedure code 91", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT92": {"name": "CPT92", "description": "CPT/HCPCS procedure code 92", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT93": {"name": "CPT93", "description": "CPT/HCPCS procedure code 93", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT94": {"name": "CPT94", "description": "CPT/HCPCS procedure code 94", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT95": {"name": "CPT95", "description": "CPT/HCPCS procedure code 95", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT96": {"name": "CPT96", "description": "CPT/HCPCS procedure code 96", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT97": {"name": "CPT97", "description": "CPT/HCPCS procedure code 97", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT98": {"name": "CPT98", "description": "CPT/HCPCS procedure code 98", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT99": {"name": "CPT99", "description": "CPT/HCPCS procedure code 99", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT100": {"name": "CPT100", "description": "CPT/HCPCS procedure code 100", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT101": {"name": "CPT101", "description": "CPT/HCPCS procedure code 101", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT102": {"name": "CPT102", "description": "CPT/HCPCS procedure code 102", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT103": {"name": "CPT103", "description": "CPT/HCPCS procedure code 103", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT104": {"name": "CPT104", "description": "CPT/HCPCS procedure code 104", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT105": {"name": "CPT105", "description": "CPT/HCPCS procedure code 105", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT106": {"name": "CPT106", "description": "CPT/HCPCS procedure code 106", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT107": {"name": "CPT107", "description": "CPT/HCPCS procedure code 107", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT108": {"name": "CPT108", "description": "CPT/HCPCS procedure code 108", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT109": {"name": "CPT109", "description": "CPT/HCPCS procedure code 109", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT110": {"name": "CPT110", "description": "CPT/HCPCS procedure code 110", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT111": {"name": "CPT111", "description": "CPT/HCPCS procedure code 111", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT112": {"name": "CPT112", "description": "CPT/HCPCS procedure code 112", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT113": {"name": "CPT113", "description": "CPT/HCPCS procedure code 113", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT114": {"name": "CPT114", "description": "CPT/HCPCS procedure code 114", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT115": {"name": "CPT115", "description": "CPT/HCPCS procedure code 115", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT116": {"name": "CPT116", "description": "CPT/HCPCS procedure code 116", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT117": {"name": "CPT117", "description": "CPT/HCPCS procedure code 117", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT118": {"name": "CPT118", "description": "CPT/HCPCS procedure code 118", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT119": {"name": "CPT119", "description": "CPT/HCPCS procedure code 119", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT120": {"name": "CPT120", "description": "CPT/HCPCS procedure code 120", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT121": {"name": "CPT121", "description": "CPT/HCPCS procedure code 121", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT122": {"name": "CPT122", "description": "CPT/HCPCS procedure code 122", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT123": {"name": "CPT123", "description": "CPT/HCPCS procedure code 123", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT124": {"name": "CPT124", "description": "CPT/HCPCS procedure code 124", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT125": {"name": "CPT125", "description": "CPT/HCPCS procedure code 125", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT126": {"name": "CPT126", "description": "CPT/HCPCS procedure code 126", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT127": {"name": "CPT127", "description": "CPT/HCPCS procedure code 127", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT128": {"name": "CPT128", "description": "CPT/HCPCS procedure code 128", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT129": {"name": "CPT129", "description": "CPT/HCPCS procedure code 129", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT130": {"name": "CPT130", "description": "CPT/HCPCS procedure code 130", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT131": {"name": "CPT131", "description": "CPT/HCPCS procedure code 131", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT132": {"name": "CPT132", "description": "CPT/HCPCS procedure code 132", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT133": {"name": "CPT133", "description": "CPT/HCPCS procedure code 133", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT134": {"name": "CPT134", "description": "CPT/HCPCS procedure code 134", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT135": {"name": "CPT135", "description": "CPT/HCPCS procedure code 135", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT136": {"name": "CPT136", "description": "CPT/HCPCS procedure code 136", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT137": {"name": "CPT137", "description": "CPT/HCPCS procedure code 137", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT138": {"name": "CPT138", "description": "CPT/HCPCS procedure code 138", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT139": {"name": "CPT139", "description": "CPT/HCPCS procedure code 139", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT140": {"name": "CPT140", "description": "CPT/HCPCS procedure code 140", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT141": {"name": "CPT141", "description": "CPT/HCPCS procedure code 141", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT142": {"name": "CPT142", "description": "CPT/HCPCS procedure code 142", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT143": {"name": "CPT143", "description": "CPT/HCPCS procedure code 143", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT144": {"name": "CPT144", "description": "CPT/HCPCS procedure code 144", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT145": {"name": "CPT145", "description": "CPT/HCPCS procedure code 145", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT146": {"name": "CPT146", "description": "CPT/HCPCS procedure code 146", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT147": {"name": "CPT147", "description": "CPT/HCPCS procedure code 147", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT148": {"name": "CPT148", "description": "CPT/HCPCS procedure code 148", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT149": {"name": "CPT149", "description": "CPT/HCPCS procedure code 149", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT150": {"name": "CPT150", "description": "CPT/HCPCS procedure code 150", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT151": {"name": "CPT151", "description": "CPT/HCPCS procedure code 151", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT152": {"name": "CPT152", "description": "CPT/HCPCS procedure code 152", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT153": {"name": "CPT153", "description": "CPT/HCPCS procedure code 153", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT154": {"name": "CPT154", "description": "CPT/HCPCS procedure code 154", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT155": {"name": "CPT155", "description": "CPT/HCPCS procedure code 155", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT156": {"name": "CPT156", "description": "CPT/HCPCS procedure code 156", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT157": {"name": "CPT157", "description": "CPT/HCPCS procedure code 157", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT158": {"name": "CPT158", "description": "CPT/HCPCS procedure code 158", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT159": {"name": "CPT159", "description": "CPT/HCPCS procedure code 159", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT160": {"name": "CPT160", "description": "CPT/HCPCS procedure code 160", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT161": {"name": "CPT161", "description": "CPT/HCPCS procedure code 161", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT162": {"name": "CPT162", "description": "CPT/HCPCS procedure code 162", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT163": {"name": "CPT163", "description": "CPT/HCPCS procedure code 163", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT164": {"name": "CPT164", "description": "CPT/HCPCS procedure code 164", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT165": {"name": "CPT165", "description": "CPT/HCPCS procedure code 165", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT166": {"name": "CPT166", "description": "CPT/HCPCS procedure code 166", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT167": {"name": "CPT167", "description": "CPT/HCPCS procedure code 167", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT168": {"name": "CPT168", "description": "CPT/HCPCS procedure code 168", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT169": {"name": "CPT169", "description": "CPT/HCPCS procedure code 169", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT170": {"name": "CPT170", "description": "CPT/HCPCS procedure code 170", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT171": {"name": "CPT171", "description": "CPT/HCPCS procedure code 171", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT172": {"name": "CPT172", "description": "CPT/HCPCS procedure code 172", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT173": {"name": "CPT173", "description": "CPT/HCPCS procedure code 173", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT174": {"name": "CPT174", "description": "CPT/HCPCS procedure code 174", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT175": {"name": "CPT175", "description": "CPT/HCPCS procedure code 175", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT176": {"name": "CPT176", "description": "CPT/HCPCS procedure code 176", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT177": {"name": "CPT177", "description": "CPT/HCPCS procedure code 177", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT178": {"name": "CPT178", "description": "CPT/HCPCS procedure code 178", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT179": {"name": "CPT179", "description": "CPT/HCPCS procedure code 179", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT180": {"name": "CPT180", "description": "CPT/HCPCS procedure code 180", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT181": {"name": "CPT181", "description": "CPT/HCPCS procedure code 181", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT182": {"name": "CPT182", "description": "CPT/HCPCS procedure code 182", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT183": {"name": "CPT183", "description": "CPT/HCPCS procedure code 183", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT184": {"name": "CPT184", "description": "CPT/HCPCS procedure code 184", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT185": {"name": "CPT185", "description": "CPT/HCPCS procedure code 185", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT186": {"name": "CPT186", "description": "CPT/HCPCS procedure code 186", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT187": {"name": "CPT187", "description": "CPT/HCPCS procedure code 187", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT188": {"name": "CPT188", "description": "CPT/HCPCS procedure code 188", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT189": {"name": "CPT189", "description": "CPT/HCPCS procedure code 189", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT190": {"name": "CPT190", "description": "CPT/HCPCS procedure code 190", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT191": {"name": "CPT191", "description": "CPT/HCPCS procedure code 191", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT192": {"name": "CPT192", "description": "CPT/HCPCS procedure code 192", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT193": {"name": "CPT193", "description": "CPT/HCPCS procedure code 193", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT194": {"name": "CPT194", "description": "CPT/HCPCS procedure code 194", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT195": {"name": "CPT195", "description": "CPT/HCPCS procedure code 195", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT196": {"name": "CPT196", "description": "CPT/HCPCS procedure code 196", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT197": {"name": "CPT197", "description": "CPT/HCPCS procedure code 197", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT198": {"name": "CPT198", "description": "CPT/HCPCS procedure code 198", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT199": {"name": "CPT199", "description": "CPT/HCPCS procedure code 199", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPT200": {"name": "CPT200", "description": "CPT/HCPCS procedure code 200", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTCCS1": {"name": "CPTCCS1", "description": "CCS: CPT 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS2": {"name": "CPTCCS2", "description": "CCS: CPT 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS3": {"name": "CPTCCS3", "description": "CCS: CPT 3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS4": {"name": "CPTCCS4", "description": "CCS: CPT 4", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS5": {"name": "CPTCCS5", "description": "CCS: CPT 5", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS6": {"name": "CPTCCS6", "description": "CCS: CPT 6", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS7": {"name": "CPTCCS7", "description": "CCS: CPT 7", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS8": {"name": "CPTCCS8", "description": "CCS: CPT 8", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS9": {"name": "CPTCCS9", "description": "CCS: CPT 9", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS10": {"name": "CPTCCS10", "description": "CCS: CPT 10", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS11": {"name": "CPTCCS11", "description": "CCS: CPT 11", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS12": {"name": "CPTCCS12", "description": "CCS: CPT 12", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS13": {"name": "CPTCCS13", "description": "CCS: CPT 13", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS14": {"name": "CPTCCS14", "description": "CCS: CPT 14", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS15": {"name": "CPTCCS15", "description": "CCS: CPT 15", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS16": {"name": "CPTCCS16", "description": "CCS: CPT 16", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS17": {"name": "CPTCCS17", "description": "CCS: CPT 17", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS18": {"name": "CPTCCS18", "description": "CCS: CPT 18", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS19": {"name": "CPTCCS19", "description": "CCS: CPT 19", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS20": {"name": "CPTCCS20", "description": "CCS: CPT 20", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS21": {"name": "CPTCCS21", "description": "CCS: CPT 21", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS22": {"name": "CPTCCS22", "description": "CCS: CPT 22", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS23": {"name": "CPTCCS23", "description": "CCS: CPT 23", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS24": {"name": "CPTCCS24", "description": "CCS: CPT 24", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS25": {"name": "CPTCCS25", "description": "CCS: CPT 25", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS26": {"name": "CPTCCS26", "description": "CCS: CPT 26", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS27": {"name": "CPTCCS27", "description": "CCS: CPT 27", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS28": {"name": "CPTCCS28", "description": "CCS: CPT 28", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS29": {"name": "CPTCCS29", "description": "CCS: CPT 29", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS30": {"name": "CPTCCS30", "description": "CCS: CPT 30", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS31": {"name": "CPTCCS31", "description": "CCS: CPT 31", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS32": {"name": "CPTCCS32", "description": "CCS: CPT 32", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS33": {"name": "CPTCCS33", "description": "CCS: CPT 33", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS34": {"name": "CPTCCS34", "description": "CCS: CPT 34", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS35": {"name": "CPTCCS35", "description": "CCS: CPT 35", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS36": {"name": "CPTCCS36", "description": "CCS: CPT 36", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS37": {"name": "CPTCCS37", "description": "CCS: CPT 37", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS38": {"name": "CPTCCS38", "description": "CCS: CPT 38", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS39": {"name": "CPTCCS39", "description": "CCS: CPT 39", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS40": {"name": "CPTCCS40", "description": "CCS: CPT 40", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS41": {"name": "CPTCCS41", "description": "CCS: CPT 41", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS42": {"name": "CPTCCS42", "description": "CCS: CPT 42", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS43": {"name": "CPTCCS43", "description": "CCS: CPT 43", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS44": {"name": "CPTCCS44", "description": "CCS: CPT 44", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS45": {"name": "CPTCCS45", "description": "CCS: CPT 45", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS46": {"name": "CPTCCS46", "description": "CCS: CPT 46", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS47": {"name": "CPTCCS47", "description": "CCS: CPT 47", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS48": {"name": "CPTCCS48", "description": "CCS: CPT 48", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS49": {"name": "CPTCCS49", "description": "CCS: CPT 49", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS50": {"name": "CPTCCS50", "description": "CCS: CPT 50", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS51": {"name": "CPTCCS51", "description": "CCS: CPT 51", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS52": {"name": "CPTCCS52", "description": "CCS: CPT 52", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS53": {"name": "CPTCCS53", "description": "CCS: CPT 53", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS54": {"name": "CPTCCS54", "description": "CCS: CPT 54", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS55": {"name": "CPTCCS55", "description": "CCS: CPT 55", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS56": {"name": "CPTCCS56", "description": "CCS: CPT 56", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS57": {"name": "CPTCCS57", "description": "CCS: CPT 57", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS58": {"name": "CPTCCS58", "description": "CCS: CPT 58", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS59": {"name": "CPTCCS59", "description": "CCS: CPT 59", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS60": {"name": "CPTCCS60", "description": "CCS: CPT 60", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS61": {"name": "CPTCCS61", "description": "CCS: CPT 61", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS62": {"name": "CPTCCS62", "description": "CCS: CPT 62", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS63": {"name": "CPTCCS63", "description": "CCS: CPT 63", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS64": {"name": "CPTCCS64", "description": "CCS: CPT 64", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS65": {"name": "CPTCCS65", "description": "CCS: CPT 65", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS66": {"name": "CPTCCS66", "description": "CCS: CPT 66", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS67": {"name": "CPTCCS67", "description": "CCS: CPT 67", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS68": {"name": "CPTCCS68", "description": "CCS: CPT 68", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS69": {"name": "CPTCCS69", "description": "CCS: CPT 69", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS70": {"name": "CPTCCS70", "description": "CCS: CPT 70", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS71": {"name": "CPTCCS71", "description": "CCS: CPT 71", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS72": {"name": "CPTCCS72", "description": "CCS: CPT 72", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS73": {"name": "CPTCCS73", "description": "CCS: CPT 73", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS74": {"name": "CPTCCS74", "description": "CCS: CPT 74", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS75": {"name": "CPTCCS75", "description": "CCS: CPT 75", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS76": {"name": "CPTCCS76", "description": "CCS: CPT 76", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS77": {"name": "CPTCCS77", "description": "CCS: CPT 77", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS78": {"name": "CPTCCS78", "description": "CCS: CPT 78", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS79": {"name": "CPTCCS79", "description": "CCS: CPT 79", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS80": {"name": "CPTCCS80", "description": "CCS: CPT 80", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS81": {"name": "CPTCCS81", "description": "CCS: CPT 81", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS82": {"name": "CPTCCS82", "description": "CCS: CPT 82", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS83": {"name": "CPTCCS83", "description": "CCS: CPT 83", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS84": {"name": "CPTCCS84", "description": "CCS: CPT 84", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS85": {"name": "CPTCCS85", "description": "CCS: CPT 85", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS86": {"name": "CPTCCS86", "description": "CCS: CPT 86", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS87": {"name": "CPTCCS87", "description": "CCS: CPT 87", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS88": {"name": "CPTCCS88", "description": "CCS: CPT 88", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS89": {"name": "CPTCCS89", "description": "CCS: CPT 89", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS90": {"name": "CPTCCS90", "description": "CCS: CPT 90", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS91": {"name": "CPTCCS91", "description": "CCS: CPT 91", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS92": {"name": "CPTCCS92", "description": "CCS: CPT 92", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS93": {"name": "CPTCCS93", "description": "CCS: CPT 93", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS94": {"name": "CPTCCS94", "description": "CCS: CPT 94", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS95": {"name": "CPTCCS95", "description": "CCS: CPT 95", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS96": {"name": "CPTCCS96", "description": "CCS: CPT 96", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS97": {"name": "CPTCCS97", "description": "CCS: CPT 97", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS98": {"name": "CPTCCS98", "description": "CCS: CPT 98", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS99": {"name": "CPTCCS99", "description": "CCS: CPT 99", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS100": {"name": "CPTCCS100", "description": "CCS: CPT 100", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS101": {"name": "CPTCCS101", "description": "CCS: CPT 101", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS102": {"name": "CPTCCS102", "description": "CCS: CPT 102", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS103": {"name": "CPTCCS103", "description": "CCS: CPT 103", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS104": {"name": "CPTCCS104", "description": "CCS: CPT 104", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS105": {"name": "CPTCCS105", "description": "CCS: CPT 105", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS106": {"name": "CPTCCS106", "description": "CCS: CPT 106", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS107": {"name": "CPTCCS107", "description": "CCS: CPT 107", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS108": {"name": "CPTCCS108", "description": "CCS: CPT 108", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS109": {"name": "CPTCCS109", "description": "CCS: CPT 109", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS110": {"name": "CPTCCS110", "description": "CCS: CPT 110", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS111": {"name": "CPTCCS111", "description": "CCS: CPT 111", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS112": {"name": "CPTCCS112", "description": "CCS: CPT 112", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS113": {"name": "CPTCCS113", "description": "CCS: CPT 113", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS114": {"name": "CPTCCS114", "description": "CCS: CPT 114", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS115": {"name": "CPTCCS115", "description": "CCS: CPT 115", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS116": {"name": "CPTCCS116", "description": "CCS: CPT 116", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS117": {"name": "CPTCCS117", "description": "CCS: CPT 117", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS118": {"name": "CPTCCS118", "description": "CCS: CPT 118", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS119": {"name": "CPTCCS119", "description": "CCS: CPT 119", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS120": {"name": "CPTCCS120", "description": "CCS: CPT 120", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS121": {"name": "CPTCCS121", "description": "CCS: CPT 121", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS122": {"name": "CPTCCS122", "description": "CCS: CPT 122", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS123": {"name": "CPTCCS123", "description": "CCS: CPT 123", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS124": {"name": "CPTCCS124", "description": "CCS: CPT 124", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS125": {"name": "CPTCCS125", "description": "CCS: CPT 125", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS126": {"name": "CPTCCS126", "description": "CCS: CPT 126", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS127": {"name": "CPTCCS127", "description": "CCS: CPT 127", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS128": {"name": "CPTCCS128", "description": "CCS: CPT 128", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS129": {"name": "CPTCCS129", "description": "CCS: CPT 129", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS130": {"name": "CPTCCS130", "description": "CCS: CPT 130", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS131": {"name": "CPTCCS131", "description": "CCS: CPT 131", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS132": {"name": "CPTCCS132", "description": "CCS: CPT 132", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS133": {"name": "CPTCCS133", "description": "CCS: CPT 133", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS134": {"name": "CPTCCS134", "description": "CCS: CPT 134", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS135": {"name": "CPTCCS135", "description": "CCS: CPT 135", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS136": {"name": "CPTCCS136", "description": "CCS: CPT 136", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS137": {"name": "CPTCCS137", "description": "CCS: CPT 137", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS138": {"name": "CPTCCS138", "description": "CCS: CPT 138", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS139": {"name": "CPTCCS139", "description": "CCS: CPT 139", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS140": {"name": "CPTCCS140", "description": "CCS: CPT 140", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS141": {"name": "CPTCCS141", "description": "CCS: CPT 141", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS142": {"name": "CPTCCS142", "description": "CCS: CPT 142", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS143": {"name": "CPTCCS143", "description": "CCS: CPT 143", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS144": {"name": "CPTCCS144", "description": "CCS: CPT 144", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS145": {"name": "CPTCCS145", "description": "CCS: CPT 145", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS146": {"name": "CPTCCS146", "description": "CCS: CPT 146", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS147": {"name": "CPTCCS147", "description": "CCS: CPT 147", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS148": {"name": "CPTCCS148", "description": "CCS: CPT 148", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS149": {"name": "CPTCCS149", "description": "CCS: CPT 149", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS150": {"name": "CPTCCS150", "description": "CCS: CPT 150", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS151": {"name": "CPTCCS151", "description": "CCS: CPT 151", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS152": {"name": "CPTCCS152", "description": "CCS: CPT 152", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS153": {"name": "CPTCCS153", "description": "CCS: CPT 153", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS154": {"name": "CPTCCS154", "description": "CCS: CPT 154", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS155": {"name": "CPTCCS155", "description": "CCS: CPT 155", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS156": {"name": "CPTCCS156", "description": "CCS: CPT 156", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS157": {"name": "CPTCCS157", "description": "CCS: CPT 157", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS158": {"name": "CPTCCS158", "description": "CCS: CPT 158", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS159": {"name": "CPTCCS159", "description": "CCS: CPT 159", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS160": {"name": "CPTCCS160", "description": "CCS: CPT 160", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS161": {"name": "CPTCCS161", "description": "CCS: CPT 161", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS162": {"name": "CPTCCS162", "description": "CCS: CPT 162", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS163": {"name": "CPTCCS163", "description": "CCS: CPT 163", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS164": {"name": "CPTCCS164", "description": "CCS: CPT 164", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS165": {"name": "CPTCCS165", "description": "CCS: CPT 165", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS166": {"name": "CPTCCS166", "description": "CCS: CPT 166", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS167": {"name": "CPTCCS167", "description": "CCS: CPT 167", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS168": {"name": "CPTCCS168", "description": "CCS: CPT 168", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS169": {"name": "CPTCCS169", "description": "CCS: CPT 169", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS170": {"name": "CPTCCS170", "description": "CCS: CPT 170", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS171": {"name": "CPTCCS171", "description": "CCS: CPT 171", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS172": {"name": "CPTCCS172", "description": "CCS: CPT 172", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS173": {"name": "CPTCCS173", "description": "CCS: CPT 173", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS174": {"name": "CPTCCS174", "description": "CCS: CPT 174", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS175": {"name": "CPTCCS175", "description": "CCS: CPT 175", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS176": {"name": "CPTCCS176", "description": "CCS: CPT 176", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS177": {"name": "CPTCCS177", "description": "CCS: CPT 177", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS178": {"name": "CPTCCS178", "description": "CCS: CPT 178", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS179": {"name": "CPTCCS179", "description": "CCS: CPT 179", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS180": {"name": "CPTCCS180", "description": "CCS: CPT 180", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS181": {"name": "CPTCCS181", "description": "CCS: CPT 181", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS182": {"name": "CPTCCS182", "description": "CCS: CPT 182", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS183": {"name": "CPTCCS183", "description": "CCS: CPT 183", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS184": {"name": "CPTCCS184", "description": "CCS: CPT 184", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS185": {"name": "CPTCCS185", "description": "CCS: CPT 185", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS186": {"name": "CPTCCS186", "description": "CCS: CPT 186", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS187": {"name": "CPTCCS187", "description": "CCS: CPT 187", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS188": {"name": "CPTCCS188", "description": "CCS: CPT 188", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS189": {"name": "CPTCCS189", "description": "CCS: CPT 189", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS190": {"name": "CPTCCS190", "description": "CCS: CPT 190", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS191": {"name": "CPTCCS191", "description": "CCS: CPT 191", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS192": {"name": "CPTCCS192", "description": "CCS: CPT 192", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS193": {"name": "CPTCCS193", "description": "CCS: CPT 193", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS194": {"name": "CPTCCS194", "description": "CCS: CPT 194", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS195": {"name": "CPTCCS195", "description": "CCS: CPT 195", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS196": {"name": "CPTCCS196", "description": "CCS: CPT 196", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS197": {"name": "CPTCCS197", "description": "CCS: CPT 197", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS198": {"name": "CPTCCS198", "description": "CCS: CPT 198", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS199": {"name": "CPTCCS199", "description": "CCS: CPT 199", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTCCS200": {"name": "CPTCCS200", "description": "CCS: CPT 200", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY1": {"name": "CPTDAY1", "description": "Number of days from admission to CPT1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY2": {"name": "CPTDAY2", "description": "Number of days from admission to CPT2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY3": {"name": "CPTDAY3", "description": "Number of days from admission to CPT3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY4": {"name": "CPTDAY4", "description": "Number of days from admission to CPT4", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY5": {"name": "CPTDAY5", "description": "Number of days from admission to CPT5", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY6": {"name": "CPTDAY6", "description": "Number of days from admission to CPT6", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY7": {"name": "CPTDAY7", "description": "Number of days from admission to CPT7", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY8": {"name": "CPTDAY8", "description": "Number of days from admission to CPT8", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY9": {"name": "CPTDAY9", "description": "Number of days from admission to CPT9", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY10": {"name": "CPTDAY10", "description": "Number of days from admission to CPT10", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY11": {"name": "CPTDAY11", "description": "Number of days from admission to CPT11", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY12": {"name": "CPTDAY12", "description": "Number of days from admission to CPT12", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY13": {"name": "CPTDAY13", "description": "Number of days from admission to CPT13", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY14": {"name": "CPTDAY14", "description": "Number of days from admission to CPT14", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY15": {"name": "CPTDAY15", "description": "Number of days from admission to CPT15", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY16": {"name": "CPTDAY16", "description": "Number of days from admission to CPT16", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY17": {"name": "CPTDAY17", "description": "Number of days from admission to CPT17", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY18": {"name": "CPTDAY18", "description": "Number of days from admission to CPT18", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY19": {"name": "CPTDAY19", "description": "Number of days from admission to CPT19", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY20": {"name": "CPTDAY20", "description": "Number of days from admission to CPT20", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY21": {"name": "CPTDAY21", "description": "Number of days from admission to CPT21", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY22": {"name": "CPTDAY22", "description": "Number of days from admission to CPT22", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY23": {"name": "CPTDAY23", "description": "Number of days from admission to CPT23", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY24": {"name": "CPTDAY24", "description": "Number of days from admission to CPT24", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY25": {"name": "CPTDAY25", "description": "Number of days from admission to CPT25", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY26": {"name": "CPTDAY26", "description": "Number of days from admission to CPT26", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY27": {"name": "CPTDAY27", "description": "Number of days from admission to CPT27", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY28": {"name": "CPTDAY28", "description": "Number of days from admission to CPT28", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY29": {"name": "CPTDAY29", "description": "Number of days from admission to CPT29", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY30": {"name": "CPTDAY30", "description": "Number of days from admission to CPT30", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY31": {"name": "CPTDAY31", "description": "Number of days from admission to CPT31", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY32": {"name": "CPTDAY32", "description": "Number of days from admission to CPT32", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY33": {"name": "CPTDAY33", "description": "Number of days from admission to CPT33", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY34": {"name": "CPTDAY34", "description": "Number of days from admission to CPT34", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY35": {"name": "CPTDAY35", "description": "Number of days from admission to CPT35", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY36": {"name": "CPTDAY36", "description": "Number of days from admission to CPT36", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY37": {"name": "CPTDAY37", "description": "Number of days from admission to CPT37", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY38": {"name": "CPTDAY38", "description": "Number of days from admission to CPT38", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY39": {"name": "CPTDAY39", "description": "Number of days from admission to CPT39", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY40": {"name": "CPTDAY40", "description": "Number of days from admission to CPT40", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY41": {"name": "CPTDAY41", "description": "Number of days from admission to CPT41", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY42": {"name": "CPTDAY42", "description": "Number of days from admission to CPT42", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY43": {"name": "CPTDAY43", "description": "Number of days from admission to CPT43", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY44": {"name": "CPTDAY44", "description": "Number of days from admission to CPT44", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY45": {"name": "CPTDAY45", "description": "Number of days from admission to CPT45", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY46": {"name": "CPTDAY46", "description": "Number of days from admission to CPT46", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY47": {"name": "CPTDAY47", "description": "Number of days from admission to CPT47", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY48": {"name": "CPTDAY48", "description": "Number of days from admission to CPT48", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY49": {"name": "CPTDAY49", "description": "Number of days from admission to CPT49", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY50": {"name": "CPTDAY50", "description": "Number of days from admission to CPT50", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY51": {"name": "CPTDAY51", "description": "Number of days from admission to CPT51", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY52": {"name": "CPTDAY52", "description": "Number of days from admission to CPT52", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY53": {"name": "CPTDAY53", "description": "Number of days from admission to CPT53", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY54": {"name": "CPTDAY54", "description": "Number of days from admission to CPT54", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY55": {"name": "CPTDAY55", "description": "Number of days from admission to CPT55", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY56": {"name": "CPTDAY56", "description": "Number of days from admission to CPT56", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY57": {"name": "CPTDAY57", "description": "Number of days from admission to CPT57", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY58": {"name": "CPTDAY58", "description": "Number of days from admission to CPT58", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY59": {"name": "CPTDAY59", "description": "Number of days from admission to CPT59", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY60": {"name": "CPTDAY60", "description": "Number of days from admission to CPT60", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY61": {"name": "CPTDAY61", "description": "Number of days from admission to CPT61", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY62": {"name": "CPTDAY62", "description": "Number of days from admission to CPT62", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY63": {"name": "CPTDAY63", "description": "Number of days from admission to CPT63", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY64": {"name": "CPTDAY64", "description": "Number of days from admission to CPT64", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY65": {"name": "CPTDAY65", "description": "Number of days from admission to CPT65", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY66": {"name": "CPTDAY66", "description": "Number of days from admission to CPT66", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY67": {"name": "CPTDAY67", "description": "Number of days from admission to CPT67", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY68": {"name": "CPTDAY68", "description": "Number of days from admission to CPT68", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY69": {"name": "CPTDAY69", "description": "Number of days from admission to CPT69", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY70": {"name": "CPTDAY70", "description": "Number of days from admission to CPT70", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY71": {"name": "CPTDAY71", "description": "Number of days from admission to CPT71", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY72": {"name": "CPTDAY72", "description": "Number of days from admission to CPT72", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY73": {"name": "CPTDAY73", "description": "Number of days from admission to CPT73", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY74": {"name": "CPTDAY74", "description": "Number of days from admission to CPT74", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY75": {"name": "CPTDAY75", "description": "Number of days from admission to CPT75", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY76": {"name": "CPTDAY76", "description": "Number of days from admission to CPT76", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY77": {"name": "CPTDAY77", "description": "Number of days from admission to CPT77", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY78": {"name": "CPTDAY78", "description": "Number of days from admission to CPT78", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY79": {"name": "CPTDAY79", "description": "Number of days from admission to CPT79", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY80": {"name": "CPTDAY80", "description": "Number of days from admission to CPT80", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY81": {"name": "CPTDAY81", "description": "Number of days from admission to CPT81", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY82": {"name": "CPTDAY82", "description": "Number of days from admission to CPT82", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY83": {"name": "CPTDAY83", "description": "Number of days from admission to CPT83", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY84": {"name": "CPTDAY84", "description": "Number of days from admission to CPT84", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY85": {"name": "CPTDAY85", "description": "Number of days from admission to CPT85", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY86": {"name": "CPTDAY86", "description": "Number of days from admission to CPT86", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY87": {"name": "CPTDAY87", "description": "Number of days from admission to CPT87", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY88": {"name": "CPTDAY88", "description": "Number of days from admission to CPT88", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY89": {"name": "CPTDAY89", "description": "Number of days from admission to CPT89", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY90": {"name": "CPTDAY90", "description": "Number of days from admission to CPT90", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY91": {"name": "CPTDAY91", "description": "Number of days from admission to CPT91", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY92": {"name": "CPTDAY92", "description": "Number of days from admission to CPT92", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY93": {"name": "CPTDAY93", "description": "Number of days from admission to CPT93", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY94": {"name": "CPTDAY94", "description": "Number of days from admission to CPT94", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY95": {"name": "CPTDAY95", "description": "Number of days from admission to CPT95", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY96": {"name": "CPTDAY96", "description": "Number of days from admission to CPT96", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY97": {"name": "CPTDAY97", "description": "Number of days from admission to CPT97", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY98": {"name": "CPTDAY98", "description": "Number of days from admission to CPT98", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY99": {"name": "CPTDAY99", "description": "Number of days from admission to CPT99", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY100": {"name": "CPTDAY100", "description": "Number of days from admission to CPT100", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY101": {"name": "CPTDAY101", "description": "Number of days from admission to CPT101", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY102": {"name": "CPTDAY102", "description": "Number of days from admission to CPT102", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY103": {"name": "CPTDAY103", "description": "Number of days from admission to CPT103", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY104": {"name": "CPTDAY104", "description": "Number of days from admission to CPT104", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY105": {"name": "CPTDAY105", "description": "Number of days from admission to CPT105", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY106": {"name": "CPTDAY106", "description": "Number of days from admission to CPT106", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY107": {"name": "CPTDAY107", "description": "Number of days from admission to CPT107", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY108": {"name": "CPTDAY108", "description": "Number of days from admission to CPT108", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY109": {"name": "CPTDAY109", "description": "Number of days from admission to CPT109", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY110": {"name": "CPTDAY110", "description": "Number of days from admission to CPT110", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY111": {"name": "CPTDAY111", "description": "Number of days from admission to CPT111", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY112": {"name": "CPTDAY112", "description": "Number of days from admission to CPT112", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY113": {"name": "CPTDAY113", "description": "Number of days from admission to CPT113", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY114": {"name": "CPTDAY114", "description": "Number of days from admission to CPT114", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY115": {"name": "CPTDAY115", "description": "Number of days from admission to CPT115", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY116": {"name": "CPTDAY116", "description": "Number of days from admission to CPT116", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY117": {"name": "CPTDAY117", "description": "Number of days from admission to CPT117", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY118": {"name": "CPTDAY118", "description": "Number of days from admission to CPT118", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY119": {"name": "CPTDAY119", "description": "Number of days from admission to CPT119", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY120": {"name": "CPTDAY120", "description": "Number of days from admission to CPT120", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY121": {"name": "CPTDAY121", "description": "Number of days from admission to CPT121", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY122": {"name": "CPTDAY122", "description": "Number of days from admission to CPT122", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY123": {"name": "CPTDAY123", "description": "Number of days from admission to CPT123", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY124": {"name": "CPTDAY124", "description": "Number of days from admission to CPT124", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY125": {"name": "CPTDAY125", "description": "Number of days from admission to CPT125", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY126": {"name": "CPTDAY126", "description": "Number of days from admission to CPT126", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY127": {"name": "CPTDAY127", "description": "Number of days from admission to CPT127", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY128": {"name": "CPTDAY128", "description": "Number of days from admission to CPT128", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY129": {"name": "CPTDAY129", "description": "Number of days from admission to CPT129", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY130": {"name": "CPTDAY130", "description": "Number of days from admission to CPT130", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY131": {"name": "CPTDAY131", "description": "Number of days from admission to CPT131", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY132": {"name": "CPTDAY132", "description": "Number of days from admission to CPT132", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY133": {"name": "CPTDAY133", "description": "Number of days from admission to CPT133", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY134": {"name": "CPTDAY134", "description": "Number of days from admission to CPT134", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY135": {"name": "CPTDAY135", "description": "Number of days from admission to CPT135", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY136": {"name": "CPTDAY136", "description": "Number of days from admission to CPT136", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY137": {"name": "CPTDAY137", "description": "Number of days from admission to CPT137", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY138": {"name": "CPTDAY138", "description": "Number of days from admission to CPT138", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY139": {"name": "CPTDAY139", "description": "Number of days from admission to CPT139", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY140": {"name": "CPTDAY140", "description": "Number of days from admission to CPT140", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY141": {"name": "CPTDAY141", "description": "Number of days from admission to CPT141", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY142": {"name": "CPTDAY142", "description": "Number of days from admission to CPT142", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY143": {"name": "CPTDAY143", "description": "Number of days from admission to CPT143", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY144": {"name": "CPTDAY144", "description": "Number of days from admission to CPT144", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY145": {"name": "CPTDAY145", "description": "Number of days from admission to CPT145", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY146": {"name": "CPTDAY146", "description": "Number of days from admission to CPT146", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY147": {"name": "CPTDAY147", "description": "Number of days from admission to CPT147", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY148": {"name": "CPTDAY148", "description": "Number of days from admission to CPT148", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY149": {"name": "CPTDAY149", "description": "Number of days from admission to CPT149", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY150": {"name": "CPTDAY150", "description": "Number of days from admission to CPT150", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY151": {"name": "CPTDAY151", "description": "Number of days from admission to CPT151", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY152": {"name": "CPTDAY152", "description": "Number of days from admission to CPT152", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY153": {"name": "CPTDAY153", "description": "Number of days from admission to CPT153", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY154": {"name": "CPTDAY154", "description": "Number of days from admission to CPT154", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY155": {"name": "CPTDAY155", "description": "Number of days from admission to CPT155", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY156": {"name": "CPTDAY156", "description": "Number of days from admission to CPT156", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY157": {"name": "CPTDAY157", "description": "Number of days from admission to CPT157", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY158": {"name": "CPTDAY158", "description": "Number of days from admission to CPT158", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY159": {"name": "CPTDAY159", "description": "Number of days from admission to CPT159", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY160": {"name": "CPTDAY160", "description": "Number of days from admission to CPT160", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY161": {"name": "CPTDAY161", "description": "Number of days from admission to CPT161", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY162": {"name": "CPTDAY162", "description": "Number of days from admission to CPT162", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY163": {"name": "CPTDAY163", "description": "Number of days from admission to CPT163", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY164": {"name": "CPTDAY164", "description": "Number of days from admission to CPT164", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY165": {"name": "CPTDAY165", "description": "Number of days from admission to CPT165", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY166": {"name": "CPTDAY166", "description": "Number of days from admission to CPT166", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY167": {"name": "CPTDAY167", "description": "Number of days from admission to CPT167", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY168": {"name": "CPTDAY168", "description": "Number of days from admission to CPT168", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY169": {"name": "CPTDAY169", "description": "Number of days from admission to CPT169", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY170": {"name": "CPTDAY170", "description": "Number of days from admission to CPT170", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY171": {"name": "CPTDAY171", "description": "Number of days from admission to CPT171", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY172": {"name": "CPTDAY172", "description": "Number of days from admission to CPT172", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY173": {"name": "CPTDAY173", "description": "Number of days from admission to CPT173", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY174": {"name": "CPTDAY174", "description": "Number of days from admission to CPT174", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY175": {"name": "CPTDAY175", "description": "Number of days from admission to CPT175", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY176": {"name": "CPTDAY176", "description": "Number of days from admission to CPT176", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY177": {"name": "CPTDAY177", "description": "Number of days from admission to CPT177", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY178": {"name": "CPTDAY178", "description": "Number of days from admission to CPT178", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY179": {"name": "CPTDAY179", "description": "Number of days from admission to CPT179", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY180": {"name": "CPTDAY180", "description": "Number of days from admission to CPT180", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY181": {"name": "CPTDAY181", "description": "Number of days from admission to CPT181", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY182": {"name": "CPTDAY182", "description": "Number of days from admission to CPT182", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY183": {"name": "CPTDAY183", "description": "Number of days from admission to CPT183", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY184": {"name": "CPTDAY184", "description": "Number of days from admission to CPT184", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY185": {"name": "CPTDAY185", "description": "Number of days from admission to CPT185", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY186": {"name": "CPTDAY186", "description": "Number of days from admission to CPT186", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY187": {"name": "CPTDAY187", "description": "Number of days from admission to CPT187", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY188": {"name": "CPTDAY188", "description": "Number of days from admission to CPT188", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY189": {"name": "CPTDAY189", "description": "Number of days from admission to CPT189", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY190": {"name": "CPTDAY190", "description": "Number of days from admission to CPT190", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY191": {"name": "CPTDAY191", "description": "Number of days from admission to CPT191", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY192": {"name": "CPTDAY192", "description": "Number of days from admission to CPT192", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY193": {"name": "CPTDAY193", "description": "Number of days from admission to CPT193", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY194": {"name": "CPTDAY194", "description": "Number of days from admission to CPT194", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY195": {"name": "CPTDAY195", "description": "Number of days from admission to CPT195", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY196": {"name": "CPTDAY196", "description": "Number of days from admission to CPT196", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY197": {"name": "CPTDAY197", "description": "Number of days from admission to CPT197", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY198": {"name": "CPTDAY198", "description": "Number of days from admission to CPT198", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY199": {"name": "CPTDAY199", "description": "Number of days from admission to CPT199", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTDAY200": {"name": "CPTDAY200", "description": "Number of days from admission to CPT200", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "CPTM1_1": {"name": "CPTM1_1", "description": "First CPT-4/HCPCS modifier 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_2": {"name": "CPTM1_2", "description": "First CPT-4/HCPCS modifier 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_3": {"name": "CPTM1_3", "description": "First CPT-4/HCPCS modifier 3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_4": {"name": "CPTM1_4", "description": "First CPT-4/HCPCS modifier 4", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_5": {"name": "CPTM1_5", "description": "First CPT-4/HCPCS modifier 5", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_6": {"name": "CPTM1_6", "description": "First CPT-4/HCPCS modifier 6", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_7": {"name": "CPTM1_7", "description": "First CPT-4/HCPCS modifier 7", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_8": {"name": "CPTM1_8", "description": "First CPT-4/HCPCS modifier 8", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_9": {"name": "CPTM1_9", "description": "First CPT-4/HCPCS modifier 9", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_10": {"name": "CPTM1_10", "description": "First CPT-4/HCPCS modifier 10", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_11": {"name": "CPTM1_11", "description": "First CPT-4/HCPCS modifier 11", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_12": {"name": "CPTM1_12", "description": "First CPT-4/HCPCS modifier 12", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_13": {"name": "CPTM1_13", "description": "First CPT-4/HCPCS modifier 13", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_14": {"name": "CPTM1_14", "description": "First CPT-4/HCPCS modifier 14", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_15": {"name": "CPTM1_15", "description": "First CPT-4/HCPCS modifier 15", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_16": {"name": "CPTM1_16", "description": "First CPT-4/HCPCS modifier 16", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_17": {"name": "CPTM1_17", "description": "First CPT-4/HCPCS modifier 17", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_18": {"name": "CPTM1_18", "description": "First CPT-4/HCPCS modifier 18", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_19": {"name": "CPTM1_19", "description": "First CPT-4/HCPCS modifier 19", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_20": {"name": "CPTM1_20", "description": "First CPT-4/HCPCS modifier 20", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_21": {"name": "CPTM1_21", "description": "First CPT-4/HCPCS modifier 21", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_22": {"name": "CPTM1_22", "description": "First CPT-4/HCPCS modifier 22", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_23": {"name": "CPTM1_23", "description": "First CPT-4/HCPCS modifier 23", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_24": {"name": "CPTM1_24", "description": "First CPT-4/HCPCS modifier 24", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_25": {"name": "CPTM1_25", "description": "First CPT-4/HCPCS modifier 25", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_26": {"name": "CPTM1_26", "description": "First CPT-4/HCPCS modifier 26", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_27": {"name": "CPTM1_27", "description": "First CPT-4/HCPCS modifier 27", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_28": {"name": "CPTM1_28", "description": "First CPT-4/HCPCS modifier 28", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_29": {"name": "CPTM1_29", "description": "First CPT-4/HCPCS modifier 29", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_30": {"name": "CPTM1_30", "description": "First CPT-4/HCPCS modifier 30", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_31": {"name": "CPTM1_31", "description": "First CPT-4/HCPCS modifier 31", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_32": {"name": "CPTM1_32", "description": "First CPT-4/HCPCS modifier 32", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_33": {"name": "CPTM1_33", "description": "First CPT-4/HCPCS modifier 33", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_34": {"name": "CPTM1_34", "description": "First CPT-4/HCPCS modifier 34", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_35": {"name": "CPTM1_35", "description": "First CPT-4/HCPCS modifier 35", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_36": {"name": "CPTM1_36", "description": "First CPT-4/HCPCS modifier 36", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_37": {"name": "CPTM1_37", "description": "First CPT-4/HCPCS modifier 37", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_38": {"name": "CPTM1_38", "description": "First CPT-4/HCPCS modifier 38", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_39": {"name": "CPTM1_39", "description": "First CPT-4/HCPCS modifier 39", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_40": {"name": "CPTM1_40", "description": "First CPT-4/HCPCS modifier 40", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_41": {"name": "CPTM1_41", "description": "First CPT-4/HCPCS modifier 41", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_42": {"name": "CPTM1_42", "description": "First CPT-4/HCPCS modifier 42", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_43": {"name": "CPTM1_43", "description": "First CPT-4/HCPCS modifier 43", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_44": {"name": "CPTM1_44", "description": "First CPT-4/HCPCS modifier 44", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_45": {"name": "CPTM1_45", "description": "First CPT-4/HCPCS modifier 45", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_46": {"name": "CPTM1_46", "description": "First CPT-4/HCPCS modifier 46", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_47": {"name": "CPTM1_47", "description": "First CPT-4/HCPCS modifier 47", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_48": {"name": "CPTM1_48", "description": "First CPT-4/HCPCS modifier 48", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_49": {"name": "CPTM1_49", "description": "First CPT-4/HCPCS modifier 49", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_50": {"name": "CPTM1_50", "description": "First CPT-4/HCPCS modifier 50", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_51": {"name": "CPTM1_51", "description": "First CPT-4/HCPCS modifier 51", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_52": {"name": "CPTM1_52", "description": "First CPT-4/HCPCS modifier 52", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_53": {"name": "CPTM1_53", "description": "First CPT-4/HCPCS modifier 53", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_54": {"name": "CPTM1_54", "description": "First CPT-4/HCPCS modifier 54", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_55": {"name": "CPTM1_55", "description": "First CPT-4/HCPCS modifier 55", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_56": {"name": "CPTM1_56", "description": "First CPT-4/HCPCS modifier 56", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_57": {"name": "CPTM1_57", "description": "First CPT-4/HCPCS modifier 57", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_58": {"name": "CPTM1_58", "description": "First CPT-4/HCPCS modifier 58", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_59": {"name": "CPTM1_59", "description": "First CPT-4/HCPCS modifier 59", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_60": {"name": "CPTM1_60", "description": "First CPT-4/HCPCS modifier 60", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_61": {"name": "CPTM1_61", "description": "First CPT-4/HCPCS modifier 61", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_62": {"name": "CPTM1_62", "description": "First CPT-4/HCPCS modifier 62", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_63": {"name": "CPTM1_63", "description": "First CPT-4/HCPCS modifier 63", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_64": {"name": "CPTM1_64", "description": "First CPT-4/HCPCS modifier 64", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_65": {"name": "CPTM1_65", "description": "First CPT-4/HCPCS modifier 65", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_66": {"name": "CPTM1_66", "description": "First CPT-4/HCPCS modifier 66", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_67": {"name": "CPTM1_67", "description": "First CPT-4/HCPCS modifier 67", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_68": {"name": "CPTM1_68", "description": "First CPT-4/HCPCS modifier 68", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_69": {"name": "CPTM1_69", "description": "First CPT-4/HCPCS modifier 69", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_70": {"name": "CPTM1_70", "description": "First CPT-4/HCPCS modifier 70", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_71": {"name": "CPTM1_71", "description": "First CPT-4/HCPCS modifier 71", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_72": {"name": "CPTM1_72", "description": "First CPT-4/HCPCS modifier 72", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_73": {"name": "CPTM1_73", "description": "First CPT-4/HCPCS modifier 73", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_74": {"name": "CPTM1_74", "description": "First CPT-4/HCPCS modifier 74", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_75": {"name": "CPTM1_75", "description": "First CPT-4/HCPCS modifier 75", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_76": {"name": "CPTM1_76", "description": "First CPT-4/HCPCS modifier 76", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_77": {"name": "CPTM1_77", "description": "First CPT-4/HCPCS modifier 77", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_78": {"name": "CPTM1_78", "description": "First CPT-4/HCPCS modifier 78", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_79": {"name": "CPTM1_79", "description": "First CPT-4/HCPCS modifier 79", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_80": {"name": "CPTM1_80", "description": "First CPT-4/HCPCS modifier 80", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_81": {"name": "CPTM1_81", "description": "First CPT-4/HCPCS modifier 81", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_82": {"name": "CPTM1_82", "description": "First CPT-4/HCPCS modifier 82", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_83": {"name": "CPTM1_83", "description": "First CPT-4/HCPCS modifier 83", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_84": {"name": "CPTM1_84", "description": "First CPT-4/HCPCS modifier 84", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_85": {"name": "CPTM1_85", "description": "First CPT-4/HCPCS modifier 85", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_86": {"name": "CPTM1_86", "description": "First CPT-4/HCPCS modifier 86", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_87": {"name": "CPTM1_87", "description": "First CPT-4/HCPCS modifier 87", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_88": {"name": "CPTM1_88", "description": "First CPT-4/HCPCS modifier 88", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_89": {"name": "CPTM1_89", "description": "First CPT-4/HCPCS modifier 89", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_90": {"name": "CPTM1_90", "description": "First CPT-4/HCPCS modifier 90", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_91": {"name": "CPTM1_91", "description": "First CPT-4/HCPCS modifier 91", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_92": {"name": "CPTM1_92", "description": "First CPT-4/HCPCS modifier 92", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_93": {"name": "CPTM1_93", "description": "First CPT-4/HCPCS modifier 93", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_94": {"name": "CPTM1_94", "description": "First CPT-4/HCPCS modifier 94", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_95": {"name": "CPTM1_95", "description": "First CPT-4/HCPCS modifier 95", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_96": {"name": "CPTM1_96", "description": "First CPT-4/HCPCS modifier 96", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_97": {"name": "CPTM1_97", "description": "First CPT-4/HCPCS modifier 97", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_98": {"name": "CPTM1_98", "description": "First CPT-4/HCPCS modifier 98", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_99": {"name": "CPTM1_99", "description": "First CPT-4/HCPCS modifier 99", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_100": {"name": "CPTM1_100", "description": "First CPT-4/HCPCS modifier 100", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_101": {"name": "CPTM1_101", "description": "First CPT-4/HCPCS modifier 101", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_102": {"name": "CPTM1_102", "description": "First CPT-4/HCPCS modifier 102", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_103": {"name": "CPTM1_103", "description": "First CPT-4/HCPCS modifier 103", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_104": {"name": "CPTM1_104", "description": "First CPT-4/HCPCS modifier 104", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_105": {"name": "CPTM1_105", "description": "First CPT-4/HCPCS modifier 105", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_106": {"name": "CPTM1_106", "description": "First CPT-4/HCPCS modifier 106", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_107": {"name": "CPTM1_107", "description": "First CPT-4/HCPCS modifier 107", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_108": {"name": "CPTM1_108", "description": "First CPT-4/HCPCS modifier 108", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_109": {"name": "CPTM1_109", "description": "First CPT-4/HCPCS modifier 109", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_110": {"name": "CPTM1_110", "description": "First CPT-4/HCPCS modifier 110", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_111": {"name": "CPTM1_111", "description": "First CPT-4/HCPCS modifier 111", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_112": {"name": "CPTM1_112", "description": "First CPT-4/HCPCS modifier 112", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_113": {"name": "CPTM1_113", "description": "First CPT-4/HCPCS modifier 113", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_114": {"name": "CPTM1_114", "description": "First CPT-4/HCPCS modifier 114", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_115": {"name": "CPTM1_115", "description": "First CPT-4/HCPCS modifier 115", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_116": {"name": "CPTM1_116", "description": "First CPT-4/HCPCS modifier 116", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_117": {"name": "CPTM1_117", "description": "First CPT-4/HCPCS modifier 117", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_118": {"name": "CPTM1_118", "description": "First CPT-4/HCPCS modifier 118", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_119": {"name": "CPTM1_119", "description": "First CPT-4/HCPCS modifier 119", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_120": {"name": "CPTM1_120", "description": "First CPT-4/HCPCS modifier 120", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_121": {"name": "CPTM1_121", "description": "First CPT-4/HCPCS modifier 121", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_122": {"name": "CPTM1_122", "description": "First CPT-4/HCPCS modifier 122", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_123": {"name": "CPTM1_123", "description": "First CPT-4/HCPCS modifier 123", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_124": {"name": "CPTM1_124", "description": "First CPT-4/HCPCS modifier 124", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_125": {"name": "CPTM1_125", "description": "First CPT-4/HCPCS modifier 125", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_126": {"name": "CPTM1_126", "description": "First CPT-4/HCPCS modifier 126", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_127": {"name": "CPTM1_127", "description": "First CPT-4/HCPCS modifier 127", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_128": {"name": "CPTM1_128", "description": "First CPT-4/HCPCS modifier 128", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_129": {"name": "CPTM1_129", "description": "First CPT-4/HCPCS modifier 129", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_130": {"name": "CPTM1_130", "description": "First CPT-4/HCPCS modifier 130", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_131": {"name": "CPTM1_131", "description": "First CPT-4/HCPCS modifier 131", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_132": {"name": "CPTM1_132", "description": "First CPT-4/HCPCS modifier 132", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_133": {"name": "CPTM1_133", "description": "First CPT-4/HCPCS modifier 133", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_134": {"name": "CPTM1_134", "description": "First CPT-4/HCPCS modifier 134", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_135": {"name": "CPTM1_135", "description": "First CPT-4/HCPCS modifier 135", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_136": {"name": "CPTM1_136", "description": "First CPT-4/HCPCS modifier 136", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_137": {"name": "CPTM1_137", "description": "First CPT-4/HCPCS modifier 137", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_138": {"name": "CPTM1_138", "description": "First CPT-4/HCPCS modifier 138", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_139": {"name": "CPTM1_139", "description": "First CPT-4/HCPCS modifier 139", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_140": {"name": "CPTM1_140", "description": "First CPT-4/HCPCS modifier 140", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_141": {"name": "CPTM1_141", "description": "First CPT-4/HCPCS modifier 141", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_142": {"name": "CPTM1_142", "description": "First CPT-4/HCPCS modifier 142", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_143": {"name": "CPTM1_143", "description": "First CPT-4/HCPCS modifier 143", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_144": {"name": "CPTM1_144", "description": "First CPT-4/HCPCS modifier 144", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_145": {"name": "CPTM1_145", "description": "First CPT-4/HCPCS modifier 145", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_146": {"name": "CPTM1_146", "description": "First CPT-4/HCPCS modifier 146", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_147": {"name": "CPTM1_147", "description": "First CPT-4/HCPCS modifier 147", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_148": {"name": "CPTM1_148", "description": "First CPT-4/HCPCS modifier 148", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_149": {"name": "CPTM1_149", "description": "First CPT-4/HCPCS modifier 149", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_150": {"name": "CPTM1_150", "description": "First CPT-4/HCPCS modifier 150", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_151": {"name": "CPTM1_151", "description": "First CPT-4/HCPCS modifier 151", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_152": {"name": "CPTM1_152", "description": "First CPT-4/HCPCS modifier 152", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_153": {"name": "CPTM1_153", "description": "First CPT-4/HCPCS modifier 153", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_154": {"name": "CPTM1_154", "description": "First CPT-4/HCPCS modifier 154", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_155": {"name": "CPTM1_155", "description": "First CPT-4/HCPCS modifier 155", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_156": {"name": "CPTM1_156", "description": "First CPT-4/HCPCS modifier 156", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_157": {"name": "CPTM1_157", "description": "First CPT-4/HCPCS modifier 157", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_158": {"name": "CPTM1_158", "description": "First CPT-4/HCPCS modifier 158", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_159": {"name": "CPTM1_159", "description": "First CPT-4/HCPCS modifier 159", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_160": {"name": "CPTM1_160", "description": "First CPT-4/HCPCS modifier 160", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_161": {"name": "CPTM1_161", "description": "First CPT-4/HCPCS modifier 161", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_162": {"name": "CPTM1_162", "description": "First CPT-4/HCPCS modifier 162", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_163": {"name": "CPTM1_163", "description": "First CPT-4/HCPCS modifier 163", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_164": {"name": "CPTM1_164", "description": "First CPT-4/HCPCS modifier 164", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_165": {"name": "CPTM1_165", "description": "First CPT-4/HCPCS modifier 165", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_166": {"name": "CPTM1_166", "description": "First CPT-4/HCPCS modifier 166", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_167": {"name": "CPTM1_167", "description": "First CPT-4/HCPCS modifier 167", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_168": {"name": "CPTM1_168", "description": "First CPT-4/HCPCS modifier 168", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_169": {"name": "CPTM1_169", "description": "First CPT-4/HCPCS modifier 169", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_170": {"name": "CPTM1_170", "description": "First CPT-4/HCPCS modifier 170", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_171": {"name": "CPTM1_171", "description": "First CPT-4/HCPCS modifier 171", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_172": {"name": "CPTM1_172", "description": "First CPT-4/HCPCS modifier 172", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_173": {"name": "CPTM1_173", "description": "First CPT-4/HCPCS modifier 173", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_174": {"name": "CPTM1_174", "description": "First CPT-4/HCPCS modifier 174", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_175": {"name": "CPTM1_175", "description": "First CPT-4/HCPCS modifier 175", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_176": {"name": "CPTM1_176", "description": "First CPT-4/HCPCS modifier 176", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_177": {"name": "CPTM1_177", "description": "First CPT-4/HCPCS modifier 177", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_178": {"name": "CPTM1_178", "description": "First CPT-4/HCPCS modifier 178", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_179": {"name": "CPTM1_179", "description": "First CPT-4/HCPCS modifier 179", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_180": {"name": "CPTM1_180", "description": "First CPT-4/HCPCS modifier 180", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_181": {"name": "CPTM1_181", "description": "First CPT-4/HCPCS modifier 181", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_182": {"name": "CPTM1_182", "description": "First CPT-4/HCPCS modifier 182", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_183": {"name": "CPTM1_183", "description": "First CPT-4/HCPCS modifier 183", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_184": {"name": "CPTM1_184", "description": "First CPT-4/HCPCS modifier 184", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_185": {"name": "CPTM1_185", "description": "First CPT-4/HCPCS modifier 185", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_186": {"name": "CPTM1_186", "description": "First CPT-4/HCPCS modifier 186", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_187": {"name": "CPTM1_187", "description": "First CPT-4/HCPCS modifier 187", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_188": {"name": "CPTM1_188", "description": "First CPT-4/HCPCS modifier 188", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_189": {"name": "CPTM1_189", "description": "First CPT-4/HCPCS modifier 189", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_190": {"name": "CPTM1_190", "description": "First CPT-4/HCPCS modifier 190", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_191": {"name": "CPTM1_191", "description": "First CPT-4/HCPCS modifier 191", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_192": {"name": "CPTM1_192", "description": "First CPT-4/HCPCS modifier 192", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_193": {"name": "CPTM1_193", "description": "First CPT-4/HCPCS modifier 193", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_194": {"name": "CPTM1_194", "description": "First CPT-4/HCPCS modifier 194", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_195": {"name": "CPTM1_195", "description": "First CPT-4/HCPCS modifier 195", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_196": {"name": "CPTM1_196", "description": "First CPT-4/HCPCS modifier 196", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_197": {"name": "CPTM1_197", "description": "First CPT-4/HCPCS modifier 197", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_198": {"name": "CPTM1_198", "description": "First CPT-4/HCPCS modifier 198", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_199": {"name": "CPTM1_199", "description": "First CPT-4/HCPCS modifier 199", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM1_200": {"name": "CPTM1_200", "description": "First CPT-4/HCPCS modifier 200", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_1": {"name": "CPTM2_1", "description": "Second CPT-4/HCPCS modifier 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_2": {"name": "CPTM2_2", "description": "Second CPT-4/HCPCS modifier 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_3": {"name": "CPTM2_3", "description": "Second CPT-4/HCPCS modifier 3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_4": {"name": "CPTM2_4", "description": "Second CPT-4/HCPCS modifier 4", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_5": {"name": "CPTM2_5", "description": "Second CPT-4/HCPCS modifier 5", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_6": {"name": "CPTM2_6", "description": "Second CPT-4/HCPCS modifier 6", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_7": {"name": "CPTM2_7", "description": "Second CPT-4/HCPCS modifier 7", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_8": {"name": "CPTM2_8", "description": "Second CPT-4/HCPCS modifier 8", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_9": {"name": "CPTM2_9", "description": "Second CPT-4/HCPCS modifier 9", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_10": {"name": "CPTM2_10", "description": "Second CPT-4/HCPCS modifier 10", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_11": {"name": "CPTM2_11", "description": "Second CPT-4/HCPCS modifier 11", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_12": {"name": "CPTM2_12", "description": "Second CPT-4/HCPCS modifier 12", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_13": {"name": "CPTM2_13", "description": "Second CPT-4/HCPCS modifier 13", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_14": {"name": "CPTM2_14", "description": "Second CPT-4/HCPCS modifier 14", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_15": {"name": "CPTM2_15", "description": "Second CPT-4/HCPCS modifier 15", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_16": {"name": "CPTM2_16", "description": "Second CPT-4/HCPCS modifier 16", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_17": {"name": "CPTM2_17", "description": "Second CPT-4/HCPCS modifier 17", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_18": {"name": "CPTM2_18", "description": "Second CPT-4/HCPCS modifier 18", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_19": {"name": "CPTM2_19", "description": "Second CPT-4/HCPCS modifier 19", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_20": {"name": "CPTM2_20", "description": "Second CPT-4/HCPCS modifier 20", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_21": {"name": "CPTM2_21", "description": "Second CPT-4/HCPCS modifier 21", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_22": {"name": "CPTM2_22", "description": "Second CPT-4/HCPCS modifier 22", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_23": {"name": "CPTM2_23", "description": "Second CPT-4/HCPCS modifier 23", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_24": {"name": "CPTM2_24", "description": "Second CPT-4/HCPCS modifier 24", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_25": {"name": "CPTM2_25", "description": "Second CPT-4/HCPCS modifier 25", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_26": {"name": "CPTM2_26", "description": "Second CPT-4/HCPCS modifier 26", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_27": {"name": "CPTM2_27", "description": "Second CPT-4/HCPCS modifier 27", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_28": {"name": "CPTM2_28", "description": "Second CPT-4/HCPCS modifier 28", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_29": {"name": "CPTM2_29", "description": "Second CPT-4/HCPCS modifier 29", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_30": {"name": "CPTM2_30", "description": "Second CPT-4/HCPCS modifier 30", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_31": {"name": "CPTM2_31", "description": "Second CPT-4/HCPCS modifier 31", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_32": {"name": "CPTM2_32", "description": "Second CPT-4/HCPCS modifier 32", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_33": {"name": "CPTM2_33", "description": "Second CPT-4/HCPCS modifier 33", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_34": {"name": "CPTM2_34", "description": "Second CPT-4/HCPCS modifier 34", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_35": {"name": "CPTM2_35", "description": "Second CPT-4/HCPCS modifier 35", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_36": {"name": "CPTM2_36", "description": "Second CPT-4/HCPCS modifier 36", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_37": {"name": "CPTM2_37", "description": "Second CPT-4/HCPCS modifier 37", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_38": {"name": "CPTM2_38", "description": "Second CPT-4/HCPCS modifier 38", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_39": {"name": "CPTM2_39", "description": "Second CPT-4/HCPCS modifier 39", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_40": {"name": "CPTM2_40", "description": "Second CPT-4/HCPCS modifier 40", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_41": {"name": "CPTM2_41", "description": "Second CPT-4/HCPCS modifier 41", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_42": {"name": "CPTM2_42", "description": "Second CPT-4/HCPCS modifier 42", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_43": {"name": "CPTM2_43", "description": "Second CPT-4/HCPCS modifier 43", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_44": {"name": "CPTM2_44", "description": "Second CPT-4/HCPCS modifier 44", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_45": {"name": "CPTM2_45", "description": "Second CPT-4/HCPCS modifier 45", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_46": {"name": "CPTM2_46", "description": "Second CPT-4/HCPCS modifier 46", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_47": {"name": "CPTM2_47", "description": "Second CPT-4/HCPCS modifier 47", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_48": {"name": "CPTM2_48", "description": "Second CPT-4/HCPCS modifier 48", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_49": {"name": "CPTM2_49", "description": "Second CPT-4/HCPCS modifier 49", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_50": {"name": "CPTM2_50", "description": "Second CPT-4/HCPCS modifier 50", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_51": {"name": "CPTM2_51", "description": "Second CPT-4/HCPCS modifier 51", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_52": {"name": "CPTM2_52", "description": "Second CPT-4/HCPCS modifier 52", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_53": {"name": "CPTM2_53", "description": "Second CPT-4/HCPCS modifier 53", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_54": {"name": "CPTM2_54", "description": "Second CPT-4/HCPCS modifier 54", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_55": {"name": "CPTM2_55", "description": "Second CPT-4/HCPCS modifier 55", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_56": {"name": "CPTM2_56", "description": "Second CPT-4/HCPCS modifier 56", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_57": {"name": "CPTM2_57", "description": "Second CPT-4/HCPCS modifier 57", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_58": {"name": "CPTM2_58", "description": "Second CPT-4/HCPCS modifier 58", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_59": {"name": "CPTM2_59", "description": "Second CPT-4/HCPCS modifier 59", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_60": {"name": "CPTM2_60", "description": "Second CPT-4/HCPCS modifier 60", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_61": {"name": "CPTM2_61", "description": "Second CPT-4/HCPCS modifier 61", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_62": {"name": "CPTM2_62", "description": "Second CPT-4/HCPCS modifier 62", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_63": {"name": "CPTM2_63", "description": "Second CPT-4/HCPCS modifier 63", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_64": {"name": "CPTM2_64", "description": "Second CPT-4/HCPCS modifier 64", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_65": {"name": "CPTM2_65", "description": "Second CPT-4/HCPCS modifier 65", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_66": {"name": "CPTM2_66", "description": "Second CPT-4/HCPCS modifier 66", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_67": {"name": "CPTM2_67", "description": "Second CPT-4/HCPCS modifier 67", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_68": {"name": "CPTM2_68", "description": "Second CPT-4/HCPCS modifier 68", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_69": {"name": "CPTM2_69", "description": "Second CPT-4/HCPCS modifier 69", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_70": {"name": "CPTM2_70", "description": "Second CPT-4/HCPCS modifier 70", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_71": {"name": "CPTM2_71", "description": "Second CPT-4/HCPCS modifier 71", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_72": {"name": "CPTM2_72", "description": "Second CPT-4/HCPCS modifier 72", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_73": {"name": "CPTM2_73", "description": "Second CPT-4/HCPCS modifier 73", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_74": {"name": "CPTM2_74", "description": "Second CPT-4/HCPCS modifier 74", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_75": {"name": "CPTM2_75", "description": "Second CPT-4/HCPCS modifier 75", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_76": {"name": "CPTM2_76", "description": "Second CPT-4/HCPCS modifier 76", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_77": {"name": "CPTM2_77", "description": "Second CPT-4/HCPCS modifier 77", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_78": {"name": "CPTM2_78", "description": "Second CPT-4/HCPCS modifier 78", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_79": {"name": "CPTM2_79", "description": "Second CPT-4/HCPCS modifier 79", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_80": {"name": "CPTM2_80", "description": "Second CPT-4/HCPCS modifier 80", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_81": {"name": "CPTM2_81", "description": "Second CPT-4/HCPCS modifier 81", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_82": {"name": "CPTM2_82", "description": "Second CPT-4/HCPCS modifier 82", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_83": {"name": "CPTM2_83", "description": "Second CPT-4/HCPCS modifier 83", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_84": {"name": "CPTM2_84", "description": "Second CPT-4/HCPCS modifier 84", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_85": {"name": "CPTM2_85", "description": "Second CPT-4/HCPCS modifier 85", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_86": {"name": "CPTM2_86", "description": "Second CPT-4/HCPCS modifier 86", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_87": {"name": "CPTM2_87", "description": "Second CPT-4/HCPCS modifier 87", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_88": {"name": "CPTM2_88", "description": "Second CPT-4/HCPCS modifier 88", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_89": {"name": "CPTM2_89", "description": "Second CPT-4/HCPCS modifier 89", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_90": {"name": "CPTM2_90", "description": "Second CPT-4/HCPCS modifier 90", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_91": {"name": "CPTM2_91", "description": "Second CPT-4/HCPCS modifier 91", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_92": {"name": "CPTM2_92", "description": "Second CPT-4/HCPCS modifier 92", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_93": {"name": "CPTM2_93", "description": "Second CPT-4/HCPCS modifier 93", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_94": {"name": "CPTM2_94", "description": "Second CPT-4/HCPCS modifier 94", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_95": {"name": "CPTM2_95", "description": "Second CPT-4/HCPCS modifier 95", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_96": {"name": "CPTM2_96", "description": "Second CPT-4/HCPCS modifier 96", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_97": {"name": "CPTM2_97", "description": "Second CPT-4/HCPCS modifier 97", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_98": {"name": "CPTM2_98", "description": "Second CPT-4/HCPCS modifier 98", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_99": {"name": "CPTM2_99", "description": "Second CPT-4/HCPCS modifier 99", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_100": {"name": "CPTM2_100", "description": "Second CPT-4/HCPCS modifier 100", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_101": {"name": "CPTM2_101", "description": "Second CPT-4/HCPCS modifier 101", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_102": {"name": "CPTM2_102", "description": "Second CPT-4/HCPCS modifier 102", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_103": {"name": "CPTM2_103", "description": "Second CPT-4/HCPCS modifier 103", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_104": {"name": "CPTM2_104", "description": "Second CPT-4/HCPCS modifier 104", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_105": {"name": "CPTM2_105", "description": "Second CPT-4/HCPCS modifier 105", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_106": {"name": "CPTM2_106", "description": "Second CPT-4/HCPCS modifier 106", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_107": {"name": "CPTM2_107", "description": "Second CPT-4/HCPCS modifier 107", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_108": {"name": "CPTM2_108", "description": "Second CPT-4/HCPCS modifier 108", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_109": {"name": "CPTM2_109", "description": "Second CPT-4/HCPCS modifier 109", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_110": {"name": "CPTM2_110", "description": "Second CPT-4/HCPCS modifier 110", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_111": {"name": "CPTM2_111", "description": "Second CPT-4/HCPCS modifier 111", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_112": {"name": "CPTM2_112", "description": "Second CPT-4/HCPCS modifier 112", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_113": {"name": "CPTM2_113", "description": "Second CPT-4/HCPCS modifier 113", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_114": {"name": "CPTM2_114", "description": "Second CPT-4/HCPCS modifier 114", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_115": {"name": "CPTM2_115", "description": "Second CPT-4/HCPCS modifier 115", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_116": {"name": "CPTM2_116", "description": "Second CPT-4/HCPCS modifier 116", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_117": {"name": "CPTM2_117", "description": "Second CPT-4/HCPCS modifier 117", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_118": {"name": "CPTM2_118", "description": "Second CPT-4/HCPCS modifier 118", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_119": {"name": "CPTM2_119", "description": "Second CPT-4/HCPCS modifier 119", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_120": {"name": "CPTM2_120", "description": "Second CPT-4/HCPCS modifier 120", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_121": {"name": "CPTM2_121", "description": "Second CPT-4/HCPCS modifier 121", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_122": {"name": "CPTM2_122", "description": "Second CPT-4/HCPCS modifier 122", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_123": {"name": "CPTM2_123", "description": "Second CPT-4/HCPCS modifier 123", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_124": {"name": "CPTM2_124", "description": "Second CPT-4/HCPCS modifier 124", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_125": {"name": "CPTM2_125", "description": "Second CPT-4/HCPCS modifier 125", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_126": {"name": "CPTM2_126", "description": "Second CPT-4/HCPCS modifier 126", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_127": {"name": "CPTM2_127", "description": "Second CPT-4/HCPCS modifier 127", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_128": {"name": "CPTM2_128", "description": "Second CPT-4/HCPCS modifier 128", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_129": {"name": "CPTM2_129", "description": "Second CPT-4/HCPCS modifier 129", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_130": {"name": "CPTM2_130", "description": "Second CPT-4/HCPCS modifier 130", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_131": {"name": "CPTM2_131", "description": "Second CPT-4/HCPCS modifier 131", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_132": {"name": "CPTM2_132", "description": "Second CPT-4/HCPCS modifier 132", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_133": {"name": "CPTM2_133", "description": "Second CPT-4/HCPCS modifier 133", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_134": {"name": "CPTM2_134", "description": "Second CPT-4/HCPCS modifier 134", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_135": {"name": "CPTM2_135", "description": "Second CPT-4/HCPCS modifier 135", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_136": {"name": "CPTM2_136", "description": "Second CPT-4/HCPCS modifier 136", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_137": {"name": "CPTM2_137", "description": "Second CPT-4/HCPCS modifier 137", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_138": {"name": "CPTM2_138", "description": "Second CPT-4/HCPCS modifier 138", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_139": {"name": "CPTM2_139", "description": "Second CPT-4/HCPCS modifier 139", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_140": {"name": "CPTM2_140", "description": "Second CPT-4/HCPCS modifier 140", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_141": {"name": "CPTM2_141", "description": "Second CPT-4/HCPCS modifier 141", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_142": {"name": "CPTM2_142", "description": "Second CPT-4/HCPCS modifier 142", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_143": {"name": "CPTM2_143", "description": "Second CPT-4/HCPCS modifier 143", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_144": {"name": "CPTM2_144", "description": "Second CPT-4/HCPCS modifier 144", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_145": {"name": "CPTM2_145", "description": "Second CPT-4/HCPCS modifier 145", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_146": {"name": "CPTM2_146", "description": "Second CPT-4/HCPCS modifier 146", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_147": {"name": "CPTM2_147", "description": "Second CPT-4/HCPCS modifier 147", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_148": {"name": "CPTM2_148", "description": "Second CPT-4/HCPCS modifier 148", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_149": {"name": "CPTM2_149", "description": "Second CPT-4/HCPCS modifier 149", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_150": {"name": "CPTM2_150", "description": "Second CPT-4/HCPCS modifier 150", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_151": {"name": "CPTM2_151", "description": "Second CPT-4/HCPCS modifier 151", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_152": {"name": "CPTM2_152", "description": "Second CPT-4/HCPCS modifier 152", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_153": {"name": "CPTM2_153", "description": "Second CPT-4/HCPCS modifier 153", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_154": {"name": "CPTM2_154", "description": "Second CPT-4/HCPCS modifier 154", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_155": {"name": "CPTM2_155", "description": "Second CPT-4/HCPCS modifier 155", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_156": {"name": "CPTM2_156", "description": "Second CPT-4/HCPCS modifier 156", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_157": {"name": "CPTM2_157", "description": "Second CPT-4/HCPCS modifier 157", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_158": {"name": "CPTM2_158", "description": "Second CPT-4/HCPCS modifier 158", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_159": {"name": "CPTM2_159", "description": "Second CPT-4/HCPCS modifier 159", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_160": {"name": "CPTM2_160", "description": "Second CPT-4/HCPCS modifier 160", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_161": {"name": "CPTM2_161", "description": "Second CPT-4/HCPCS modifier 161", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_162": {"name": "CPTM2_162", "description": "Second CPT-4/HCPCS modifier 162", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_163": {"name": "CPTM2_163", "description": "Second CPT-4/HCPCS modifier 163", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_164": {"name": "CPTM2_164", "description": "Second CPT-4/HCPCS modifier 164", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_165": {"name": "CPTM2_165", "description": "Second CPT-4/HCPCS modifier 165", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_166": {"name": "CPTM2_166", "description": "Second CPT-4/HCPCS modifier 166", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_167": {"name": "CPTM2_167", "description": "Second CPT-4/HCPCS modifier 167", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_168": {"name": "CPTM2_168", "description": "Second CPT-4/HCPCS modifier 168", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_169": {"name": "CPTM2_169", "description": "Second CPT-4/HCPCS modifier 169", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_170": {"name": "CPTM2_170", "description": "Second CPT-4/HCPCS modifier 170", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_171": {"name": "CPTM2_171", "description": "Second CPT-4/HCPCS modifier 171", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_172": {"name": "CPTM2_172", "description": "Second CPT-4/HCPCS modifier 172", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_173": {"name": "CPTM2_173", "description": "Second CPT-4/HCPCS modifier 173", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_174": {"name": "CPTM2_174", "description": "Second CPT-4/HCPCS modifier 174", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_175": {"name": "CPTM2_175", "description": "Second CPT-4/HCPCS modifier 175", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_176": {"name": "CPTM2_176", "description": "Second CPT-4/HCPCS modifier 176", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_177": {"name": "CPTM2_177", "description": "Second CPT-4/HCPCS modifier 177", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_178": {"name": "CPTM2_178", "description": "Second CPT-4/HCPCS modifier 178", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_179": {"name": "CPTM2_179", "description": "Second CPT-4/HCPCS modifier 179", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_180": {"name": "CPTM2_180", "description": "Second CPT-4/HCPCS modifier 180", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_181": {"name": "CPTM2_181", "description": "Second CPT-4/HCPCS modifier 181", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_182": {"name": "CPTM2_182", "description": "Second CPT-4/HCPCS modifier 182", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_183": {"name": "CPTM2_183", "description": "Second CPT-4/HCPCS modifier 183", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_184": {"name": "CPTM2_184", "description": "Second CPT-4/HCPCS modifier 184", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_185": {"name": "CPTM2_185", "description": "Second CPT-4/HCPCS modifier 185", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_186": {"name": "CPTM2_186", "description": "Second CPT-4/HCPCS modifier 186", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_187": {"name": "CPTM2_187", "description": "Second CPT-4/HCPCS modifier 187", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_188": {"name": "CPTM2_188", "description": "Second CPT-4/HCPCS modifier 188", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_189": {"name": "CPTM2_189", "description": "Second CPT-4/HCPCS modifier 189", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_190": {"name": "CPTM2_190", "description": "Second CPT-4/HCPCS modifier 190", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_191": {"name": "CPTM2_191", "description": "Second CPT-4/HCPCS modifier 191", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_192": {"name": "CPTM2_192", "description": "Second CPT-4/HCPCS modifier 192", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_193": {"name": "CPTM2_193", "description": "Second CPT-4/HCPCS modifier 193", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_194": {"name": "CPTM2_194", "description": "Second CPT-4/HCPCS modifier 194", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_195": {"name": "CPTM2_195", "description": "Second CPT-4/HCPCS modifier 195", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_196": {"name": "CPTM2_196", "description": "Second CPT-4/HCPCS modifier 196", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_197": {"name": "CPTM2_197", "description": "Second CPT-4/HCPCS modifier 197", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_198": {"name": "CPTM2_198", "description": "Second CPT-4/HCPCS modifier 198", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_199": {"name": "CPTM2_199", "description": "Second CPT-4/HCPCS modifier 199", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "CPTM2_200": {"name": "CPTM2_200", "description": "Second CPT-4/HCPCS modifier 200", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DaysToEvent": {"name": "DaysToEvent", "description": "Days from 'start date' to admission", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DHOUR": {"name": "DHOUR", "description": "Discharge Hour", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DIED": {"name": "DIED", "description": "Died during hospitalization", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DISP_X": {"name": "DISP_X", "description": "Disposition of patient (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DISPUB04": {"name": "DISPUB04", "description": "Disposition of patient (UB-04 standard coding)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DISPUNIFORM": {"name": "DISPUNIFORM", "description": "Disposition of patient (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DMONTH": {"name": "DMONTH", "description": "Discharge month", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DQTR": {"name": "DQTR", "description": "Discharge quarter", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DSHOSPID": {"name": "DSHOSPID", "description": "Data source hospital identifier", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DURATION": {"name": "DURATION", "description": "Elapsed time for hospital care in hours and minutes", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "FEMALE": {"name": "FEMALE", "description": "Indicator of sex", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HCUP_ED": {"name": "HCUP_ED", "description": "HCUP Emergency Department service indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HCUP_OS": {"name": "HCUP_OS", "description": "HCUP Observation Stay service indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HEART_RATE_X": {"name": "HEART_RATE_X", "description": "Heart rate of the patient, as received from data source", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HISPANIC": {"name": "HISPANIC", "description": "Hispanic ethnicity (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HISPANIC_X": {"name": "HISPANIC_X", "description": "Hispanic ethnicity (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "Homeless": {"name": "Homeless", "description": "Indicator that patient is homeless", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HOSP_NPI": {"name": "HOSP_NPI", "description": "Hospital NPI", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "HOSPST": {"name": "HOSPST", "description": "Hospital state postal code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX_Visit_Reason1": {"name": "I10_DX_Visit_Reason1", "description": "ICD-10-CM Reason for visit diagnosis 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX_Visit_Reason2": {"name": "I10_DX_Visit_Reason2", "description": "ICD-10-CM Reason for visit diagnosis 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX_Visit_Reason3": {"name": "I10_DX_Visit_Reason3", "description": "ICD-10-CM Reason for visit diagnosis 3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX1": {"name": "I10_DX1", "description": "ICD-10-CM Diagnosis 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX2": {"name": "I10_DX2", "description": "ICD-10-CM Diagnosis 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX3": {"name": "I10_DX3", "description": "ICD-10-CM Diagnosis 3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX4": {"name": "I10_DX4", "description": "ICD-10-CM Diagnosis 4", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX5": {"name": "I10_DX5", "description": "ICD-10-CM Diagnosis 5", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX6": {"name": "I10_DX6", "description": "ICD-10-CM Diagnosis 6", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX7": {"name": "I10_DX7", "description": "ICD-10-CM Diagnosis 7", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX8": {"name": "I10_DX8", "description": "ICD-10-CM Diagnosis 8", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX9": {"name": "I10_DX9", "description": "ICD-10-CM Diagnosis 9", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX10": {"name": "I10_DX10", "description": "ICD-10-CM Diagnosis 10", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX11": {"name": "I10_DX11", "description": "ICD-10-CM Diagnosis 11", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX12": {"name": "I10_DX12", "description": "ICD-10-CM Diagnosis 12", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX13": {"name": "I10_DX13", "description": "ICD-10-CM Diagnosis 13", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX14": {"name": "I10_DX14", "description": "ICD-10-CM Diagnosis 14", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX15": {"name": "I10_DX15", "description": "ICD-10-CM Diagnosis 15", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX16": {"name": "I10_DX16", "description": "ICD-10-CM Diagnosis 16", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX17": {"name": "I10_DX17", "description": "ICD-10-CM Diagnosis 17", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX18": {"name": "I10_DX18", "description": "ICD-10-CM Diagnosis 18", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX19": {"name": "I10_DX19", "description": "ICD-10-CM Diagnosis 19", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX20": {"name": "I10_DX20", "description": "ICD-10-CM Diagnosis 20", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX21": {"name": "I10_DX21", "description": "ICD-10-CM Diagnosis 21", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX22": {"name": "I10_DX22", "description": "ICD-10-CM Diagnosis 22", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX23": {"name": "I10_DX23", "description": "ICD-10-CM Diagnosis 23", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX24": {"name": "I10_DX24", "description": "ICD-10-CM Diagnosis 24", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX25": {"name": "I10_DX25", "description": "ICD-10-CM Diagnosis 25", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX26": {"name": "I10_DX26", "description": "ICD-10-CM Diagnosis 26", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX27": {"name": "I10_DX27", "description": "ICD-10-CM Diagnosis 27", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX28": {"name": "I10_DX28", "description": "ICD-10-CM Diagnosis 28", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX29": {"name": "I10_DX29", "description": "ICD-10-CM Diagnosis 29", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX30": {"name": "I10_DX30", "description": "ICD-10-CM Diagnosis 30", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_NDX": {"name": "I10_NDX", "description": "ICD-10-CM Number of diagnoses on this record", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "I10_PROCTYPE": {"name": "I10_PROCTYPE", "description": "ICD-10-PCS Procedure type indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "KEY": {"name": "KEY", "description": "HCUP record identifier", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "LOS": {"name": "LOS", "description": "Length of stay (cleaned)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "LOS_X": {"name": "LOS_X", "description": "Length of stay (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "MARITALSTATUS_X": {"name": "MARITALSTATUS_X", "description": "Patient's marital status (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "MARITALSTATUSUB04": {"name": "MARITALSTATUSUB04", "description": "Patient's marital status, UB-04 standard coding", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "MDNUM1_R": {"name": "MDNUM1_R", "description": "Physician 1 number (re-identified)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "MDNUM2_R": {"name": "MDNUM2_R", "description": "Physician 2 number (re-identified)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "MEDINCSTQ": {"name": "MEDINCSTQ", "description": "Median household income state quartile for patient ZIP Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "NCPT": {"name": "NCPT", "description": "Number of CPT/HCPCS procedures for this visit", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "OPservice": {"name": "OPservice", "description": "Indicator of outpatient service (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "OS_TIME": {"name": "OS_TIME", "description": "Observation stay time summed from UNITS", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "PAY1": {"name": "PAY1", "description": "Primary expected payer (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PAY1_X": {"name": "PAY1_X", "description": "Primary expected payer (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PAY2": {"name": "PAY2", "description": "Secondary expected payer (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PAY2_X": {"name": "PAY2_X", "description": "Secondary expected payer (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PAY3": {"name": "PAY3", "description": "Tertiary expected payer (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PAY3_X": {"name": "PAY3_X", "description": "Tertiary expected payer (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PL_CBSA": {"name": "PL_CBSA", "description": "Patient location: Core Based Statistical Area (CBSA)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PL_NCHS": {"name": "PL_NCHS", "description": "Patient Location: NCHS Urban-Rural Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PL_RUCC": {"name": "PL_RUCC", "description": "Patient location: Rural-Urban Continuum Codes (RUCC)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PL_UIC": {"name": "PL_UIC", "description": "Patient location: Urban Influence Codes", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PL_UR_CAT4": {"name": "PL_UR_CAT4", "description": "Patient Location: Urban-Rural 4 Categories", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PointOfOrigin_X": {"name": "PointOfOrigin_X", "description": "Point of origin for admission or visit, as received from source", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PointOfOriginUB04": {"name": "PointOfOriginUB04", "description": "Point of origin for admission or visit, UB-04 standard coding", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PSTATE": {"name": "PSTATE", "description": "Patient State postal code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PSTCO": {"name": "PSTCO", "description": "Patient state/county FIPS code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PSTCO2": {"name": "PSTCO2", "description": "Patient state/county FIPS code, possibly derived from ZIP Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "RACE": {"name": "RACE", "description": "Race (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "RACE_X": {"name": "RACE_X", "description": "Race (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "STATE_AS": {"name": "STATE_AS", "description": "State Ambulatory Surgery service indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "STATE_ED": {"name": "STATE_ED", "description": "State Emergency Department service indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "STATE_OS": {"name": "STATE_OS", "description": "State Observation Stay service indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "TOTCHG": {"name": "TOTCHG", "description": "Total charges (cleaned)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "TOTCHG_X": {"name": "TOTCHG_X", "description": "Total charges (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "VisitLink": {"name": "VisitLink", "description": "Visit linkage variable", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "YEAR": {"name": "YEAR", "description": "Calendar year", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "ZIP": {"name": "ZIP", "description": "Patient ZIP Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "ZIP3": {"name": "ZIP3", "description": "Patient ZIP Code, first 3 digits", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "ZIPINC_QRTL": {"name": "ZIPINC_QRTL", "description": "Median household income national quartile for patient ZIP Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AYEAR": {"name": "AYEAR", "description": "Admission year", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "BMONTH": {"name": "BMONTH", "description": "Birth month", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "BYEAR": {"name": "BYEAR", "description": "Birth year", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}}, "meta": {}, "source_meta": {"external_location": "\\\\files.drexel.edu\\encrypted\\SOPH\\UHC\\SchnakeMahl_HCUP\\dbt\\v0\\sources\\{name}.parquet"}, "tags": ["ER", "SEDD", "Source", "State"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "'\\\\files.drexel.edu\\encrypted\\SOPH\\UHC\\SchnakeMahl_HCUP\\dbt\\v0\\sources\\NY_SEDD_2018_CORE.parquet'", "created_at": 1674148168.1765158}, "source.hcup.SID.NY_SID_2017_CHGS": {"fqn": ["hcup", "docs", "state", "sid", "2016_2018", "ny", "SID", "NY_SID_2017_CHGS"], "database": "main", "schema": "SID", "unique_id": "source.hcup.SID.NY_SID_2017_CHGS", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "models\\docs\\state\\sid\\2016_2018\\ny\\ny_sid_2017_chgs.yml", "original_file_path": "models\\docs\\state\\sid\\2016_2018\\ny\\ny_sid_2017_chgs.yml", "name": "NY_SID_2017_CHGS", "source_name": "SID", "source_description": "## Abstract: HCUP State Inpatient Databases (SID) \r\nThe State Inpatient Databases (SID) are part of the Healthcare Cost and Utilization Project (HCUP), sponsored by the Agency for Healthcare Research and Quality (AHRQ).\r\n\r\nThe HCUP State Inpatient Databases (SID) are a powerful set of hospital databases from data organizations in participating States.\r\n\r\n- The SID contain the universe of the inpatient discharge abstracts from participating States that are translated into a uniform format to facilitate multistate comparisons and analyses.\r\n- Together, the SID encompass almost 97 percent of all U.S. hospital discharges. Some States include discharges from specialty hospitals, such as acute psychiatric hospitals.\r\n- The SID contain a core set of clinical and nonclinical information on all visits, regardless of the expected payer, including but not limited to Medicare, Medicaid, private insurance, self-pay, or those billed as 'no charge'.\r\n- In addition to the core set of uniform data elements common to all SID, some include other elements such as the patient's race.\r\n\r\nResearchers and policymakers use SID to investigate questions unique to one State; to compare data from two or more States; to conduct market-area variation analyses; and to identify State-specific trends in inpatient care utilization, access, charges, and outcomes.\r\n\r\nThe individual State databases are in the same HCUP uniform format and represent 100 percent of records processed by AHRQ. However, the participating data organizations control the release of specific data elements. AHRQ is currently assisting the data organizations in the release of the 1990-2021 SID.\r\n\r\nThe SID can be linked to hospital-level data from the American Hospital Association's Annual Survey of Hospitals and county-level data from the Bureau of Health Professions' Area Resource File, except in those States that do not allow the release of hospital identifiers.\r\n\r\nThirty-six of the data organizations participating in the HCUP have agreed to release their SID files through the HCUP Central Distributor under the auspices of the AHRQ. Uses are limited to research and aggregate statisitical reporting.\r\n\r\nUseful links include: \r\n\r\n- [SEDD database home page](https://www.hcup-us.ahrq.gov/db/state/sedddbdocumentation.jsp)\r\n- [Intro to SEDD database](https://www.hcup-us.ahrq.gov/db/state/sedddist/SEDD_Introduction.jsp)\r\n\r\n\r\n## Introduction to SID\r\n\r\n#### Overview\r\nThe Healthcare Cost and Utilization Project (HCUP) State Inpatient Databases (SID) consist of individual data files from data organizations in 49 participating data organizations. In general, the SID contain the universe of that State's hospital inpatient discharge records. They are composed of annual, State-specific files that share a common structure and common data elements. Most data elements are coded in a uniform format across all States. In addition to the core set of uniform data elements, the SID include State-specific data elements or data elements available only for a limited number of States. The uniform format of the SID helps facilitate cross-State comparisons. In addition, the SID are well suited for research that requires complete enumeration of hospitals and discharges within market areas or States.\r\n\r\nThirty-six of the 49 data organizations that participate in the HCUP have agreed to release their State-specific files through the HCUP Central Distributor under the auspices of AHRQ. The individual state databases are in the same HCUP uniform format and represent 100 percent of records processed by AHRQ. However, the participating data organizations control the release of specific data elements.\r\n\r\nSID data sets are currently available for multiple States and years. Each release of the SID includes:\r\n\r\n- Data in American Standard Code for Information Interchange (ASCII) format on a compact disc with read-only memory (CD-ROM).\r\n- Patient-level hospital discharge abstract data for 100 percent of discharges from hospitals in participating States.\r\n- American Hospital Association (AHA) Linkage File to link the SID to data from the AHA Annual Survey of Hospitals. This is only available for those States that allow the release of hospital identifiers.\r\n\r\nThe SID are calendar year files for all data years except 2015. Because of the transition to ICD-10-CM/PCS1 on October 1, 2015, the 2015 SID are split into two parts. Nine months of the 2015 data with ICD-9-CM2 codes (discharges from January 1, 2015 - September 30, 2015) are in one set of files labeled Q1Q3. Three months of 2015 data with ICD-10-CM/PCS codes (discharges from October 1, 2015 - December 31, 2015) are in a separate set of files labeled Q4. More information about the changes to the HCUP databases for ICD-10-CM/PCS and use of data across the two coding system may be found on the HCUP User Support website under ICD-10-CM/PCS Resources (www.hcup-us.ahrq.gov/datainnovations/icd10_resources.jsp).\r\n\r\nSID documentation and tools\u2014including file specifications, programming source code for loading ASCII data into SAS (SAS Institute Inc.; Cary, NC), SPSS (IBM Corp.; Somers, NY), and Stata (StataCorp; College Station, TX), and value labels\u2014are available online at the HCUP User Support website (www.hcup-us.ahrq.gov).\r\n\r\nStarting with the 2006 SID, the AHA Linkage files are available via the HCUP User Support website www.hcup-us.ahrq.gov. The AHA Linkage files may not be available when the discharge-level database is released.\r\n\r\n#### How the HCUP SID Differ from State Data Files\r\n\r\nHow the HCUP SID Differ from State Data Files\r\n\r\nThe SID available through the HCUP Central Distributor differ from the data files available from the data organizations in the following ways:\r\n\r\n- Data elements available on the files\r\n- Coding of data elements\r\n\r\nBecause the data organizations dictate the data elements that may be released through the HCUP Central Distributor, the data elements on the SID are a subset of the data collected by the corresponding data organizations. HCUP uniform coding is used on most data elements on the SID. A few State-specific data elements retain the original values provided by the respective data organizations.\r\n\r\n#### What Types of Hospitals Are Included in the SID?\r\n\r\nThe types of hospitals included in the SID depend on the information provided by the data organizations and how the files were handled during HCUP processing. Most State government data organizations provide information on all acute care hospitals in the respective State. Private data organizations are often restricted to member hospitals and may not provide information on all hospitals in their State.\r\n\r\nBeginning with the 1994 SID, all hospitals reported by the data organizations were retained in the SID files. Discharges from facilities such as psychiatric facilities, alcohol and drug dependency facilities, and State, Federal, and Veterans Affairs hospitals will be in the SID, if reported by the data source. Prior to 1994, only discharges from community hospitals were retained in the SID.\r\n\r\nCommunity hospitals, as defined by the AHA, include \"all nonfederal, short term, general and other specialty hospitals, excluding hospital units of institutions.\" Included among community hospitals are academic medical centers and specialty hospitals such as obstetrics, gynecology, otolaryngology, short term rehabilitation, orthopedic, and pediatric hospitals. Noncommunity hospitals include Federal hospitals (e.g., Veterans Affairs, Department of Defense, and Indian Health Service hospitals), long-term hospitals, psychiatric hospitals, alcohol/chemical dependency treatment facilities, and hospital units within institutions such as prisons.\r\n\r\nSome community hospitals may not be included in the SID because their data were not provided by the data source. To identify community hospitals, the SID must be linked to the AHA Annual Survey of Hospitals by the AHA hospital identifier.\r\n\r\nTables showing the number of hospitals in the SID can be found online at the HCUP User Support website: (www.hcup-us.ahrq.gov). The tables present the hospitals by the number of hospitals of:\r\n\r\n- Community hospitals\r\n- Hospitals not classified as community\r\n- Community hospitals not in the SID\r\n\r\nInformation contained in the AHA Annual Survey of Hospitals was used to determine if a hospital was a community hospital. Some hospitals could not be categorized as community or noncommunity hospitals because they could not be matched with AHA information. This occurs when a hospital was closed in a previous year or when the hospital does not report to the AHA.\r\n\r\n#### What is the File Structure of the SEDD in the 2019-2021 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n- Diagnosis and Procedure Groups file\r\n\r\n#### What is the File Structure of the SEDD in the 2016-2018 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the 2016 SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n\r\nUnavailable with the 2016-2018 SEDD is the Diagnosis and Procedure Groups file that had been included with the SEDD in prior data years. The data elements included in that file were derived from AHRQ software tools. If you are interested in applying the AHRQ software tools to the ICD-10-CM/PCS data in the 2016-2018 SEDD, beta versions of the AHRQ software tools are available on the HCUP User Support website at www.hcup-us.ahrq.gov/tools_software.jsp. Also available is a tutorial on how to apply the AHRQ software tools to the HCUP databases at www.hcup-us.ahrq.gov/tech_assist/tutorials.jsp.", "loader": "", "identifier": "NY_SID_2017_CHGS", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "NY SID 2017 CHGS file. The Charges file contains detailed charge information. There are three kinds of Charges files:\r\n\r\n## 1. Summarized detail\r\n\r\nSummarized detail in which charge information is summed within the revenue center. This type of Charges file includes one record per discharge abstract. Each record contains three corresponding arrays with the following information:\r\n\r\n- Revenue center (REVCDn)\r\n- Total charge for the revenue center (CHGn)\r\n- Total units of service for the revenue center (UNITn)\r\n\r\nFor example, if a patient had five laboratory tests, REVCD1 would include the revenue code for laboratory, CHG1 would include the total charge for the five tests, and UNIT1 would be five. To combine data elements between this type of Charges file and the Core file, merge the files by the unique record identifier (KEY). There will be a one-to-one correspondence of records.\r\n\r\n## 2. Collapsed detail\r\n\r\nCollapsed detail in which charge information is summed across revenue centers. This type of Charges file includes one record per discharge abstract. Each record contains an array of collapsed charges (CHGn) that are predefined by the data organization that provided the data.\r\n\r\nConsider the example of a patient that had five laboratory tests from different revenue centers in the range of 300 to 319. CHG1, which was predefined as Laboratory Charges for revenue centers 300-319, would include the total charge for the five tests, but there is no detail on which specific revenue centers were used. To combine data elements between this type of Charges file and the Core file, merge the files by the unique record identifier (KEY). There will be a one-to-one correspondence of records.\r\n\r\n## 3. Line level details\r\n\r\nLine item detail in which a submitted charge pertains to a specified revenue center and there may be multiple charges reported for the same revenue center. This type of Charges file includes multiple records per discharge abstract. Each record includes the following information for one service.\r\n\r\n- Revenue center (REVCODE)\r\n- Charge (CHARGE)\r\n- Unit of service (UNITS)\r\n- Day of service (SERVDAY) for some files\r\n\r\nFor example, if a patient had five laboratory tests, there are five records in the Charges file with information on the charge for each laboratory test. Information from this type of Charges file may be combined with the Core file by the unique record identifier (KEY), but there is not a one-to-one correspondence of records.\r\n\r\nRefer to the Description of Data Elements online at the HCUP User Support website (www.hcup-us.ahrq.gov) for more information on the charge information from the different States.", "columns": {"CHARGE": {"name": "CHARGE", "description": "Line item charges (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "KEY": {"name": "KEY", "description": "HCUP record identifier", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "REVCODE": {"name": "REVCODE", "description": "Line item revenue code (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "UNITS": {"name": "UNITS", "description": "Line item units (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}}, "meta": {}, "source_meta": {"external_location": "\\\\files.drexel.edu\\encrypted\\SOPH\\UHC\\SchnakeMahl_HCUP\\dbt\\v0\\sources\\{name}.parquet"}, "tags": ["Inpatient", "SID", "Source", "State"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "'\\\\files.drexel.edu\\encrypted\\SOPH\\UHC\\SchnakeMahl_HCUP\\dbt\\v0\\sources\\NY_SID_2017_CHGS.parquet'", "created_at": 1674148168.1765158}, "source.hcup.SID.NY_SID_2017_CORE": {"fqn": ["hcup", "docs", "state", "sid", "2016_2018", "ny", "SID", "NY_SID_2017_CORE"], "database": "main", "schema": "SID", "unique_id": "source.hcup.SID.NY_SID_2017_CORE", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "models\\docs\\state\\sid\\2016_2018\\ny\\ny_sid_2017_core.yml", "original_file_path": "models\\docs\\state\\sid\\2016_2018\\ny\\ny_sid_2017_core.yml", "name": "NY_SID_2017_CORE", "source_name": "SID", "source_description": "## Abstract: HCUP State Inpatient Databases (SID) \r\nThe State Inpatient Databases (SID) are part of the Healthcare Cost and Utilization Project (HCUP), sponsored by the Agency for Healthcare Research and Quality (AHRQ).\r\n\r\nThe HCUP State Inpatient Databases (SID) are a powerful set of hospital databases from data organizations in participating States.\r\n\r\n- The SID contain the universe of the inpatient discharge abstracts from participating States that are translated into a uniform format to facilitate multistate comparisons and analyses.\r\n- Together, the SID encompass almost 97 percent of all U.S. hospital discharges. Some States include discharges from specialty hospitals, such as acute psychiatric hospitals.\r\n- The SID contain a core set of clinical and nonclinical information on all visits, regardless of the expected payer, including but not limited to Medicare, Medicaid, private insurance, self-pay, or those billed as 'no charge'.\r\n- In addition to the core set of uniform data elements common to all SID, some include other elements such as the patient's race.\r\n\r\nResearchers and policymakers use SID to investigate questions unique to one State; to compare data from two or more States; to conduct market-area variation analyses; and to identify State-specific trends in inpatient care utilization, access, charges, and outcomes.\r\n\r\nThe individual State databases are in the same HCUP uniform format and represent 100 percent of records processed by AHRQ. However, the participating data organizations control the release of specific data elements. AHRQ is currently assisting the data organizations in the release of the 1990-2021 SID.\r\n\r\nThe SID can be linked to hospital-level data from the American Hospital Association's Annual Survey of Hospitals and county-level data from the Bureau of Health Professions' Area Resource File, except in those States that do not allow the release of hospital identifiers.\r\n\r\nThirty-six of the data organizations participating in the HCUP have agreed to release their SID files through the HCUP Central Distributor under the auspices of the AHRQ. Uses are limited to research and aggregate statisitical reporting.\r\n\r\nUseful links include: \r\n\r\n- [SEDD database home page](https://www.hcup-us.ahrq.gov/db/state/sedddbdocumentation.jsp)\r\n- [Intro to SEDD database](https://www.hcup-us.ahrq.gov/db/state/sedddist/SEDD_Introduction.jsp)\r\n\r\n\r\n## Introduction to SID\r\n\r\n#### Overview\r\nThe Healthcare Cost and Utilization Project (HCUP) State Inpatient Databases (SID) consist of individual data files from data organizations in 49 participating data organizations. In general, the SID contain the universe of that State's hospital inpatient discharge records. They are composed of annual, State-specific files that share a common structure and common data elements. Most data elements are coded in a uniform format across all States. In addition to the core set of uniform data elements, the SID include State-specific data elements or data elements available only for a limited number of States. The uniform format of the SID helps facilitate cross-State comparisons. In addition, the SID are well suited for research that requires complete enumeration of hospitals and discharges within market areas or States.\r\n\r\nThirty-six of the 49 data organizations that participate in the HCUP have agreed to release their State-specific files through the HCUP Central Distributor under the auspices of AHRQ. The individual state databases are in the same HCUP uniform format and represent 100 percent of records processed by AHRQ. However, the participating data organizations control the release of specific data elements.\r\n\r\nSID data sets are currently available for multiple States and years. Each release of the SID includes:\r\n\r\n- Data in American Standard Code for Information Interchange (ASCII) format on a compact disc with read-only memory (CD-ROM).\r\n- Patient-level hospital discharge abstract data for 100 percent of discharges from hospitals in participating States.\r\n- American Hospital Association (AHA) Linkage File to link the SID to data from the AHA Annual Survey of Hospitals. This is only available for those States that allow the release of hospital identifiers.\r\n\r\nThe SID are calendar year files for all data years except 2015. Because of the transition to ICD-10-CM/PCS1 on October 1, 2015, the 2015 SID are split into two parts. Nine months of the 2015 data with ICD-9-CM2 codes (discharges from January 1, 2015 - September 30, 2015) are in one set of files labeled Q1Q3. Three months of 2015 data with ICD-10-CM/PCS codes (discharges from October 1, 2015 - December 31, 2015) are in a separate set of files labeled Q4. More information about the changes to the HCUP databases for ICD-10-CM/PCS and use of data across the two coding system may be found on the HCUP User Support website under ICD-10-CM/PCS Resources (www.hcup-us.ahrq.gov/datainnovations/icd10_resources.jsp).\r\n\r\nSID documentation and tools\u2014including file specifications, programming source code for loading ASCII data into SAS (SAS Institute Inc.; Cary, NC), SPSS (IBM Corp.; Somers, NY), and Stata (StataCorp; College Station, TX), and value labels\u2014are available online at the HCUP User Support website (www.hcup-us.ahrq.gov).\r\n\r\nStarting with the 2006 SID, the AHA Linkage files are available via the HCUP User Support website www.hcup-us.ahrq.gov. The AHA Linkage files may not be available when the discharge-level database is released.\r\n\r\n#### How the HCUP SID Differ from State Data Files\r\n\r\nHow the HCUP SID Differ from State Data Files\r\n\r\nThe SID available through the HCUP Central Distributor differ from the data files available from the data organizations in the following ways:\r\n\r\n- Data elements available on the files\r\n- Coding of data elements\r\n\r\nBecause the data organizations dictate the data elements that may be released through the HCUP Central Distributor, the data elements on the SID are a subset of the data collected by the corresponding data organizations. HCUP uniform coding is used on most data elements on the SID. A few State-specific data elements retain the original values provided by the respective data organizations.\r\n\r\n#### What Types of Hospitals Are Included in the SID?\r\n\r\nThe types of hospitals included in the SID depend on the information provided by the data organizations and how the files were handled during HCUP processing. Most State government data organizations provide information on all acute care hospitals in the respective State. Private data organizations are often restricted to member hospitals and may not provide information on all hospitals in their State.\r\n\r\nBeginning with the 1994 SID, all hospitals reported by the data organizations were retained in the SID files. Discharges from facilities such as psychiatric facilities, alcohol and drug dependency facilities, and State, Federal, and Veterans Affairs hospitals will be in the SID, if reported by the data source. Prior to 1994, only discharges from community hospitals were retained in the SID.\r\n\r\nCommunity hospitals, as defined by the AHA, include \"all nonfederal, short term, general and other specialty hospitals, excluding hospital units of institutions.\" Included among community hospitals are academic medical centers and specialty hospitals such as obstetrics, gynecology, otolaryngology, short term rehabilitation, orthopedic, and pediatric hospitals. Noncommunity hospitals include Federal hospitals (e.g., Veterans Affairs, Department of Defense, and Indian Health Service hospitals), long-term hospitals, psychiatric hospitals, alcohol/chemical dependency treatment facilities, and hospital units within institutions such as prisons.\r\n\r\nSome community hospitals may not be included in the SID because their data were not provided by the data source. To identify community hospitals, the SID must be linked to the AHA Annual Survey of Hospitals by the AHA hospital identifier.\r\n\r\nTables showing the number of hospitals in the SID can be found online at the HCUP User Support website: (www.hcup-us.ahrq.gov). The tables present the hospitals by the number of hospitals of:\r\n\r\n- Community hospitals\r\n- Hospitals not classified as community\r\n- Community hospitals not in the SID\r\n\r\nInformation contained in the AHA Annual Survey of Hospitals was used to determine if a hospital was a community hospital. Some hospitals could not be categorized as community or noncommunity hospitals because they could not be matched with AHA information. This occurs when a hospital was closed in a previous year or when the hospital does not report to the AHA.\r\n\r\n#### What is the File Structure of the SEDD in the 2019-2021 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n- Diagnosis and Procedure Groups file\r\n\r\n#### What is the File Structure of the SEDD in the 2016-2018 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the 2016 SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n\r\nUnavailable with the 2016-2018 SEDD is the Diagnosis and Procedure Groups file that had been included with the SEDD in prior data years. The data elements included in that file were derived from AHRQ software tools. If you are interested in applying the AHRQ software tools to the ICD-10-CM/PCS data in the 2016-2018 SEDD, beta versions of the AHRQ software tools are available on the HCUP User Support website at www.hcup-us.ahrq.gov/tools_software.jsp. Also available is a tutorial on how to apply the AHRQ software tools to the HCUP databases at www.hcup-us.ahrq.gov/tech_assist/tutorials.jsp.", "loader": "", "identifier": "NY_SID_2017_CORE", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "NY SID 2017 CORE file. The Core file is a discharge-level file that contains:\r\n\r\n- Core data elements that form the nucleus of the SID\r\n- State-specific data elements intended for limited use\r\n\r\nCore data elements meet at least one of the following criteria:\r\n\r\n- Are available from all or nearly all data sources\r\n- Lend themselves to uniform coding across sources\r\n- Are needed for traditional applications (e.g., length of stay, patient age)\r\n\r\nState-specific data elements meet at least one of the following criteria:\r\n\r\n- Are available from a limited number of sources\r\n- Do not lend themselves to uniform coding across sources\r\n- Are not needed for traditional applications", "columns": {"AGE": {"name": "AGE", "description": "Age in years at admission", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AGEDAY": {"name": "AGEDAY", "description": "Age in days (when age < 1 year)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AGEMONTH": {"name": "AGEMONTH", "description": "Age in months (when age < 11 years)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AHOUR": {"name": "AHOUR", "description": "Admission Hour", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AMONTH": {"name": "AMONTH", "description": "Admission month", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "ANESTH": {"name": "ANESTH", "description": "Method of anesthesia", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "ATYPE": {"name": "ATYPE", "description": "Admission type", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AWEEKEND": {"name": "AWEEKEND", "description": "Admission day is a weekend", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "BLOOD": {"name": "BLOOD", "description": "Pints of blood furnished to the patient", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "BWT": {"name": "BWT", "description": "Birth weight in grams", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DaysToEvent": {"name": "DaysToEvent", "description": "Days from 'start date' to admission", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DHOUR": {"name": "DHOUR", "description": "Discharge Hour", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DIED": {"name": "DIED", "description": "Died during hospitalization", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DISP_X": {"name": "DISP_X", "description": "Disposition of patient (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DISPUB04": {"name": "DISPUB04", "description": "Disposition of patient (UB-04 standard coding)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DISPUNIFORM": {"name": "DISPUNIFORM", "description": "Disposition of patient (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DMONTH": {"name": "DMONTH", "description": "Discharge month", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DQTR": {"name": "DQTR", "description": "Discharge quarter", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DRG": {"name": "DRG", "description": "DRG in effect on discharge date", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DRG_NoPOA": {"name": "DRG_NoPOA", "description": "DRG in use on discharge date, calculated without POA", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DRGVER": {"name": "DRGVER", "description": "DRG grouper version used on discharge date", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DSHOSPID": {"name": "DSHOSPID", "description": "Data source hospital identifier", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA1": {"name": "DXPOA1", "description": "Diagnosis 1, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA2": {"name": "DXPOA2", "description": "Diagnosis 2, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA3": {"name": "DXPOA3", "description": "Diagnosis 3, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA4": {"name": "DXPOA4", "description": "Diagnosis 4, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA5": {"name": "DXPOA5", "description": "Diagnosis 5, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA6": {"name": "DXPOA6", "description": "Diagnosis 6, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA7": {"name": "DXPOA7", "description": "Diagnosis 7, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA8": {"name": "DXPOA8", "description": "Diagnosis 8, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA9": {"name": "DXPOA9", "description": "Diagnosis 9, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA10": {"name": "DXPOA10", "description": "Diagnosis 10, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA11": {"name": "DXPOA11", "description": "Diagnosis 11, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA12": {"name": "DXPOA12", "description": "Diagnosis 12, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA13": {"name": "DXPOA13", "description": "Diagnosis 13, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA14": {"name": "DXPOA14", "description": "Diagnosis 14, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA15": {"name": "DXPOA15", "description": "Diagnosis 15, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA16": {"name": "DXPOA16", "description": "Diagnosis 16, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA17": {"name": "DXPOA17", "description": "Diagnosis 17, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA18": {"name": "DXPOA18", "description": "Diagnosis 18, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA19": {"name": "DXPOA19", "description": "Diagnosis 19, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA20": {"name": "DXPOA20", "description": "Diagnosis 20, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA21": {"name": "DXPOA21", "description": "Diagnosis 21, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA22": {"name": "DXPOA22", "description": "Diagnosis 22, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA23": {"name": "DXPOA23", "description": "Diagnosis 23, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA24": {"name": "DXPOA24", "description": "Diagnosis 24, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA25": {"name": "DXPOA25", "description": "Diagnosis 25, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA26": {"name": "DXPOA26", "description": "Diagnosis 26, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA27": {"name": "DXPOA27", "description": "Diagnosis 27, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA28": {"name": "DXPOA28", "description": "Diagnosis 28, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA29": {"name": "DXPOA29", "description": "Diagnosis 29, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA30": {"name": "DXPOA30", "description": "Diagnosis 30, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA31": {"name": "DXPOA31", "description": "Diagnosis 31, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA32": {"name": "DXPOA32", "description": "Diagnosis 32, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA33": {"name": "DXPOA33", "description": "Diagnosis 33, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA34": {"name": "DXPOA34", "description": "Diagnosis 34, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXVER": {"name": "DXVER", "description": "Diagnosis Version", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "FEMALE": {"name": "FEMALE", "description": "Indicator of sex", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HCUP_ED": {"name": "HCUP_ED", "description": "HCUP Emergency Department service indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HCUP_OS": {"name": "HCUP_OS", "description": "HCUP Observation Stay service indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HISPANIC": {"name": "HISPANIC", "description": "Hispanic ethnicity (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HISPANIC_X": {"name": "HISPANIC_X", "description": "Hispanic ethnicity (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "Homeless": {"name": "Homeless", "description": "Indicator that patient is homeless", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HOSP_NPI": {"name": "HOSP_NPI", "description": "Hospital NPI", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "HOSPST": {"name": "HOSPST", "description": "Hospital state postal code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX_Admitting": {"name": "I10_DX_Admitting", "description": "ICD-10-CM Admitting Diagnosis Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX1": {"name": "I10_DX1", "description": "ICD-10-CM Diagnosis 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX2": {"name": "I10_DX2", "description": "ICD-10-CM Diagnosis 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX3": {"name": "I10_DX3", "description": "ICD-10-CM Diagnosis 3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX4": {"name": "I10_DX4", "description": "ICD-10-CM Diagnosis 4", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX5": {"name": "I10_DX5", "description": "ICD-10-CM Diagnosis 5", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX6": {"name": "I10_DX6", "description": "ICD-10-CM Diagnosis 6", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX7": {"name": "I10_DX7", "description": "ICD-10-CM Diagnosis 7", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX8": {"name": "I10_DX8", "description": "ICD-10-CM Diagnosis 8", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX9": {"name": "I10_DX9", "description": "ICD-10-CM Diagnosis 9", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX10": {"name": "I10_DX10", "description": "ICD-10-CM Diagnosis 10", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX11": {"name": "I10_DX11", "description": "ICD-10-CM Diagnosis 11", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX12": {"name": "I10_DX12", "description": "ICD-10-CM Diagnosis 12", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX13": {"name": "I10_DX13", "description": "ICD-10-CM Diagnosis 13", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX14": {"name": "I10_DX14", "description": "ICD-10-CM Diagnosis 14", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX15": {"name": "I10_DX15", "description": "ICD-10-CM Diagnosis 15", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX16": {"name": "I10_DX16", "description": "ICD-10-CM Diagnosis 16", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX17": {"name": "I10_DX17", "description": "ICD-10-CM Diagnosis 17", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX18": {"name": "I10_DX18", "description": "ICD-10-CM Diagnosis 18", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX19": {"name": "I10_DX19", "description": "ICD-10-CM Diagnosis 19", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX20": {"name": "I10_DX20", "description": "ICD-10-CM Diagnosis 20", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX21": {"name": "I10_DX21", "description": "ICD-10-CM Diagnosis 21", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX22": {"name": "I10_DX22", "description": "ICD-10-CM Diagnosis 22", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX23": {"name": "I10_DX23", "description": "ICD-10-CM Diagnosis 23", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX24": {"name": "I10_DX24", "description": "ICD-10-CM Diagnosis 24", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX25": {"name": "I10_DX25", "description": "ICD-10-CM Diagnosis 25", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX26": {"name": "I10_DX26", "description": "ICD-10-CM Diagnosis 26", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX27": {"name": "I10_DX27", "description": "ICD-10-CM Diagnosis 27", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX28": {"name": "I10_DX28", "description": "ICD-10-CM Diagnosis 28", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX29": {"name": "I10_DX29", "description": "ICD-10-CM Diagnosis 29", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX30": {"name": "I10_DX30", "description": "ICD-10-CM Diagnosis 30", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX31": {"name": "I10_DX31", "description": "ICD-10-CM Diagnosis 31", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX32": {"name": "I10_DX32", "description": "ICD-10-CM Diagnosis 32", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX33": {"name": "I10_DX33", "description": "ICD-10-CM Diagnosis 33", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX34": {"name": "I10_DX34", "description": "ICD-10-CM Diagnosis 34", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_NDX": {"name": "I10_NDX", "description": "ICD-10-CM Number of diagnoses on this record", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "I10_NPR": {"name": "I10_NPR", "description": "ICD-10-PCS Number of procedures on this record", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "I10_PR1": {"name": "I10_PR1", "description": "ICD-10-PCS Procedure 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR2": {"name": "I10_PR2", "description": "ICD-10-PCS Procedure 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR3": {"name": "I10_PR3", "description": "ICD-10-PCS Procedure 3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR4": {"name": "I10_PR4", "description": "ICD-10-PCS Procedure 4", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR5": {"name": "I10_PR5", "description": "ICD-10-PCS Procedure 5", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR6": {"name": "I10_PR6", "description": "ICD-10-PCS Procedure 6", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR7": {"name": "I10_PR7", "description": "ICD-10-PCS Procedure 7", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR8": {"name": "I10_PR8", "description": "ICD-10-PCS Procedure 8", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR9": {"name": "I10_PR9", "description": "ICD-10-PCS Procedure 9", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR10": {"name": "I10_PR10", "description": "ICD-10-PCS Procedure 10", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR11": {"name": "I10_PR11", "description": "ICD-10-PCS Procedure 11", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR12": {"name": "I10_PR12", "description": "ICD-10-PCS Procedure 12", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR13": {"name": "I10_PR13", "description": "ICD-10-PCS Procedure 13", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR14": {"name": "I10_PR14", "description": "ICD-10-PCS Procedure 14", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR15": {"name": "I10_PR15", "description": "ICD-10-PCS Procedure 15", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR16": {"name": "I10_PR16", "description": "ICD-10-PCS Procedure 16", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR17": {"name": "I10_PR17", "description": "ICD-10-PCS Procedure 17", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR18": {"name": "I10_PR18", "description": "ICD-10-PCS Procedure 18", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR19": {"name": "I10_PR19", "description": "ICD-10-PCS Procedure 19", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR20": {"name": "I10_PR20", "description": "ICD-10-PCS Procedure 20", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR21": {"name": "I10_PR21", "description": "ICD-10-PCS Procedure 21", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR22": {"name": "I10_PR22", "description": "ICD-10-PCS Procedure 22", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR23": {"name": "I10_PR23", "description": "ICD-10-PCS Procedure 23", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR24": {"name": "I10_PR24", "description": "ICD-10-PCS Procedure 24", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR25": {"name": "I10_PR25", "description": "ICD-10-PCS Procedure 25", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PROCTYPE": {"name": "I10_PROCTYPE", "description": "ICD-10-PCS Procedure type indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "KEY": {"name": "KEY", "description": "HCUP record identifier", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "LOS": {"name": "LOS", "description": "Length of stay (cleaned)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "LOS_X": {"name": "LOS_X", "description": "Length of stay (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "MDC": {"name": "MDC", "description": "MDC in effect on discharge date", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "MDC_NoPOA": {"name": "MDC_NoPOA", "description": "MDC in use on discharge date, calculated without POA", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "MDNUM1_R": {"name": "MDNUM1_R", "description": "Physician 1 number (re-identified)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "MDNUM2_R": {"name": "MDNUM2_R", "description": "Physician 2 number (re-identified)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "MEDINCSTQ": {"name": "MEDINCSTQ", "description": "Median household income state quartile for patient ZIP Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "OS_TIME": {"name": "OS_TIME", "description": "Observation stay time summed from UNITS", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "P7EDSRC_X": {"name": "P7EDSRC_X", "description": "Condition Code P7, Direct Inpatient Admission from Emergency Room", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PAY1": {"name": "PAY1", "description": "Primary expected payer (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PAY1_X": {"name": "PAY1_X", "description": "Primary expected payer (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PAY2": {"name": "PAY2", "description": "Secondary expected payer (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PAY2_X": {"name": "PAY2_X", "description": "Secondary expected payer (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PAY3": {"name": "PAY3", "description": "Tertiary expected payer (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PAY3_X": {"name": "PAY3_X", "description": "Tertiary expected payer (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PL_CBSA": {"name": "PL_CBSA", "description": "Patient location: Core Based Statistical Area (CBSA)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PL_NCHS": {"name": "PL_NCHS", "description": "Patient Location: NCHS Urban-Rural Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PL_RUCC": {"name": "PL_RUCC", "description": "Patient location: Rural-Urban Continuum Codes (RUCC)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PL_UIC": {"name": "PL_UIC", "description": "Patient location: Urban Influence Codes", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PL_UR_CAT4": {"name": "PL_UR_CAT4", "description": "Patient Location: Urban-Rural 4 Categories", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "POA_Disch_Edit1": {"name": "POA_Disch_Edit1", "description": "Discharge has POA missing on all nonexempt diagnoses", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "POA_Disch_Edit2": {"name": "POA_Disch_Edit2", "description": "Discharge has POA missing on all nonexempt secondary diagnoses", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "POA_Hosp_Edit1": {"name": "POA_Hosp_Edit1", "description": "Hospital reported POA as Y on all diagnoses on all discharges", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "POA_Hosp_Edit2": {"name": "POA_Hosp_Edit2", "description": "Hospital reported POA as missing on all non-Medicare discharges", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "POA_Hosp_Edit3": {"name": "POA_Hosp_Edit3", "description": "Hospital reported POA as missing on all nonexempt diagnoses for 15% or more of d", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "POA_Hosp_Edit3_Value": {"name": "POA_Hosp_Edit3_Value", "description": "Percentage of discharges with all nonexempt diagnoses missing POA indicators", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "PointOfOrigin_X": {"name": "PointOfOrigin_X", "description": "Point of origin for admission or visit, as received from source", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PointOfOriginUB04": {"name": "PointOfOriginUB04", "description": "Point of origin for admission or visit, UB-04 standard coding", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PRDAY1": {"name": "PRDAY1", "description": "Number of days from admission to I10_PR1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY2": {"name": "PRDAY2", "description": "Number of days from admission to I10_PR2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY3": {"name": "PRDAY3", "description": "Number of days from admission to I10_PR3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY4": {"name": "PRDAY4", "description": "Number of days from admission to I10_PR4", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY5": {"name": "PRDAY5", "description": "Number of days from admission to I10_PR5", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY6": {"name": "PRDAY6", "description": "Number of days from admission to I10_PR6", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY7": {"name": "PRDAY7", "description": "Number of days from admission to I10_PR7", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY8": {"name": "PRDAY8", "description": "Number of days from admission to I10_PR8", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY9": {"name": "PRDAY9", "description": "Number of days from admission to I10_PR9", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY10": {"name": "PRDAY10", "description": "Number of days from admission to I10_PR10", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY11": {"name": "PRDAY11", "description": "Number of days from admission to I10_PR11", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY12": {"name": "PRDAY12", "description": "Number of days from admission to I10_PR12", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY13": {"name": "PRDAY13", "description": "Number of days from admission to I10_PR13", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY14": {"name": "PRDAY14", "description": "Number of days from admission to I10_PR14", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY15": {"name": "PRDAY15", "description": "Number of days from admission to I10_PR15", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY16": {"name": "PRDAY16", "description": "Number of days from admission to I10_PR16", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY17": {"name": "PRDAY17", "description": "Number of days from admission to I10_PR17", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY18": {"name": "PRDAY18", "description": "Number of days from admission to I10_PR18", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY19": {"name": "PRDAY19", "description": "Number of days from admission to I10_PR19", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY20": {"name": "PRDAY20", "description": "Number of days from admission to I10_PR20", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY21": {"name": "PRDAY21", "description": "Number of days from admission to I10_PR21", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY22": {"name": "PRDAY22", "description": "Number of days from admission to I10_PR22", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY23": {"name": "PRDAY23", "description": "Number of days from admission to I10_PR23", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY24": {"name": "PRDAY24", "description": "Number of days from admission to I10_PR24", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY25": {"name": "PRDAY25", "description": "Number of days from admission to I10_PR25", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRVER": {"name": "PRVER", "description": "Procedure Version", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PSTATE": {"name": "PSTATE", "description": "Patient State postal code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PSTCO": {"name": "PSTCO", "description": "Patient state/county FIPS code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PSTCO2": {"name": "PSTCO2", "description": "Patient state/county FIPS code, possibly derived from ZIP Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "RACE": {"name": "RACE", "description": "Race (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "RACE_EDIT": {"name": "RACE_EDIT", "description": "Race Edit Checks", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "RACE_X": {"name": "RACE_X", "description": "Race (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "TOTCHG": {"name": "TOTCHG", "description": "Total charges (cleaned)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "TOTCHG_X": {"name": "TOTCHG_X", "description": "Total charges (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "TRAN_IN": {"name": "TRAN_IN", "description": "Transfer in indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "TRAN_OUT": {"name": "TRAN_OUT", "description": "Transfer out indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "VisitLink": {"name": "VisitLink", "description": "Visit linkage variable", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "YEAR": {"name": "YEAR", "description": "Calendar year", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "ZIP": {"name": "ZIP", "description": "Patient ZIP Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "ZIP3": {"name": "ZIP3", "description": "Patient ZIP Code, first 3 digits", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "ZIPINC_QRTL": {"name": "ZIPINC_QRTL", "description": "Median household income national quartile for patient ZIP Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AYEAR": {"name": "AYEAR", "description": "Admission year", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "BMONTH": {"name": "BMONTH", "description": "Birth month", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "BYEAR": {"name": "BYEAR", "description": "Birth year", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH1": {"name": "PRMONTH1", "description": "Month of procedure 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH2": {"name": "PRMONTH2", "description": "Month of procedure 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH3": {"name": "PRMONTH3", "description": "Month of procedure 3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH4": {"name": "PRMONTH4", "description": "Month of procedure 4", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH5": {"name": "PRMONTH5", "description": "Month of procedure 5", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH6": {"name": "PRMONTH6", "description": "Month of procedure 6", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH7": {"name": "PRMONTH7", "description": "Month of procedure 7", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH8": {"name": "PRMONTH8", "description": "Month of procedure 8", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH9": {"name": "PRMONTH9", "description": "Month of procedure 9", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH10": {"name": "PRMONTH10", "description": "Month of procedure 10", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH11": {"name": "PRMONTH11", "description": "Month of procedure 11", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH12": {"name": "PRMONTH12", "description": "Month of procedure 12", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH13": {"name": "PRMONTH13", "description": "Month of procedure 13", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH14": {"name": "PRMONTH14", "description": "Month of procedure 14", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH15": {"name": "PRMONTH15", "description": "Month of procedure 15", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH16": {"name": "PRMONTH16", "description": "Month of procedure 16", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH17": {"name": "PRMONTH17", "description": "Month of procedure 17", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH18": {"name": "PRMONTH18", "description": "Month of procedure 18", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH19": {"name": "PRMONTH19", "description": "Month of procedure 19", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH20": {"name": "PRMONTH20", "description": "Month of procedure 20", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH21": {"name": "PRMONTH21", "description": "Month of procedure 21", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH22": {"name": "PRMONTH22", "description": "Month of procedure 22", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH23": {"name": "PRMONTH23", "description": "Month of procedure 23", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH24": {"name": "PRMONTH24", "description": "Month of procedure 24", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH25": {"name": "PRMONTH25", "description": "Month of procedure 25", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR1": {"name": "PRYEAR1", "description": "Year of procedure 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR2": {"name": "PRYEAR2", "description": "Year of procedure 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR3": {"name": "PRYEAR3", "description": "Year of procedure 3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR4": {"name": "PRYEAR4", "description": "Year of procedure 4", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR5": {"name": "PRYEAR5", "description": "Year of procedure 5", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR6": {"name": "PRYEAR6", "description": "Year of procedure 6", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR7": {"name": "PRYEAR7", "description": "Year of procedure 7", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR8": {"name": "PRYEAR8", "description": "Year of procedure 8", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR9": {"name": "PRYEAR9", "description": "Year of procedure 9", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR10": {"name": "PRYEAR10", "description": "Year of procedure 10", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR11": {"name": "PRYEAR11", "description": "Year of procedure 11", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR12": {"name": "PRYEAR12", "description": "Year of procedure 12", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR13": {"name": "PRYEAR13", "description": "Year of procedure 13", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR14": {"name": "PRYEAR14", "description": "Year of procedure 14", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR15": {"name": "PRYEAR15", "description": "Year of procedure 15", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR16": {"name": "PRYEAR16", "description": "Year of procedure 16", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR17": {"name": "PRYEAR17", "description": "Year of procedure 17", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR18": {"name": "PRYEAR18", "description": "Year of procedure 18", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR19": {"name": "PRYEAR19", "description": "Year of procedure 19", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR20": {"name": "PRYEAR20", "description": "Year of procedure 20", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR21": {"name": "PRYEAR21", "description": "Year of procedure 21", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR22": {"name": "PRYEAR22", "description": "Year of procedure 22", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR23": {"name": "PRYEAR23", "description": "Year of procedure 23", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR24": {"name": "PRYEAR24", "description": "Year of procedure 24", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR25": {"name": "PRYEAR25", "description": "Year of procedure 25", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}}, "meta": {}, "source_meta": {"external_location": "\\\\files.drexel.edu\\encrypted\\SOPH\\UHC\\SchnakeMahl_HCUP\\dbt\\v0\\sources\\{name}.parquet"}, "tags": ["Inpatient", "SID", "Source", "State"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "'\\\\files.drexel.edu\\encrypted\\SOPH\\UHC\\SchnakeMahl_HCUP\\dbt\\v0\\sources\\NY_SID_2017_CORE.parquet'", "created_at": 1674148168.1775155}, "source.hcup.SID.NY_SID_2018_CHGS": {"fqn": ["hcup", "docs", "state", "sid", "2016_2018", "ny", "SID", "NY_SID_2018_CHGS"], "database": "main", "schema": "SID", "unique_id": "source.hcup.SID.NY_SID_2018_CHGS", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "models\\docs\\state\\sid\\2016_2018\\ny\\ny_sid_2018_chgs.yml", "original_file_path": "models\\docs\\state\\sid\\2016_2018\\ny\\ny_sid_2018_chgs.yml", "name": "NY_SID_2018_CHGS", "source_name": "SID", "source_description": "## Abstract: HCUP State Inpatient Databases (SID) \r\nThe State Inpatient Databases (SID) are part of the Healthcare Cost and Utilization Project (HCUP), sponsored by the Agency for Healthcare Research and Quality (AHRQ).\r\n\r\nThe HCUP State Inpatient Databases (SID) are a powerful set of hospital databases from data organizations in participating States.\r\n\r\n- The SID contain the universe of the inpatient discharge abstracts from participating States that are translated into a uniform format to facilitate multistate comparisons and analyses.\r\n- Together, the SID encompass almost 97 percent of all U.S. hospital discharges. Some States include discharges from specialty hospitals, such as acute psychiatric hospitals.\r\n- The SID contain a core set of clinical and nonclinical information on all visits, regardless of the expected payer, including but not limited to Medicare, Medicaid, private insurance, self-pay, or those billed as 'no charge'.\r\n- In addition to the core set of uniform data elements common to all SID, some include other elements such as the patient's race.\r\n\r\nResearchers and policymakers use SID to investigate questions unique to one State; to compare data from two or more States; to conduct market-area variation analyses; and to identify State-specific trends in inpatient care utilization, access, charges, and outcomes.\r\n\r\nThe individual State databases are in the same HCUP uniform format and represent 100 percent of records processed by AHRQ. However, the participating data organizations control the release of specific data elements. AHRQ is currently assisting the data organizations in the release of the 1990-2021 SID.\r\n\r\nThe SID can be linked to hospital-level data from the American Hospital Association's Annual Survey of Hospitals and county-level data from the Bureau of Health Professions' Area Resource File, except in those States that do not allow the release of hospital identifiers.\r\n\r\nThirty-six of the data organizations participating in the HCUP have agreed to release their SID files through the HCUP Central Distributor under the auspices of the AHRQ. Uses are limited to research and aggregate statisitical reporting.\r\n\r\nUseful links include: \r\n\r\n- [SEDD database home page](https://www.hcup-us.ahrq.gov/db/state/sedddbdocumentation.jsp)\r\n- [Intro to SEDD database](https://www.hcup-us.ahrq.gov/db/state/sedddist/SEDD_Introduction.jsp)\r\n\r\n\r\n## Introduction to SID\r\n\r\n#### Overview\r\nThe Healthcare Cost and Utilization Project (HCUP) State Inpatient Databases (SID) consist of individual data files from data organizations in 49 participating data organizations. In general, the SID contain the universe of that State's hospital inpatient discharge records. They are composed of annual, State-specific files that share a common structure and common data elements. Most data elements are coded in a uniform format across all States. In addition to the core set of uniform data elements, the SID include State-specific data elements or data elements available only for a limited number of States. The uniform format of the SID helps facilitate cross-State comparisons. In addition, the SID are well suited for research that requires complete enumeration of hospitals and discharges within market areas or States.\r\n\r\nThirty-six of the 49 data organizations that participate in the HCUP have agreed to release their State-specific files through the HCUP Central Distributor under the auspices of AHRQ. The individual state databases are in the same HCUP uniform format and represent 100 percent of records processed by AHRQ. However, the participating data organizations control the release of specific data elements.\r\n\r\nSID data sets are currently available for multiple States and years. Each release of the SID includes:\r\n\r\n- Data in American Standard Code for Information Interchange (ASCII) format on a compact disc with read-only memory (CD-ROM).\r\n- Patient-level hospital discharge abstract data for 100 percent of discharges from hospitals in participating States.\r\n- American Hospital Association (AHA) Linkage File to link the SID to data from the AHA Annual Survey of Hospitals. This is only available for those States that allow the release of hospital identifiers.\r\n\r\nThe SID are calendar year files for all data years except 2015. Because of the transition to ICD-10-CM/PCS1 on October 1, 2015, the 2015 SID are split into two parts. Nine months of the 2015 data with ICD-9-CM2 codes (discharges from January 1, 2015 - September 30, 2015) are in one set of files labeled Q1Q3. Three months of 2015 data with ICD-10-CM/PCS codes (discharges from October 1, 2015 - December 31, 2015) are in a separate set of files labeled Q4. More information about the changes to the HCUP databases for ICD-10-CM/PCS and use of data across the two coding system may be found on the HCUP User Support website under ICD-10-CM/PCS Resources (www.hcup-us.ahrq.gov/datainnovations/icd10_resources.jsp).\r\n\r\nSID documentation and tools\u2014including file specifications, programming source code for loading ASCII data into SAS (SAS Institute Inc.; Cary, NC), SPSS (IBM Corp.; Somers, NY), and Stata (StataCorp; College Station, TX), and value labels\u2014are available online at the HCUP User Support website (www.hcup-us.ahrq.gov).\r\n\r\nStarting with the 2006 SID, the AHA Linkage files are available via the HCUP User Support website www.hcup-us.ahrq.gov. The AHA Linkage files may not be available when the discharge-level database is released.\r\n\r\n#### How the HCUP SID Differ from State Data Files\r\n\r\nHow the HCUP SID Differ from State Data Files\r\n\r\nThe SID available through the HCUP Central Distributor differ from the data files available from the data organizations in the following ways:\r\n\r\n- Data elements available on the files\r\n- Coding of data elements\r\n\r\nBecause the data organizations dictate the data elements that may be released through the HCUP Central Distributor, the data elements on the SID are a subset of the data collected by the corresponding data organizations. HCUP uniform coding is used on most data elements on the SID. A few State-specific data elements retain the original values provided by the respective data organizations.\r\n\r\n#### What Types of Hospitals Are Included in the SID?\r\n\r\nThe types of hospitals included in the SID depend on the information provided by the data organizations and how the files were handled during HCUP processing. Most State government data organizations provide information on all acute care hospitals in the respective State. Private data organizations are often restricted to member hospitals and may not provide information on all hospitals in their State.\r\n\r\nBeginning with the 1994 SID, all hospitals reported by the data organizations were retained in the SID files. Discharges from facilities such as psychiatric facilities, alcohol and drug dependency facilities, and State, Federal, and Veterans Affairs hospitals will be in the SID, if reported by the data source. Prior to 1994, only discharges from community hospitals were retained in the SID.\r\n\r\nCommunity hospitals, as defined by the AHA, include \"all nonfederal, short term, general and other specialty hospitals, excluding hospital units of institutions.\" Included among community hospitals are academic medical centers and specialty hospitals such as obstetrics, gynecology, otolaryngology, short term rehabilitation, orthopedic, and pediatric hospitals. Noncommunity hospitals include Federal hospitals (e.g., Veterans Affairs, Department of Defense, and Indian Health Service hospitals), long-term hospitals, psychiatric hospitals, alcohol/chemical dependency treatment facilities, and hospital units within institutions such as prisons.\r\n\r\nSome community hospitals may not be included in the SID because their data were not provided by the data source. To identify community hospitals, the SID must be linked to the AHA Annual Survey of Hospitals by the AHA hospital identifier.\r\n\r\nTables showing the number of hospitals in the SID can be found online at the HCUP User Support website: (www.hcup-us.ahrq.gov). The tables present the hospitals by the number of hospitals of:\r\n\r\n- Community hospitals\r\n- Hospitals not classified as community\r\n- Community hospitals not in the SID\r\n\r\nInformation contained in the AHA Annual Survey of Hospitals was used to determine if a hospital was a community hospital. Some hospitals could not be categorized as community or noncommunity hospitals because they could not be matched with AHA information. This occurs when a hospital was closed in a previous year or when the hospital does not report to the AHA.\r\n\r\n#### What is the File Structure of the SEDD in the 2019-2021 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n- Diagnosis and Procedure Groups file\r\n\r\n#### What is the File Structure of the SEDD in the 2016-2018 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the 2016 SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n\r\nUnavailable with the 2016-2018 SEDD is the Diagnosis and Procedure Groups file that had been included with the SEDD in prior data years. The data elements included in that file were derived from AHRQ software tools. If you are interested in applying the AHRQ software tools to the ICD-10-CM/PCS data in the 2016-2018 SEDD, beta versions of the AHRQ software tools are available on the HCUP User Support website at www.hcup-us.ahrq.gov/tools_software.jsp. Also available is a tutorial on how to apply the AHRQ software tools to the HCUP databases at www.hcup-us.ahrq.gov/tech_assist/tutorials.jsp.", "loader": "", "identifier": "NY_SID_2018_CHGS", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "NY SID 2018 CHGS file. The Charges file contains detailed charge information. There are three kinds of Charges files:\r\n\r\n## 1. Summarized detail\r\n\r\nSummarized detail in which charge information is summed within the revenue center. This type of Charges file includes one record per discharge abstract. Each record contains three corresponding arrays with the following information:\r\n\r\n- Revenue center (REVCDn)\r\n- Total charge for the revenue center (CHGn)\r\n- Total units of service for the revenue center (UNITn)\r\n\r\nFor example, if a patient had five laboratory tests, REVCD1 would include the revenue code for laboratory, CHG1 would include the total charge for the five tests, and UNIT1 would be five. To combine data elements between this type of Charges file and the Core file, merge the files by the unique record identifier (KEY). There will be a one-to-one correspondence of records.\r\n\r\n## 2. Collapsed detail\r\n\r\nCollapsed detail in which charge information is summed across revenue centers. This type of Charges file includes one record per discharge abstract. Each record contains an array of collapsed charges (CHGn) that are predefined by the data organization that provided the data.\r\n\r\nConsider the example of a patient that had five laboratory tests from different revenue centers in the range of 300 to 319. CHG1, which was predefined as Laboratory Charges for revenue centers 300-319, would include the total charge for the five tests, but there is no detail on which specific revenue centers were used. To combine data elements between this type of Charges file and the Core file, merge the files by the unique record identifier (KEY). There will be a one-to-one correspondence of records.\r\n\r\n## 3. Line level details\r\n\r\nLine item detail in which a submitted charge pertains to a specified revenue center and there may be multiple charges reported for the same revenue center. This type of Charges file includes multiple records per discharge abstract. Each record includes the following information for one service.\r\n\r\n- Revenue center (REVCODE)\r\n- Charge (CHARGE)\r\n- Unit of service (UNITS)\r\n- Day of service (SERVDAY) for some files\r\n\r\nFor example, if a patient had five laboratory tests, there are five records in the Charges file with information on the charge for each laboratory test. Information from this type of Charges file may be combined with the Core file by the unique record identifier (KEY), but there is not a one-to-one correspondence of records.\r\n\r\nRefer to the Description of Data Elements online at the HCUP User Support website (www.hcup-us.ahrq.gov) for more information on the charge information from the different States.", "columns": {"CHARGE": {"name": "CHARGE", "description": "Line item charges (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "KEY": {"name": "KEY", "description": "HCUP record identifier", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "REVCODE": {"name": "REVCODE", "description": "Line item revenue code (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "UNITS": {"name": "UNITS", "description": "Line item units (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}}, "meta": {}, "source_meta": {"external_location": "\\\\files.drexel.edu\\encrypted\\SOPH\\UHC\\SchnakeMahl_HCUP\\dbt\\v0\\sources\\{name}.parquet"}, "tags": ["Inpatient", "SID", "Source", "State"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "'\\\\files.drexel.edu\\encrypted\\SOPH\\UHC\\SchnakeMahl_HCUP\\dbt\\v0\\sources\\NY_SID_2018_CHGS.parquet'", "created_at": 1674148168.1775155}, "source.hcup.SID.NY_SID_2018_CORE": {"fqn": ["hcup", "docs", "state", "sid", "2016_2018", "ny", "SID", "NY_SID_2018_CORE"], "database": "main", "schema": "SID", "unique_id": "source.hcup.SID.NY_SID_2018_CORE", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "models\\docs\\state\\sid\\2016_2018\\ny\\ny_sid_2018_core.yml", "original_file_path": "models\\docs\\state\\sid\\2016_2018\\ny\\ny_sid_2018_core.yml", "name": "NY_SID_2018_CORE", "source_name": "SID", "source_description": "## Abstract: HCUP State Inpatient Databases (SID) \r\nThe State Inpatient Databases (SID) are part of the Healthcare Cost and Utilization Project (HCUP), sponsored by the Agency for Healthcare Research and Quality (AHRQ).\r\n\r\nThe HCUP State Inpatient Databases (SID) are a powerful set of hospital databases from data organizations in participating States.\r\n\r\n- The SID contain the universe of the inpatient discharge abstracts from participating States that are translated into a uniform format to facilitate multistate comparisons and analyses.\r\n- Together, the SID encompass almost 97 percent of all U.S. hospital discharges. Some States include discharges from specialty hospitals, such as acute psychiatric hospitals.\r\n- The SID contain a core set of clinical and nonclinical information on all visits, regardless of the expected payer, including but not limited to Medicare, Medicaid, private insurance, self-pay, or those billed as 'no charge'.\r\n- In addition to the core set of uniform data elements common to all SID, some include other elements such as the patient's race.\r\n\r\nResearchers and policymakers use SID to investigate questions unique to one State; to compare data from two or more States; to conduct market-area variation analyses; and to identify State-specific trends in inpatient care utilization, access, charges, and outcomes.\r\n\r\nThe individual State databases are in the same HCUP uniform format and represent 100 percent of records processed by AHRQ. However, the participating data organizations control the release of specific data elements. AHRQ is currently assisting the data organizations in the release of the 1990-2021 SID.\r\n\r\nThe SID can be linked to hospital-level data from the American Hospital Association's Annual Survey of Hospitals and county-level data from the Bureau of Health Professions' Area Resource File, except in those States that do not allow the release of hospital identifiers.\r\n\r\nThirty-six of the data organizations participating in the HCUP have agreed to release their SID files through the HCUP Central Distributor under the auspices of the AHRQ. Uses are limited to research and aggregate statisitical reporting.\r\n\r\nUseful links include: \r\n\r\n- [SEDD database home page](https://www.hcup-us.ahrq.gov/db/state/sedddbdocumentation.jsp)\r\n- [Intro to SEDD database](https://www.hcup-us.ahrq.gov/db/state/sedddist/SEDD_Introduction.jsp)\r\n\r\n\r\n## Introduction to SID\r\n\r\n#### Overview\r\nThe Healthcare Cost and Utilization Project (HCUP) State Inpatient Databases (SID) consist of individual data files from data organizations in 49 participating data organizations. In general, the SID contain the universe of that State's hospital inpatient discharge records. They are composed of annual, State-specific files that share a common structure and common data elements. Most data elements are coded in a uniform format across all States. In addition to the core set of uniform data elements, the SID include State-specific data elements or data elements available only for a limited number of States. The uniform format of the SID helps facilitate cross-State comparisons. In addition, the SID are well suited for research that requires complete enumeration of hospitals and discharges within market areas or States.\r\n\r\nThirty-six of the 49 data organizations that participate in the HCUP have agreed to release their State-specific files through the HCUP Central Distributor under the auspices of AHRQ. The individual state databases are in the same HCUP uniform format and represent 100 percent of records processed by AHRQ. However, the participating data organizations control the release of specific data elements.\r\n\r\nSID data sets are currently available for multiple States and years. Each release of the SID includes:\r\n\r\n- Data in American Standard Code for Information Interchange (ASCII) format on a compact disc with read-only memory (CD-ROM).\r\n- Patient-level hospital discharge abstract data for 100 percent of discharges from hospitals in participating States.\r\n- American Hospital Association (AHA) Linkage File to link the SID to data from the AHA Annual Survey of Hospitals. This is only available for those States that allow the release of hospital identifiers.\r\n\r\nThe SID are calendar year files for all data years except 2015. Because of the transition to ICD-10-CM/PCS1 on October 1, 2015, the 2015 SID are split into two parts. Nine months of the 2015 data with ICD-9-CM2 codes (discharges from January 1, 2015 - September 30, 2015) are in one set of files labeled Q1Q3. Three months of 2015 data with ICD-10-CM/PCS codes (discharges from October 1, 2015 - December 31, 2015) are in a separate set of files labeled Q4. More information about the changes to the HCUP databases for ICD-10-CM/PCS and use of data across the two coding system may be found on the HCUP User Support website under ICD-10-CM/PCS Resources (www.hcup-us.ahrq.gov/datainnovations/icd10_resources.jsp).\r\n\r\nSID documentation and tools\u2014including file specifications, programming source code for loading ASCII data into SAS (SAS Institute Inc.; Cary, NC), SPSS (IBM Corp.; Somers, NY), and Stata (StataCorp; College Station, TX), and value labels\u2014are available online at the HCUP User Support website (www.hcup-us.ahrq.gov).\r\n\r\nStarting with the 2006 SID, the AHA Linkage files are available via the HCUP User Support website www.hcup-us.ahrq.gov. The AHA Linkage files may not be available when the discharge-level database is released.\r\n\r\n#### How the HCUP SID Differ from State Data Files\r\n\r\nHow the HCUP SID Differ from State Data Files\r\n\r\nThe SID available through the HCUP Central Distributor differ from the data files available from the data organizations in the following ways:\r\n\r\n- Data elements available on the files\r\n- Coding of data elements\r\n\r\nBecause the data organizations dictate the data elements that may be released through the HCUP Central Distributor, the data elements on the SID are a subset of the data collected by the corresponding data organizations. HCUP uniform coding is used on most data elements on the SID. A few State-specific data elements retain the original values provided by the respective data organizations.\r\n\r\n#### What Types of Hospitals Are Included in the SID?\r\n\r\nThe types of hospitals included in the SID depend on the information provided by the data organizations and how the files were handled during HCUP processing. Most State government data organizations provide information on all acute care hospitals in the respective State. Private data organizations are often restricted to member hospitals and may not provide information on all hospitals in their State.\r\n\r\nBeginning with the 1994 SID, all hospitals reported by the data organizations were retained in the SID files. Discharges from facilities such as psychiatric facilities, alcohol and drug dependency facilities, and State, Federal, and Veterans Affairs hospitals will be in the SID, if reported by the data source. Prior to 1994, only discharges from community hospitals were retained in the SID.\r\n\r\nCommunity hospitals, as defined by the AHA, include \"all nonfederal, short term, general and other specialty hospitals, excluding hospital units of institutions.\" Included among community hospitals are academic medical centers and specialty hospitals such as obstetrics, gynecology, otolaryngology, short term rehabilitation, orthopedic, and pediatric hospitals. Noncommunity hospitals include Federal hospitals (e.g., Veterans Affairs, Department of Defense, and Indian Health Service hospitals), long-term hospitals, psychiatric hospitals, alcohol/chemical dependency treatment facilities, and hospital units within institutions such as prisons.\r\n\r\nSome community hospitals may not be included in the SID because their data were not provided by the data source. To identify community hospitals, the SID must be linked to the AHA Annual Survey of Hospitals by the AHA hospital identifier.\r\n\r\nTables showing the number of hospitals in the SID can be found online at the HCUP User Support website: (www.hcup-us.ahrq.gov). The tables present the hospitals by the number of hospitals of:\r\n\r\n- Community hospitals\r\n- Hospitals not classified as community\r\n- Community hospitals not in the SID\r\n\r\nInformation contained in the AHA Annual Survey of Hospitals was used to determine if a hospital was a community hospital. Some hospitals could not be categorized as community or noncommunity hospitals because they could not be matched with AHA information. This occurs when a hospital was closed in a previous year or when the hospital does not report to the AHA.\r\n\r\n#### What is the File Structure of the SEDD in the 2019-2021 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n- Diagnosis and Procedure Groups file\r\n\r\n#### What is the File Structure of the SEDD in the 2016-2018 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the 2016 SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n\r\nUnavailable with the 2016-2018 SEDD is the Diagnosis and Procedure Groups file that had been included with the SEDD in prior data years. The data elements included in that file were derived from AHRQ software tools. If you are interested in applying the AHRQ software tools to the ICD-10-CM/PCS data in the 2016-2018 SEDD, beta versions of the AHRQ software tools are available on the HCUP User Support website at www.hcup-us.ahrq.gov/tools_software.jsp. Also available is a tutorial on how to apply the AHRQ software tools to the HCUP databases at www.hcup-us.ahrq.gov/tech_assist/tutorials.jsp.", "loader": "", "identifier": "NY_SID_2018_CORE", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "NY SID 2018 CORE file. The Core file is a discharge-level file that contains:\r\n\r\n- Core data elements that form the nucleus of the SID\r\n- State-specific data elements intended for limited use\r\n\r\nCore data elements meet at least one of the following criteria:\r\n\r\n- Are available from all or nearly all data sources\r\n- Lend themselves to uniform coding across sources\r\n- Are needed for traditional applications (e.g., length of stay, patient age)\r\n\r\nState-specific data elements meet at least one of the following criteria:\r\n\r\n- Are available from a limited number of sources\r\n- Do not lend themselves to uniform coding across sources\r\n- Are not needed for traditional applications", "columns": {"AGE": {"name": "AGE", "description": "Age in years at admission", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AGEDAY": {"name": "AGEDAY", "description": "Age in days (when age < 1 year)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AGEMONTH": {"name": "AGEMONTH", "description": "Age in months (when age < 11 years)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AHOUR": {"name": "AHOUR", "description": "Admission Hour", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AMONTH": {"name": "AMONTH", "description": "Admission month", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "ATYPE": {"name": "ATYPE", "description": "Admission type", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AWEEKEND": {"name": "AWEEKEND", "description": "Admission day is a weekend", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "BLOOD": {"name": "BLOOD", "description": "Pints of blood furnished to the patient", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "BP_DIASTOLIC_X": {"name": "BP_DIASTOLIC_X", "description": "Diastolic blood pressure of the patient, as received from data source", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "BP_SYSTOLIC_X": {"name": "BP_SYSTOLIC_X", "description": "Systolic blood pressure of the patient, as received from data source", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "BWT": {"name": "BWT", "description": "Birth weight in grams", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DaysToEvent": {"name": "DaysToEvent", "description": "Days from 'start date' to admission", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DHOUR": {"name": "DHOUR", "description": "Discharge Hour", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DIED": {"name": "DIED", "description": "Died during hospitalization", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DISP_X": {"name": "DISP_X", "description": "Disposition of patient (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DISPUB04": {"name": "DISPUB04", "description": "Disposition of patient (UB-04 standard coding)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DISPUNIFORM": {"name": "DISPUNIFORM", "description": "Disposition of patient (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DMONTH": {"name": "DMONTH", "description": "Discharge month", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DQTR": {"name": "DQTR", "description": "Discharge quarter", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DRG": {"name": "DRG", "description": "DRG in effect on discharge date", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DRG_NoPOA": {"name": "DRG_NoPOA", "description": "DRG in use on discharge date, calculated without POA", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DRGVER": {"name": "DRGVER", "description": "DRG grouper version used on discharge date", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "DSHOSPID": {"name": "DSHOSPID", "description": "Data source hospital identifier", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA1": {"name": "DXPOA1", "description": "Diagnosis 1, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA2": {"name": "DXPOA2", "description": "Diagnosis 2, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA3": {"name": "DXPOA3", "description": "Diagnosis 3, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA4": {"name": "DXPOA4", "description": "Diagnosis 4, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA5": {"name": "DXPOA5", "description": "Diagnosis 5, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA6": {"name": "DXPOA6", "description": "Diagnosis 6, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA7": {"name": "DXPOA7", "description": "Diagnosis 7, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA8": {"name": "DXPOA8", "description": "Diagnosis 8, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA9": {"name": "DXPOA9", "description": "Diagnosis 9, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA10": {"name": "DXPOA10", "description": "Diagnosis 10, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA11": {"name": "DXPOA11", "description": "Diagnosis 11, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA12": {"name": "DXPOA12", "description": "Diagnosis 12, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA13": {"name": "DXPOA13", "description": "Diagnosis 13, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA14": {"name": "DXPOA14", "description": "Diagnosis 14, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA15": {"name": "DXPOA15", "description": "Diagnosis 15, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA16": {"name": "DXPOA16", "description": "Diagnosis 16, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA17": {"name": "DXPOA17", "description": "Diagnosis 17, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA18": {"name": "DXPOA18", "description": "Diagnosis 18, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA19": {"name": "DXPOA19", "description": "Diagnosis 19, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA20": {"name": "DXPOA20", "description": "Diagnosis 20, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA21": {"name": "DXPOA21", "description": "Diagnosis 21, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA22": {"name": "DXPOA22", "description": "Diagnosis 22, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA23": {"name": "DXPOA23", "description": "Diagnosis 23, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA24": {"name": "DXPOA24", "description": "Diagnosis 24, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA25": {"name": "DXPOA25", "description": "Diagnosis 25, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA26": {"name": "DXPOA26", "description": "Diagnosis 26, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA27": {"name": "DXPOA27", "description": "Diagnosis 27, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA28": {"name": "DXPOA28", "description": "Diagnosis 28, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA29": {"name": "DXPOA29", "description": "Diagnosis 29, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA30": {"name": "DXPOA30", "description": "Diagnosis 30, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA31": {"name": "DXPOA31", "description": "Diagnosis 31, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA32": {"name": "DXPOA32", "description": "Diagnosis 32, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA33": {"name": "DXPOA33", "description": "Diagnosis 33, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA34": {"name": "DXPOA34", "description": "Diagnosis 34, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "DXPOA35": {"name": "DXPOA35", "description": "Diagnosis 35, present on admission indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "FEMALE": {"name": "FEMALE", "description": "Indicator of sex", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HCUP_ED": {"name": "HCUP_ED", "description": "HCUP Emergency Department service indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HCUP_OS": {"name": "HCUP_OS", "description": "HCUP Observation Stay service indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HEART_RATE_X": {"name": "HEART_RATE_X", "description": "Heart rate of the patient, as received from data source", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HISPANIC": {"name": "HISPANIC", "description": "Hispanic ethnicity (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HISPANIC_X": {"name": "HISPANIC_X", "description": "Hispanic ethnicity (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "Homeless": {"name": "Homeless", "description": "Indicator that patient is homeless", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "HOSP_NPI": {"name": "HOSP_NPI", "description": "Hospital NPI", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "HOSPST": {"name": "HOSPST", "description": "Hospital state postal code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX_Admitting": {"name": "I10_DX_Admitting", "description": "ICD-10-CM Admitting Diagnosis Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX1": {"name": "I10_DX1", "description": "ICD-10-CM Diagnosis 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX2": {"name": "I10_DX2", "description": "ICD-10-CM Diagnosis 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX3": {"name": "I10_DX3", "description": "ICD-10-CM Diagnosis 3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX4": {"name": "I10_DX4", "description": "ICD-10-CM Diagnosis 4", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX5": {"name": "I10_DX5", "description": "ICD-10-CM Diagnosis 5", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX6": {"name": "I10_DX6", "description": "ICD-10-CM Diagnosis 6", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX7": {"name": "I10_DX7", "description": "ICD-10-CM Diagnosis 7", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX8": {"name": "I10_DX8", "description": "ICD-10-CM Diagnosis 8", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX9": {"name": "I10_DX9", "description": "ICD-10-CM Diagnosis 9", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX10": {"name": "I10_DX10", "description": "ICD-10-CM Diagnosis 10", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX11": {"name": "I10_DX11", "description": "ICD-10-CM Diagnosis 11", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX12": {"name": "I10_DX12", "description": "ICD-10-CM Diagnosis 12", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX13": {"name": "I10_DX13", "description": "ICD-10-CM Diagnosis 13", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX14": {"name": "I10_DX14", "description": "ICD-10-CM Diagnosis 14", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX15": {"name": "I10_DX15", "description": "ICD-10-CM Diagnosis 15", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX16": {"name": "I10_DX16", "description": "ICD-10-CM Diagnosis 16", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX17": {"name": "I10_DX17", "description": "ICD-10-CM Diagnosis 17", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX18": {"name": "I10_DX18", "description": "ICD-10-CM Diagnosis 18", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX19": {"name": "I10_DX19", "description": "ICD-10-CM Diagnosis 19", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX20": {"name": "I10_DX20", "description": "ICD-10-CM Diagnosis 20", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX21": {"name": "I10_DX21", "description": "ICD-10-CM Diagnosis 21", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX22": {"name": "I10_DX22", "description": "ICD-10-CM Diagnosis 22", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX23": {"name": "I10_DX23", "description": "ICD-10-CM Diagnosis 23", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX24": {"name": "I10_DX24", "description": "ICD-10-CM Diagnosis 24", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX25": {"name": "I10_DX25", "description": "ICD-10-CM Diagnosis 25", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX26": {"name": "I10_DX26", "description": "ICD-10-CM Diagnosis 26", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX27": {"name": "I10_DX27", "description": "ICD-10-CM Diagnosis 27", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX28": {"name": "I10_DX28", "description": "ICD-10-CM Diagnosis 28", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX29": {"name": "I10_DX29", "description": "ICD-10-CM Diagnosis 29", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX30": {"name": "I10_DX30", "description": "ICD-10-CM Diagnosis 30", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX31": {"name": "I10_DX31", "description": "ICD-10-CM Diagnosis 31", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX32": {"name": "I10_DX32", "description": "ICD-10-CM Diagnosis 32", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX33": {"name": "I10_DX33", "description": "ICD-10-CM Diagnosis 33", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX34": {"name": "I10_DX34", "description": "ICD-10-CM Diagnosis 34", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_DX35": {"name": "I10_DX35", "description": "ICD-10-CM Diagnosis 35", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_NDX": {"name": "I10_NDX", "description": "ICD-10-CM Number of diagnoses on this record", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "I10_NPR": {"name": "I10_NPR", "description": "ICD-10-PCS Number of procedures on this record", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "I10_PR1": {"name": "I10_PR1", "description": "ICD-10-PCS Procedure 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR2": {"name": "I10_PR2", "description": "ICD-10-PCS Procedure 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR3": {"name": "I10_PR3", "description": "ICD-10-PCS Procedure 3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR4": {"name": "I10_PR4", "description": "ICD-10-PCS Procedure 4", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR5": {"name": "I10_PR5", "description": "ICD-10-PCS Procedure 5", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR6": {"name": "I10_PR6", "description": "ICD-10-PCS Procedure 6", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR7": {"name": "I10_PR7", "description": "ICD-10-PCS Procedure 7", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR8": {"name": "I10_PR8", "description": "ICD-10-PCS Procedure 8", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR9": {"name": "I10_PR9", "description": "ICD-10-PCS Procedure 9", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR10": {"name": "I10_PR10", "description": "ICD-10-PCS Procedure 10", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR11": {"name": "I10_PR11", "description": "ICD-10-PCS Procedure 11", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR12": {"name": "I10_PR12", "description": "ICD-10-PCS Procedure 12", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR13": {"name": "I10_PR13", "description": "ICD-10-PCS Procedure 13", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR14": {"name": "I10_PR14", "description": "ICD-10-PCS Procedure 14", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR15": {"name": "I10_PR15", "description": "ICD-10-PCS Procedure 15", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR16": {"name": "I10_PR16", "description": "ICD-10-PCS Procedure 16", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR17": {"name": "I10_PR17", "description": "ICD-10-PCS Procedure 17", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR18": {"name": "I10_PR18", "description": "ICD-10-PCS Procedure 18", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR19": {"name": "I10_PR19", "description": "ICD-10-PCS Procedure 19", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR20": {"name": "I10_PR20", "description": "ICD-10-PCS Procedure 20", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR21": {"name": "I10_PR21", "description": "ICD-10-PCS Procedure 21", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR22": {"name": "I10_PR22", "description": "ICD-10-PCS Procedure 22", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR23": {"name": "I10_PR23", "description": "ICD-10-PCS Procedure 23", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR24": {"name": "I10_PR24", "description": "ICD-10-PCS Procedure 24", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PR25": {"name": "I10_PR25", "description": "ICD-10-PCS Procedure 25", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "I10_PROCTYPE": {"name": "I10_PROCTYPE", "description": "ICD-10-PCS Procedure type indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "KEY": {"name": "KEY", "description": "HCUP record identifier", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "LOS": {"name": "LOS", "description": "Length of stay (cleaned)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "LOS_X": {"name": "LOS_X", "description": "Length of stay (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "MARITALSTATUS_X": {"name": "MARITALSTATUS_X", "description": "Patient's marital status (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "MARITALSTATUSUB04": {"name": "MARITALSTATUSUB04", "description": "Patient's marital status, UB-04 standard coding", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "MDC": {"name": "MDC", "description": "MDC in effect on discharge date", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "MDC_NoPOA": {"name": "MDC_NoPOA", "description": "MDC in use on discharge date, calculated without POA", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "MDNUM1_R": {"name": "MDNUM1_R", "description": "Physician 1 number (re-identified)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "MDNUM2_R": {"name": "MDNUM2_R", "description": "Physician 2 number (re-identified)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "MEDINCSTQ": {"name": "MEDINCSTQ", "description": "Median household income state quartile for patient ZIP Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "OS_TIME": {"name": "OS_TIME", "description": "Observation stay time summed from UNITS", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "P7EDSRC_X": {"name": "P7EDSRC_X", "description": "Condition Code P7, Direct Inpatient Admission from Emergency Room", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PAY1": {"name": "PAY1", "description": "Primary expected payer (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PAY1_X": {"name": "PAY1_X", "description": "Primary expected payer (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PAY2": {"name": "PAY2", "description": "Secondary expected payer (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PAY2_X": {"name": "PAY2_X", "description": "Secondary expected payer (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PAY3": {"name": "PAY3", "description": "Tertiary expected payer (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PAY3_X": {"name": "PAY3_X", "description": "Tertiary expected payer (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PL_CBSA": {"name": "PL_CBSA", "description": "Patient location: Core Based Statistical Area (CBSA)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PL_NCHS": {"name": "PL_NCHS", "description": "Patient Location: NCHS Urban-Rural Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PL_RUCC": {"name": "PL_RUCC", "description": "Patient location: Rural-Urban Continuum Codes (RUCC)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PL_UIC": {"name": "PL_UIC", "description": "Patient location: Urban Influence Codes", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PL_UR_CAT4": {"name": "PL_UR_CAT4", "description": "Patient Location: Urban-Rural 4 Categories", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "POA_Disch_Edit1": {"name": "POA_Disch_Edit1", "description": "Discharge has POA missing on all nonexempt diagnoses", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "POA_Disch_Edit2": {"name": "POA_Disch_Edit2", "description": "Discharge has POA missing on all nonexempt secondary diagnoses", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "POA_Hosp_Edit1": {"name": "POA_Hosp_Edit1", "description": "Hospital reported POA as Y on all diagnoses on all discharges", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "POA_Hosp_Edit2": {"name": "POA_Hosp_Edit2", "description": "Hospital reported POA as missing on all non-Medicare discharges", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "POA_Hosp_Edit3": {"name": "POA_Hosp_Edit3", "description": "Hospital reported POA as missing on all nonexempt diagnoses for 15% or more of d", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "POA_Hosp_Edit3_Value": {"name": "POA_Hosp_Edit3_Value", "description": "Percentage of discharges with all nonexempt diagnoses missing POA indicators", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "PointOfOrigin_X": {"name": "PointOfOrigin_X", "description": "Point of origin for admission or visit, as received from source", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PointOfOriginUB04": {"name": "PointOfOriginUB04", "description": "Point of origin for admission or visit, UB-04 standard coding", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PRDAY1": {"name": "PRDAY1", "description": "Number of days from admission to I10_PR1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY2": {"name": "PRDAY2", "description": "Number of days from admission to I10_PR2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY3": {"name": "PRDAY3", "description": "Number of days from admission to I10_PR3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY4": {"name": "PRDAY4", "description": "Number of days from admission to I10_PR4", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY5": {"name": "PRDAY5", "description": "Number of days from admission to I10_PR5", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY6": {"name": "PRDAY6", "description": "Number of days from admission to I10_PR6", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY7": {"name": "PRDAY7", "description": "Number of days from admission to I10_PR7", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY8": {"name": "PRDAY8", "description": "Number of days from admission to I10_PR8", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY9": {"name": "PRDAY9", "description": "Number of days from admission to I10_PR9", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY10": {"name": "PRDAY10", "description": "Number of days from admission to I10_PR10", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY11": {"name": "PRDAY11", "description": "Number of days from admission to I10_PR11", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY12": {"name": "PRDAY12", "description": "Number of days from admission to I10_PR12", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY13": {"name": "PRDAY13", "description": "Number of days from admission to I10_PR13", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY14": {"name": "PRDAY14", "description": "Number of days from admission to I10_PR14", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY15": {"name": "PRDAY15", "description": "Number of days from admission to I10_PR15", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY16": {"name": "PRDAY16", "description": "Number of days from admission to I10_PR16", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY17": {"name": "PRDAY17", "description": "Number of days from admission to I10_PR17", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY18": {"name": "PRDAY18", "description": "Number of days from admission to I10_PR18", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY19": {"name": "PRDAY19", "description": "Number of days from admission to I10_PR19", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY20": {"name": "PRDAY20", "description": "Number of days from admission to I10_PR20", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY21": {"name": "PRDAY21", "description": "Number of days from admission to I10_PR21", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY22": {"name": "PRDAY22", "description": "Number of days from admission to I10_PR22", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY23": {"name": "PRDAY23", "description": "Number of days from admission to I10_PR23", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY24": {"name": "PRDAY24", "description": "Number of days from admission to I10_PR24", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRDAY25": {"name": "PRDAY25", "description": "Number of days from admission to I10_PR25", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PSTATE": {"name": "PSTATE", "description": "Patient State postal code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "PSTCO": {"name": "PSTCO", "description": "Patient state/county FIPS code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PSTCO2": {"name": "PSTCO2", "description": "Patient state/county FIPS code, possibly derived from ZIP Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "RACE": {"name": "RACE", "description": "Race (uniform)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "RACE_EDIT": {"name": "RACE_EDIT", "description": "Race Edit Checks", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "RACE_X": {"name": "RACE_X", "description": "Race (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "TOTCHG": {"name": "TOTCHG", "description": "Total charges (cleaned)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "TOTCHG_X": {"name": "TOTCHG_X", "description": "Total charges (as received from source)", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "double"}, "TRAN_IN": {"name": "TRAN_IN", "description": "Transfer in indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "TRAN_OUT": {"name": "TRAN_OUT", "description": "Transfer out indicator", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "VisitLink": {"name": "VisitLink", "description": "Visit linkage variable", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "YEAR": {"name": "YEAR", "description": "Calendar year", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "ZIP": {"name": "ZIP", "description": "Patient ZIP Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "ZIP3": {"name": "ZIP3", "description": "Patient ZIP Code, first 3 digits", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "string"}, "ZIPINC_QRTL": {"name": "ZIPINC_QRTL", "description": "Median household income national quartile for patient ZIP Code", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "AYEAR": {"name": "AYEAR", "description": "Admission year", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "BMONTH": {"name": "BMONTH", "description": "Birth month", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "BYEAR": {"name": "BYEAR", "description": "Birth year", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH1": {"name": "PRMONTH1", "description": "Month of procedure 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH2": {"name": "PRMONTH2", "description": "Month of procedure 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH3": {"name": "PRMONTH3", "description": "Month of procedure 3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH4": {"name": "PRMONTH4", "description": "Month of procedure 4", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH5": {"name": "PRMONTH5", "description": "Month of procedure 5", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH6": {"name": "PRMONTH6", "description": "Month of procedure 6", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH7": {"name": "PRMONTH7", "description": "Month of procedure 7", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH8": {"name": "PRMONTH8", "description": "Month of procedure 8", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH9": {"name": "PRMONTH9", "description": "Month of procedure 9", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH10": {"name": "PRMONTH10", "description": "Month of procedure 10", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH11": {"name": "PRMONTH11", "description": "Month of procedure 11", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH12": {"name": "PRMONTH12", "description": "Month of procedure 12", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH13": {"name": "PRMONTH13", "description": "Month of procedure 13", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH14": {"name": "PRMONTH14", "description": "Month of procedure 14", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH15": {"name": "PRMONTH15", "description": "Month of procedure 15", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH16": {"name": "PRMONTH16", "description": "Month of procedure 16", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH17": {"name": "PRMONTH17", "description": "Month of procedure 17", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH18": {"name": "PRMONTH18", "description": "Month of procedure 18", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH19": {"name": "PRMONTH19", "description": "Month of procedure 19", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH20": {"name": "PRMONTH20", "description": "Month of procedure 20", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH21": {"name": "PRMONTH21", "description": "Month of procedure 21", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH22": {"name": "PRMONTH22", "description": "Month of procedure 22", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH23": {"name": "PRMONTH23", "description": "Month of procedure 23", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH24": {"name": "PRMONTH24", "description": "Month of procedure 24", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRMONTH25": {"name": "PRMONTH25", "description": "Month of procedure 25", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR1": {"name": "PRYEAR1", "description": "Year of procedure 1", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR2": {"name": "PRYEAR2", "description": "Year of procedure 2", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR3": {"name": "PRYEAR3", "description": "Year of procedure 3", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR4": {"name": "PRYEAR4", "description": "Year of procedure 4", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR5": {"name": "PRYEAR5", "description": "Year of procedure 5", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR6": {"name": "PRYEAR6", "description": "Year of procedure 6", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR7": {"name": "PRYEAR7", "description": "Year of procedure 7", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR8": {"name": "PRYEAR8", "description": "Year of procedure 8", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR9": {"name": "PRYEAR9", "description": "Year of procedure 9", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR10": {"name": "PRYEAR10", "description": "Year of procedure 10", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR11": {"name": "PRYEAR11", "description": "Year of procedure 11", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR12": {"name": "PRYEAR12", "description": "Year of procedure 12", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR13": {"name": "PRYEAR13", "description": "Year of procedure 13", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR14": {"name": "PRYEAR14", "description": "Year of procedure 14", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR15": {"name": "PRYEAR15", "description": "Year of procedure 15", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR16": {"name": "PRYEAR16", "description": "Year of procedure 16", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR17": {"name": "PRYEAR17", "description": "Year of procedure 17", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR18": {"name": "PRYEAR18", "description": "Year of procedure 18", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR19": {"name": "PRYEAR19", "description": "Year of procedure 19", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR20": {"name": "PRYEAR20", "description": "Year of procedure 20", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR21": {"name": "PRYEAR21", "description": "Year of procedure 21", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR22": {"name": "PRYEAR22", "description": "Year of procedure 22", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR23": {"name": "PRYEAR23", "description": "Year of procedure 23", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR24": {"name": "PRYEAR24", "description": "Year of procedure 24", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}, "PRYEAR25": {"name": "PRYEAR25", "description": "Year of procedure 25", "meta": {}, "data_type": null, "quote": null, "tags": [], "type": "int32"}}, "meta": {}, "source_meta": {"external_location": "\\\\files.drexel.edu\\encrypted\\SOPH\\UHC\\SchnakeMahl_HCUP\\dbt\\v0\\sources\\{name}.parquet"}, "tags": ["Inpatient", "SID", "Source", "State"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "'\\\\files.drexel.edu\\encrypted\\SOPH\\UHC\\SchnakeMahl_HCUP\\dbt\\v0\\sources\\NY_SID_2018_CORE.parquet'", "created_at": 1674148168.1775155}}, "macros": {"macro.hcup.dx_flag_flu": {"unique_id": "macro.hcup.dx_flag_flu", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "macros\\dx_recoding\\flu\\dx_flag_flu.sql", "original_file_path": "macros\\dx_recoding\\flu\\dx_flag_flu.sql", "name": "dx_flag_flu", "macro_sql": "{%- macro dx_flag_flu() -%}\r\n \r\n    {% set flu_codes = ('J1000', 'J1001', 'J1008', 'J101', 'J102', 'J1081', 'J1082', 'J1083', 'J1089', 'J1100', 'J1108', 'J111', 'J112', 'J1181', 'J1182', 'J1183', 'J1189', 'J09X1', 'J09X2', 'J09X3', 'J09X9')   %}\r\n    \r\n    I10_DX_Visit_Reason1 IN {{flu_codes}} OR I10_DX_Visit_Reason2 IN {{flu_codes}} OR I10_DX1 IN {{flu_codes}} OR I10_DX2 IN {{flu_codes}}\r\n\r\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "Output is a boolean indicator (True/False) flag for `flu-like` dx codes. This macro will return True if any of the four columns - `I10_DX_Visit_Reason1`, `I10_DX_Visit_Reason2`, `I10_DX1`, and `I10_DX2` - contain a `flu` dx code. Please see the macro code below for a list of these `flu` dx codes. We got these from Grace's code and may need refining/documentation for how these codes were chosen.", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "hcup://macros\\dx_recoding\\flu\\flu.yml", "arguments": [], "created_at": 1674148166.703124, "supported_languages": null}, "macro.hcup.dx_flag_flu_like": {"unique_id": "macro.hcup.dx_flag_flu_like", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "macros\\dx_recoding\\flu\\dx_flag_flu_like.sql", "original_file_path": "macros\\dx_recoding\\flu\\dx_flag_flu_like.sql", "name": "dx_flag_flu_like", "macro_sql": "{%- macro dx_flag_flu_like() -%}\r\n \r\n    {% set flu_like_codes = ('J069', 'J399', 'J200', 'J201', 'J202', 'J203', 'J204', 'J205', 'J206', 'J207', 'J208', 'J209', 'J210', 'J211', 'J218', 'J219', 'J40', 'B012', 'B052', 'B0681', 'B250', 'J120', 'J121', 'J122', 'J123', 'J1281', 'J1289', 'J129', 'J440', 'J441', 'J470', 'J471')   %}\r\n    \r\n    I10_DX_Visit_Reason1 IN {{flu_like_codes}} OR I10_DX_Visit_Reason2 IN {{flu_like_codes}} OR I10_DX1 IN {{flu_like_codes}} OR I10_DX2 IN {{flu_like_codes}}\r\n\r\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "Output is a boolean indicator (True/False) flag for `flu-like` dx codes. This macro will return True if any of the four columns - `I10_DX_Visit_Reason1`, `I10_DX_Visit_Reason2`, `I10_DX1`, and `I10_DX2` - contain a `flu-like` dx code. Please see the macro code below for a list of these `flu-like` dx codes. We got these from Grace's code and may need refining/documentation for how these codes were chosen.", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "hcup://macros\\dx_recoding\\flu\\flu.yml", "arguments": [], "created_at": 1674148166.703124, "supported_languages": null}, "macro.hcup.get_env_external_format": {"unique_id": "macro.hcup.get_env_external_format", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "macros\\orchestration\\get_env_external_format.sql", "original_file_path": "macros\\orchestration\\get_env_external_format.sql", "name": "get_env_external_format", "macro_sql": "{% macro get_env_external_format() %}\r\n  {% if target.name == 'stage' %}\r\n    'csv'\r\n    {% else %}       \r\n    'parquet'\r\n  {% endif %}\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1024075, "supported_languages": null}, "macro.hcup.limit_data_in_dev": {"unique_id": "macro.hcup.limit_data_in_dev", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "macros\\orchestration\\limit_data_in_dev.sql", "original_file_path": "macros\\orchestration\\limit_data_in_dev.sql", "name": "limit_data_in_dev", "macro_sql": "{% macro limit_data_in_dev(x = 25) %}\r\n  {% if not  target.name == 'prod' %}\r\n  order by RANDOM()\r\n  limit {{x}}\r\n  {% endif %}\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "A macro to randomly sample the specified number of rows from table when in dev", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "hcup://macros\\orchestration\\limit_data_in_dev.yml", "arguments": [{"name": "x", "type": "int", "description": "The number of rows to subset. The default value is 25."}], "created_at": 1674148166.7051363, "supported_languages": null}, "macro.dbt_duckdb.duckdb__create_schema": {"unique_id": "macro.dbt_duckdb.duckdb__create_schema", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "duckdb__create_schema", "macro_sql": "{% macro duckdb__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier().include(database=False) }}\n  {%- endcall -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1224072, "supported_languages": null}, "macro.dbt_duckdb.duckdb__drop_schema": {"unique_id": "macro.dbt_duckdb.duckdb__drop_schema", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "duckdb__drop_schema", "macro_sql": "{% macro duckdb__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier().include(database=False) }} cascade\n  {%- endcall -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1224072, "supported_languages": null}, "macro.dbt_duckdb.duckdb__list_schemas": {"unique_id": "macro.dbt_duckdb.duckdb__list_schemas", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "duckdb__list_schemas", "macro_sql": "{% macro duckdb__list_schemas(database) -%}\n  {% set sql %}\n    select schema_name\n    from information_schema.schemata\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1235125, "supported_languages": null}, "macro.dbt_duckdb.duckdb__check_schema_exists": {"unique_id": "macro.dbt_duckdb.duckdb__check_schema_exists", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "duckdb__check_schema_exists", "macro_sql": "{% macro duckdb__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from information_schema.schemata\n        where schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1235125, "supported_languages": null}, "macro.dbt_duckdb.duckdb__create_table_as": {"unique_id": "macro.dbt_duckdb.duckdb__create_table_as", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "duckdb__create_table_as", "macro_sql": "{% macro duckdb__create_table_as(temporary, relation, compiled_code, language='sql') -%}\n  {%- if language == 'sql' -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none }}\n\n    create {% if temporary: -%}temporary{%- endif %} table\n      {{ relation.include(database=False, schema=(not temporary)) }}\n    as (\n      {{ compiled_code }}\n    );\n  {%- elif language == 'python' -%}\n    {{ py_write_table(temporary=temporary, relation=relation, compiled_code=compiled_code) }}\n  {%- else -%}\n      {% do exceptions.raise_compiler_error(\"duckdb__create_table_as macro didn't get supported language, it got %s\" % language) %}\n  {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.py_write_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1254067, "supported_languages": null}, "macro.dbt_duckdb.py_write_table": {"unique_id": "macro.dbt_duckdb.py_write_table", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "py_write_table", "macro_sql": "{% macro py_write_table(temporary, relation, compiled_code) -%}\n{{ compiled_code }}\n\ndef materialize(df, con):\n    # For the DuckDBPyRelation checks\n    import duckdb\n\n    # make sure pandas exists before using it\n    try:\n        import pandas\n        pandas_available = True\n    except ImportError:\n        pandas_available = False\n\n    # make sure pyarrow exists before using it\n    try:\n        import pyarrow\n        pyarrow_available = True\n    except ImportError:\n        pyarrow_available = False\n\n    if isinstance(df, duckdb.DuckDBPyRelation):\n        if pandas_available:\n            df = df.df()\n        elif pyarrow_available:\n            df = df.arrow()\n        else:\n            raise Exception(\"No pandas or pyarrow available to materialize DuckDBPyRelation\")\n    elif not (isinstance(df, pandas.DataFrame) or isinstance(df, pyarrow.Table)):\n        raise Exception( str(type(df)) + \" is not a supported type for dbt Python materialization\")\n\n    con.execute('create table {{ relation.include(database=False) }} as select * from df')\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1254067, "supported_languages": null}, "macro.dbt_duckdb.duckdb__create_view_as": {"unique_id": "macro.dbt_duckdb.duckdb__create_view_as", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "duckdb__create_view_as", "macro_sql": "{% macro duckdb__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation.include(database=False) }} as (\n    {{ sql }}\n  );\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1254067, "supported_languages": null}, "macro.dbt_duckdb.duckdb__get_columns_in_relation": {"unique_id": "macro.dbt_duckdb.duckdb__get_columns_in_relation", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "duckdb__get_columns_in_relation", "macro_sql": "{% macro duckdb__get_columns_in_relation(relation) -%}\n  {% call statement('get_columns_in_relation', fetch_result=True) %}\n      select\n          column_name,\n          data_type,\n          character_maximum_length,\n          numeric_precision,\n          numeric_scale\n\n      from information_schema.columns\n      where table_name = '{{ relation.identifier }}'\n        {% if relation.schema %}\n        and table_schema = '{{ relation.schema }}'\n        {% endif %}\n      order by ordinal_position\n\n  {% endcall %}\n  {% set table = load_result('get_columns_in_relation').table %}\n  {{ return(sql_convert_columns_in_relation(table)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.sql_convert_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.126407, "supported_languages": null}, "macro.dbt_duckdb.duckdb__list_relations_without_caching": {"unique_id": "macro.dbt_duckdb.duckdb__list_relations_without_caching", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "duckdb__list_relations_without_caching", "macro_sql": "{% macro duckdb__list_relations_without_caching(schema_relation) %}\n  {% call statement('list_relations_without_caching', fetch_result=True) -%}\n    select\n      '{{ schema_relation.database }}' as database,\n      table_name as name,\n      table_schema as schema,\n      CASE table_type\n        WHEN 'BASE TABLE' THEN 'table'\n        WHEN 'VIEW' THEN 'view'\n        WHEN 'LOCAL TEMPORARY' THEN 'table'\n        END as type\n    from information_schema.tables\n    where table_schema = '{{ schema_relation.schema }}'\n  {% endcall %}\n  {{ return(load_result('list_relations_without_caching').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.127407, "supported_languages": null}, "macro.dbt_duckdb.duckdb__drop_relation": {"unique_id": "macro.dbt_duckdb.duckdb__drop_relation", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "duckdb__drop_relation", "macro_sql": "{% macro duckdb__drop_relation(relation) -%}\n  {% call statement('drop_relation', auto_begin=False) -%}\n    drop {{ relation.type }} if exists {{ relation.include(database=False) }} cascade\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.127407, "supported_languages": null}, "macro.dbt_duckdb.duckdb__truncate_relation": {"unique_id": "macro.dbt_duckdb.duckdb__truncate_relation", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "duckdb__truncate_relation", "macro_sql": "{% macro duckdb__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    DELETE FROM {{ relation.include(database=False) }} WHERE 1=1\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.128407, "supported_languages": null}, "macro.dbt_duckdb.duckdb__rename_relation": {"unique_id": "macro.dbt_duckdb.duckdb__rename_relation", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "duckdb__rename_relation", "macro_sql": "{% macro duckdb__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter {{ to_relation.type }} {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.128407, "supported_languages": null}, "macro.dbt_duckdb.duckdb__make_temp_relation": {"unique_id": "macro.dbt_duckdb.duckdb__make_temp_relation", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "duckdb__make_temp_relation", "macro_sql": "{% macro duckdb__make_temp_relation(base_relation, suffix) %}\n    {% set tmp_identifier = base_relation.identifier ~ suffix ~ py_current_timestring() %}\n    {% do return(base_relation.incorporate(\n                                  path={\n                                    \"identifier\": tmp_identifier,\n                                    \"schema\": none,\n                                    \"database\": none\n                                  })) -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.py_current_timestring"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1294074, "supported_languages": null}, "macro.dbt_duckdb.duckdb__current_timestamp": {"unique_id": "macro.dbt_duckdb.duckdb__current_timestamp", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "duckdb__current_timestamp", "macro_sql": "{% macro duckdb__current_timestamp() -%}\n  now()\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1294074, "supported_languages": null}, "macro.dbt_duckdb.duckdb__snapshot_string_as_time": {"unique_id": "macro.dbt_duckdb.duckdb__snapshot_string_as_time", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "duckdb__snapshot_string_as_time", "macro_sql": "{% macro duckdb__snapshot_string_as_time(timestamp) -%}\n    {%- set result = \"'\" ~ timestamp ~ \"'::timestamp\" -%}\n    {{ return(result) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1294074, "supported_languages": null}, "macro.dbt_duckdb.duckdb__snapshot_get_time": {"unique_id": "macro.dbt_duckdb.duckdb__snapshot_get_time", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "duckdb__snapshot_get_time", "macro_sql": "{% macro duckdb__snapshot_get_time() -%}\n  {{ current_timestamp() }}::timestamp\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.130407, "supported_languages": null}, "macro.dbt_duckdb.duckdb__get_incremental_default_sql": {"unique_id": "macro.dbt_duckdb.duckdb__get_incremental_default_sql", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "duckdb__get_incremental_default_sql", "macro_sql": "{% macro duckdb__get_incremental_default_sql(arg_dict) %}\n  {% do return(get_incremental_delete_insert_sql(arg_dict)) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_incremental_delete_insert_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.130407, "supported_languages": null}, "macro.dbt_duckdb.duckdb__get_incremental_delete_insert_sql": {"unique_id": "macro.dbt_duckdb.duckdb__get_incremental_delete_insert_sql", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "duckdb__get_incremental_delete_insert_sql", "macro_sql": "{% macro duckdb__get_incremental_delete_insert_sql(arg_dict) %}\n  {% do return(get_delete_insert_merge_sql(arg_dict[\"target_relation\"].include(database=False), arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"])) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.130407, "supported_languages": null}, "macro.dbt_duckdb.duckdb__get_incremental_append_sql": {"unique_id": "macro.dbt_duckdb.duckdb__get_incremental_append_sql", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "duckdb__get_incremental_append_sql", "macro_sql": "{% macro duckdb__get_incremental_append_sql(arg_dict) %}\n  {% do return(get_insert_into_sql(arg_dict[\"target_relation\"].include(database=False), arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"])) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_insert_into_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.131407, "supported_languages": null}, "macro.dbt_duckdb.location_exists": {"unique_id": "macro.dbt_duckdb.location_exists", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "location_exists", "macro_sql": "{% macro location_exists(location) -%}\n  {% do return(adapter.location_exists(location)) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.131407, "supported_languages": null}, "macro.dbt_duckdb.write_to_file": {"unique_id": "macro.dbt_duckdb.write_to_file", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "write_to_file", "macro_sql": "{% macro write_to_file(relation, location, format, delimiter=',') -%}\n  {% if format == 'parquet' %}\n    {% set copy_to %}\n      copy {{ relation }} to '{{ location }}' (FORMAT 'parquet');\n    {% endset %}\n\n  {% elif format == 'csv' %}\n    {% set copy_to %}\n      copy {{ relation }} to '{{ location }}' (HEADER 1, DELIMITER '{{ delimiter }}');\n    {% endset %}\n\n  {% else %}\n      {% do exceptions.raise_compiler_error(\"%s external format is not supported!\" % format) %}\n  {% endif %}\n\n  {% call statement('write_to_file') -%}\n    {{ copy_to }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1324067, "supported_languages": null}, "macro.dbt_duckdb.register_glue_table": {"unique_id": "macro.dbt_duckdb.register_glue_table", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "register_glue_table", "macro_sql": "{% macro register_glue_table(register, glue_database, relation, location, format) -%}\n  {% if location.startswith(\"s3://\") and register == true %}\n    {%- set column_list = adapter.get_columns_in_relation(relation) -%}\n    {% do adapter.register_glue_table(glue_database, relation.identifier, column_list, location, format) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1334069, "supported_languages": null}, "macro.dbt_duckdb.duckdb__get_catalog": {"unique_id": "macro.dbt_duckdb.duckdb__get_catalog", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\catalog.sql", "original_file_path": "macros\\catalog.sql", "name": "duckdb__get_catalog", "macro_sql": "{% macro duckdb__get_catalog(information_schema, schemas) -%}\n  {%- call statement('catalog', fetch_result=True) -%}\n    select\n        'main' as table_database,\n        t.table_schema,\n        t.table_name,\n        t.table_type,\n        '' as table_comment,\n        c.column_name,\n        c.ordinal_position as column_index,\n        c.data_type column_type,\n        '' as column_comment,\n        '' as table_owner\n    FROM information_schema.tables t JOIN information_schema.columns c ON t.table_schema = c.table_schema AND t.table_name = c.table_name\n    WHERE (\n        {%- for schema in schemas -%}\n          upper(t.table_schema) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n    )\n    AND t.table_type IN ('BASE TABLE', 'VIEW')\n    ORDER BY\n        t.table_schema,\n        t.table_name,\n        c.ordinal_position\n  {%- endcall -%}\n  {{ return(load_result('catalog').table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1344075, "supported_languages": null}, "macro.dbt_duckdb.duckdb_load_csv_rows": {"unique_id": "macro.dbt_duckdb.duckdb_load_csv_rows", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\seed.sql", "original_file_path": "macros\\seed.sql", "name": "duckdb_load_csv_rows", "macro_sql": "{% macro duckdb_load_csv_rows(model, batch_size, agate_table) %}\n    {% set agate_table = adapter.convert_datetimes_to_strs(agate_table) %}\n    {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n    {% set bindings = [] %}\n\n    {% set statements = [] %}\n\n    {% for chunk in agate_table.rows | batch(batch_size) %}\n        {% set bindings = [] %}\n\n        {% for row in chunk %}\n            {% do bindings.extend(row) %}\n        {% endfor %}\n\n        {% set sql %}\n            insert into {{ this.render() }} ({{ cols_sql }}) values\n            {% for row in chunk -%}\n                ({%- for column in agate_table.column_names -%}\n                    ?\n                    {%- if not loop.last%},{%- endif %}\n                {%- endfor -%})\n                {%- if not loop.last%},{%- endif %}\n            {%- endfor %}\n        {% endset %}\n\n        {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n        {% if loop.index0 == 0 %}\n            {% do statements.append(sql) %}\n        {% endif %}\n    {% endfor %}\n\n    {# Return SQL so we can render it out into the compiled files #}\n    {{ return(statements[0]) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_seed_column_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.13896, "supported_languages": null}, "macro.dbt_duckdb.duckdb__load_csv_rows": {"unique_id": "macro.dbt_duckdb.duckdb__load_csv_rows", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\seed.sql", "original_file_path": "macros\\seed.sql", "name": "duckdb__load_csv_rows", "macro_sql": "{% macro duckdb__load_csv_rows(model, agate_table) %}\n  {{ return(duckdb_load_csv_rows(model, 10000, agate_table) )}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb_load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1394367, "supported_languages": null}, "macro.dbt_duckdb.duckdb__snapshot_merge_sql": {"unique_id": "macro.dbt_duckdb.duckdb__snapshot_merge_sql", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\snapshot_merge.sql", "original_file_path": "macros\\snapshot_merge.sql", "name": "duckdb__snapshot_merge_sql", "macro_sql": "{% macro duckdb__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    {% set insert_sql %}\n    insert into {{ target }} ({{ insert_cols_csv }})\n    select {% for column in insert_cols -%}\n        DBT_INTERNAL_SOURCE.{{ column }} {%- if not loop.last %}, {%- endif %}\n    {%- endfor %}\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.dbt_change_type = 'insert';\n    {% endset %}\n\n    {% do adapter.add_query(insert_sql, auto_begin=False) %}\n\n    update {{ target }}\n    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.dbt_scd_id = {{ target.identifier }}.dbt_scd_id\n      and DBT_INTERNAL_SOURCE.dbt_change_type = 'update'\n      and {{ target.identifier }}.dbt_valid_to is null;\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1404366, "supported_languages": null}, "macro.dbt_duckdb.materialization_external_duckdb": {"unique_id": "macro.dbt_duckdb.materialization_external_duckdb", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\materializations\\external.sql", "original_file_path": "macros\\materializations\\external.sql", "name": "materialization_external_duckdb", "macro_sql": "{% materialization external, adapter=\"duckdb\", supported_languages=['sql', 'python'] %}\n\n  {%- set format = render(config.get('format', default='parquet')) -%}\n  {%- set location = render(config.get('location', default=external_location(format))) -%}\n  {%- set delimiter = render(config.get('delimiter', default=',')) -%}\n  {%- set glue_register = config.get('glue_register', default=false) -%}\n  {%- set glue_database = render(config.get('glue_database', default='default')) -%}\n\n  -- set language - python or sql\n  {%- set language = model['language'] -%}\n\n  {%- set target_relation = this.incorporate(type='view') %}\n\n  -- Continue as normal materialization\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set temp_relation =  make_intermediate_relation(this.incorporate(type='table'), suffix='__dbt_tmp') -%}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation, suffix='__dbt_int') -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_temp_relation = load_cached_relation(temp_relation) -%}\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_temp_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('create_table', language=language) -%}\n    {{- create_table_as(False, temp_relation, compiled_code, language) }}\n  {%- endcall %}\n\n  -- write an temp relation into file\n  {{ write_to_file(temp_relation, location, format, delimiter) }}\n  -- create a view on top of the location\n  {% call statement('main', language='sql') -%}\n    create or replace view {{ intermediate_relation.include(database=False) }} as (\n        select * from '{{ location }}'\n    );\n  {%- endcall %}\n\n  -- cleanup\n  {% if existing_relation is not none %}\n      {{ adapter.rename_relation(existing_relation, backup_relation) }}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n  {{ drop_relation_if_exists(temp_relation) }}\n\n  -- register table into glue\n  {% do register_glue_table(glue_register, glue_database, target_relation, location, format) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.external_location", "macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt_duckdb.write_to_file", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt_duckdb.register_glue_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1494067, "supported_languages": ["sql", "python"]}, "macro.dbt_duckdb.materialization_incremental_duckdb": {"unique_id": "macro.dbt_duckdb.materialization_incremental_duckdb", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\materializations\\incremental.sql", "original_file_path": "macros\\materializations\\incremental.sql", "name": "materialization_incremental_duckdb", "macro_sql": "{% materialization incremental, adapter=\"duckdb\", supported_languages=['sql', 'python'] -%}\n\n  {%- set language = model['language'] -%}\n\n  -- relations\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {%- set intermediate_relation = make_intermediate_relation(target_relation)-%}\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n\n  -- configs\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()  or existing_relation.is_view) -%}\n  {%- set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') -%}\n\n  -- the temp_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation)-%}\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n   -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {% if existing_relation is none %}\n    {% set build_sql = create_table_as(False, target_relation, compiled_code, language) %}\n  {% elif full_refresh_mode %}\n    {% set build_sql = create_table_as(False, intermediate_relation, compiled_code, language) %}\n    {% set need_swap = true %}\n  {% else %}\n    {% if language == 'python' %}\n      {% set build_python = create_table_as(False, temp_relation, compiled_code, language) %}\n      {% call statement(\"pre\", language=language) %}\n        {{- build_python }}\n      {% endcall %}\n    {% else %} {# SQL #}\n      {% do run_query(create_table_as(True, temp_relation, compiled_code, language)) %}\n    {% endif %}\n    {% do adapter.expand_target_column_types(\n             from_relation=temp_relation,\n             to_relation=target_relation) %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, temp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n\n    {#-- Get the incremental_strategy, the macro to use for the strategy, and build the sql --#}\n    {% set incremental_strategy = config.get('incremental_strategy') or 'default' %}\n    {% set incremental_predicates = config.get('incremental_predicates', none) %}\n    {% set strategy_sql_macro_func = adapter.get_incremental_strategy_macro(context, incremental_strategy) %}\n    {% set strategy_arg_dict = ({'target_relation': target_relation, 'temp_relation': temp_relation, 'unique_key': unique_key, 'dest_columns': dest_columns, 'predicates': incremental_predicates }) %}\n    {% set build_sql = strategy_sql_macro_func(strategy_arg_dict) %}\n    {% set language = \"sql\" %}\n\n  {% endif %}\n\n  {% call statement(\"main\", language=language) %}\n      {{- build_sql }}\n  {% endcall %}\n\n  {% if need_swap %}\n      {% do adapter.rename_relation(target_relation, backup_relation) %}\n      {% do adapter.rename_relation(intermediate_relation, target_relation) %}\n      {% do to_drop.append(backup_relation) %}\n  {% endif %}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_temp_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.statement", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.158407, "supported_languages": ["sql", "python"]}, "macro.dbt_duckdb.materialization_table_duckdb": {"unique_id": "macro.dbt_duckdb.materialization_table_duckdb", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\materializations\\table.sql", "original_file_path": "macros\\materializations\\table.sql", "name": "materialization_table_duckdb", "macro_sql": "{% materialization table, adapter=\"duckdb\", supported_languages=['sql', 'python'] %}\n\n  {%- set language = model['language'] -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') %}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main', language=language) -%}\n    {{- create_table_as(False, intermediate_relation, compiled_code, language) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if existing_relation is not none %}\n      {{ adapter.rename_relation(existing_relation, backup_relation) }}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.create_indexes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1634357, "supported_languages": ["sql", "python"]}, "macro.dbt_duckdb.duckdb__any_value": {"unique_id": "macro.dbt_duckdb.duckdb__any_value", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\utils\\any_value.sql", "original_file_path": "macros\\utils\\any_value.sql", "name": "duckdb__any_value", "macro_sql": "{% macro duckdb__any_value(expression) -%}\n\n    arbitrary({{ expression }})\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1644368, "supported_languages": null}, "macro.dbt_duckdb.duckdb__dateadd": {"unique_id": "macro.dbt_duckdb.duckdb__dateadd", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\utils\\dateadd.sql", "original_file_path": "macros\\utils\\dateadd.sql", "name": "duckdb__dateadd", "macro_sql": "{% macro duckdb__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    {{ from_date_or_timestamp }} + ((interval '1 {{ datepart }}') * ({{ interval }}))\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1644368, "supported_languages": null}, "macro.dbt_duckdb.duckdb__datediff": {"unique_id": "macro.dbt_duckdb.duckdb__datediff", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\utils\\datediff.sql", "original_file_path": "macros\\utils\\datediff.sql", "name": "duckdb__datediff", "macro_sql": "{% macro duckdb__datediff(first_date, second_date, datepart) -%}\n\n    {% if datepart == 'year' %}\n        (date_part('year', ({{second_date}})::date) - date_part('year', ({{first_date}})::date))\n    {% elif datepart == 'quarter' %}\n        ({{ datediff(first_date, second_date, 'year') }} * 4 + date_part('quarter', ({{second_date}})::date) - date_part('quarter', ({{first_date}})::date))\n    {% elif datepart == 'month' %}\n        ({{ datediff(first_date, second_date, 'year') }} * 12 + date_part('month', ({{second_date}})::date) - date_part('month', ({{first_date}})::date))\n    {% elif datepart == 'day' %}\n        (({{second_date}})::date - ({{first_date}})::date)\n    {% elif datepart == 'week' %}\n        ({{ datediff(first_date, second_date, 'day') }} / 7 + case\n            when date_part('dow', ({{first_date}})::timestamp) <= date_part('dow', ({{second_date}})::timestamp) then\n                case when {{first_date}} <= {{second_date}} then 0 else -1 end\n            else\n                case when {{first_date}} <= {{second_date}} then 1 else 0 end\n        end)\n    {% elif datepart == 'hour' %}\n        ({{ datediff(first_date, second_date, 'day') }} * 24 + date_part('hour', ({{second_date}})::timestamp) - date_part('hour', ({{first_date}})::timestamp))\n    {% elif datepart == 'minute' %}\n        ({{ datediff(first_date, second_date, 'hour') }} * 60 + date_part('minute', ({{second_date}})::timestamp) - date_part('minute', ({{first_date}})::timestamp))\n    {% elif datepart == 'second' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60 + floor(date_part('second', ({{second_date}})::timestamp)) - floor(date_part('second', ({{first_date}})::timestamp)))\n    {% elif datepart == 'millisecond' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60000 + floor(date_part('millisecond', ({{second_date}})::timestamp)) - floor(date_part('millisecond', ({{first_date}})::timestamp)))\n    {% elif datepart == 'microsecond' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60000000 + floor(date_part('microsecond', ({{second_date}})::timestamp)) - floor(date_part('microsecond', ({{first_date}})::timestamp)))\n    {% else %}\n        {{ exceptions.raise_compiler_error(\"Unsupported datepart for macro datediff in postgres: {!r}\".format(datepart)) }}\n    {% endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.169444, "supported_languages": null}, "macro.dbt_duckdb.external_location": {"unique_id": "macro.dbt_duckdb.external_location", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\utils\\external_location.sql", "original_file_path": "macros\\utils\\external_location.sql", "name": "external_location", "macro_sql": "{%- macro external_location(format) -%}\n  {{- adapter.external_root() }}/{{ this.identifier }}.{{ format }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1704078, "supported_languages": null}, "macro.dbt_duckdb.duckdb__last_day": {"unique_id": "macro.dbt_duckdb.duckdb__last_day", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\utils\\lastday.sql", "original_file_path": "macros\\utils\\lastday.sql", "name": "duckdb__last_day", "macro_sql": "{% macro duckdb__last_day(date, datepart) -%}\n\n    {%- if datepart == 'quarter' -%}\n    -- duckdb dateadd does not support quarter interval.\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd('month', '3', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n    {%- else -%}\n    {{dbt.default_last_day(date, datepart)}}\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc", "macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1714084, "supported_languages": null}, "macro.dbt_duckdb.duckdb__listagg": {"unique_id": "macro.dbt_duckdb.duckdb__listagg", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\utils\\listagg.sql", "original_file_path": "macros\\utils\\listagg.sql", "name": "duckdb__listagg", "macro_sql": "{% macro duckdb__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n        regexp_replace(\n          trim(cast(\n            (array_agg(\n              {{ measure }}\n              {% if order_by_clause -%}\n              {{ order_by_clause }}\n              {%- endif %}\n            )[1:{{ limit_num }}])\n            as string), '[]'),\n        ', ',\n        {{ delimiter_text }},\n        'g')\n    {%- else %}\n    string_agg(\n        {{ measure }},\n        {{ delimiter_text }}\n        {% if order_by_clause -%}\n        {{ order_by_clause }}\n        {%- endif %}\n        )\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1724074, "supported_languages": null}, "macro.dbt_duckdb.duckdb__split_part": {"unique_id": "macro.dbt_duckdb.duckdb__split_part", "package_name": "dbt_duckdb", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\duckdb", "path": "macros\\utils\\splitpart.sql", "original_file_path": "macros\\utils\\splitpart.sql", "name": "duckdb__split_part", "macro_sql": "{% macro duckdb__split_part(string_text, delimiter_text, part_number) %}\n\n  {% if part_number >= 0 %}\n    coalesce(string_split({{ string_text }}, {{ delimiter_text }})[ {{ part_number }} ], '')\n  {% else %}\n    {{ dbt._split_part_negative(string_text, delimiter_text, part_number) }}\n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt._split_part_negative"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.173407, "supported_languages": null}, "macro.dbt.copy_grants": {"unique_id": "macro.dbt.copy_grants", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "name": "copy_grants", "macro_sql": "{% macro copy_grants() %}\n    {{ return(adapter.dispatch('copy_grants', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1764388, "supported_languages": null}, "macro.dbt.default__copy_grants": {"unique_id": "macro.dbt.default__copy_grants", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "name": "default__copy_grants", "macro_sql": "{% macro default__copy_grants() %}\n    {{ return(True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1764388, "supported_languages": null}, "macro.dbt.support_multiple_grantees_per_dcl_statement": {"unique_id": "macro.dbt.support_multiple_grantees_per_dcl_statement", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "name": "support_multiple_grantees_per_dcl_statement", "macro_sql": "{% macro support_multiple_grantees_per_dcl_statement() %}\n    {{ return(adapter.dispatch('support_multiple_grantees_per_dcl_statement', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1764388, "supported_languages": null}, "macro.dbt.default__support_multiple_grantees_per_dcl_statement": {"unique_id": "macro.dbt.default__support_multiple_grantees_per_dcl_statement", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "name": "default__support_multiple_grantees_per_dcl_statement", "macro_sql": "\n\n{%- macro default__support_multiple_grantees_per_dcl_statement() -%}\n    {{ return(True) }}\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.177437, "supported_languages": null}, "macro.dbt.should_revoke": {"unique_id": "macro.dbt.should_revoke", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "name": "should_revoke", "macro_sql": "{% macro should_revoke(existing_relation, full_refresh_mode=True) %}\n\n    {% if not existing_relation %}\n        {#-- The table doesn't already exist, so no grants to copy over --#}\n        {{ return(False) }}\n    {% elif full_refresh_mode %}\n        {#-- The object is being REPLACED -- whether grants are copied over depends on the value of user config --#}\n        {{ return(copy_grants()) }}\n    {% else %}\n        {#-- The table is being merged/upserted/inserted -- grants will be carried over --#}\n        {{ return(True) }}\n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.177437, "supported_languages": null}, "macro.dbt.get_show_grant_sql": {"unique_id": "macro.dbt.get_show_grant_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "name": "get_show_grant_sql", "macro_sql": "{% macro get_show_grant_sql(relation) %}\n    {{ return(adapter.dispatch(\"get_show_grant_sql\", \"dbt\")(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_show_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1784363, "supported_languages": null}, "macro.dbt.default__get_show_grant_sql": {"unique_id": "macro.dbt.default__get_show_grant_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "name": "default__get_show_grant_sql", "macro_sql": "{% macro default__get_show_grant_sql(relation) %}\n    show grants on {{ relation }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1784363, "supported_languages": null}, "macro.dbt.get_grant_sql": {"unique_id": "macro.dbt.get_grant_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "name": "get_grant_sql", "macro_sql": "{% macro get_grant_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_grant_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1784363, "supported_languages": null}, "macro.dbt.default__get_grant_sql": {"unique_id": "macro.dbt.default__get_grant_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "name": "default__get_grant_sql", "macro_sql": "\n\n{%- macro default__get_grant_sql(relation, privilege, grantees) -%}\n    grant {{ privilege }} on {{ relation }} to {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1784363, "supported_languages": null}, "macro.dbt.get_revoke_sql": {"unique_id": "macro.dbt.get_revoke_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "name": "get_revoke_sql", "macro_sql": "{% macro get_revoke_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_revoke_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_revoke_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1794357, "supported_languages": null}, "macro.dbt.default__get_revoke_sql": {"unique_id": "macro.dbt.default__get_revoke_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "name": "default__get_revoke_sql", "macro_sql": "\n\n{%- macro default__get_revoke_sql(relation, privilege, grantees) -%}\n    revoke {{ privilege }} on {{ relation }} from {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1794357, "supported_languages": null}, "macro.dbt.get_dcl_statement_list": {"unique_id": "macro.dbt.get_dcl_statement_list", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "name": "get_dcl_statement_list", "macro_sql": "{% macro get_dcl_statement_list(relation, grant_config, get_dcl_macro) %}\n    {{ return(adapter.dispatch('get_dcl_statement_list', 'dbt')(relation, grant_config, get_dcl_macro)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_dcl_statement_list"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1804361, "supported_languages": null}, "macro.dbt.default__get_dcl_statement_list": {"unique_id": "macro.dbt.default__get_dcl_statement_list", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "name": "default__get_dcl_statement_list", "macro_sql": "\n\n{%- macro default__get_dcl_statement_list(relation, grant_config, get_dcl_macro) -%}\n    {#\n      -- Unpack grant_config into specific privileges and the set of users who need them granted/revoked.\n      -- Depending on whether this database supports multiple grantees per statement, pass in the list of\n      -- all grantees per privilege, or (if not) template one statement per privilege-grantee pair.\n      -- `get_dcl_macro` will be either `get_grant_sql` or `get_revoke_sql`\n    #}\n    {%- set dcl_statements = [] -%}\n    {%- for privilege, grantees in grant_config.items() %}\n        {%- if support_multiple_grantees_per_dcl_statement() and grantees -%}\n          {%- set dcl = get_dcl_macro(relation, privilege, grantees) -%}\n          {%- do dcl_statements.append(dcl) -%}\n        {%- else -%}\n          {%- for grantee in grantees -%}\n              {% set dcl = get_dcl_macro(relation, privilege, [grantee]) %}\n              {%- do dcl_statements.append(dcl) -%}\n          {% endfor -%}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return(dcl_statements) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1814363, "supported_languages": null}, "macro.dbt.call_dcl_statements": {"unique_id": "macro.dbt.call_dcl_statements", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "name": "call_dcl_statements", "macro_sql": "{% macro call_dcl_statements(dcl_statement_list) %}\n    {{ return(adapter.dispatch(\"call_dcl_statements\", \"dbt\")(dcl_statement_list)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1814363, "supported_languages": null}, "macro.dbt.default__call_dcl_statements": {"unique_id": "macro.dbt.default__call_dcl_statements", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "name": "default__call_dcl_statements", "macro_sql": "{% macro default__call_dcl_statements(dcl_statement_list) %}\n    {#\n      -- By default, supply all grant + revoke statements in a single semicolon-separated block,\n      -- so that they're all processed together.\n\n      -- Some databases do not support this. Those adapters will need to override this macro\n      -- to run each statement individually.\n    #}\n    {% call statement('grants') %}\n        {% for dcl_statement in dcl_statement_list %}\n            {{ dcl_statement }};\n        {% endfor %}\n    {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1824365, "supported_languages": null}, "macro.dbt.apply_grants": {"unique_id": "macro.dbt.apply_grants", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "name": "apply_grants", "macro_sql": "{% macro apply_grants(relation, grant_config, should_revoke) %}\n    {{ return(adapter.dispatch(\"apply_grants\", \"dbt\")(relation, grant_config, should_revoke)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1824365, "supported_languages": null}, "macro.dbt.default__apply_grants": {"unique_id": "macro.dbt.default__apply_grants", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "name": "default__apply_grants", "macro_sql": "{% macro default__apply_grants(relation, grant_config, should_revoke=True) %}\n    {#-- If grant_config is {} or None, this is a no-op --#}\n    {% if grant_config %}\n        {% if should_revoke %}\n            {#-- We think previous grants may have carried over --#}\n            {#-- Show current grants and calculate diffs --#}\n            {% set current_grants_table = run_query(get_show_grant_sql(relation)) %}\n            {% set current_grants_dict = adapter.standardize_grants_dict(current_grants_table) %}\n            {% set needs_granting = diff_of_two_dicts(grant_config, current_grants_dict) %}\n            {% set needs_revoking = diff_of_two_dicts(current_grants_dict, grant_config) %}\n            {% if not (needs_granting or needs_revoking) %}\n                {{ log('On ' ~ relation ~': All grants are in place, no revocation or granting needed.')}}\n            {% endif %}\n        {% else %}\n            {#-- We don't think there's any chance of previous grants having carried over. --#}\n            {#-- Jump straight to granting what the user has configured. --#}\n            {% set needs_revoking = {} %}\n            {% set needs_granting = grant_config %}\n        {% endif %}\n        {% if needs_granting or needs_revoking %}\n            {% set revoke_statement_list = get_dcl_statement_list(relation, needs_revoking, get_revoke_sql) %}\n            {% set grant_statement_list = get_dcl_statement_list(relation, needs_granting, get_grant_sql) %}\n            {% set dcl_statement_list = revoke_statement_list + grant_statement_list %}\n            {% if dcl_statement_list %}\n                {{ call_dcl_statements(dcl_statement_list) }}\n            {% endif %}\n        {% endif %}\n    {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.get_show_grant_sql", "macro.dbt.get_dcl_statement_list", "macro.dbt.call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1844363, "supported_languages": null}, "macro.dbt.get_columns_in_relation": {"unique_id": "macro.dbt.get_columns_in_relation", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "name": "get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.187409, "supported_languages": null}, "macro.dbt.default__get_columns_in_relation": {"unique_id": "macro.dbt.default__get_columns_in_relation", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "name": "default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.187409, "supported_languages": null}, "macro.dbt.sql_convert_columns_in_relation": {"unique_id": "macro.dbt.sql_convert_columns_in_relation", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "name": "sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.187409, "supported_languages": null}, "macro.dbt.get_columns_in_query": {"unique_id": "macro.dbt.get_columns_in_query", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "name": "get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1884105, "supported_languages": null}, "macro.dbt.default__get_columns_in_query": {"unique_id": "macro.dbt.default__get_columns_in_query", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "name": "default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        select * from (\n            {{ select_sql }}\n        ) as __dbt_sbq\n        where false\n        limit 0\n    {% endcall %}\n\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1884105, "supported_languages": null}, "macro.dbt.alter_column_type": {"unique_id": "macro.dbt.alter_column_type", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "name": "alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1894374, "supported_languages": null}, "macro.dbt.default__alter_column_type": {"unique_id": "macro.dbt.default__alter_column_type", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "name": "default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1904073, "supported_languages": null}, "macro.dbt.alter_relation_add_remove_columns": {"unique_id": "macro.dbt.alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "name": "alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1904073, "supported_languages": null}, "macro.dbt.default__alter_relation_add_remove_columns": {"unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "name": "default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation }}\n\n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if add_columns and remove_columns }}\n\n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n\n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1924417, "supported_languages": null}, "macro.dbt.collect_freshness": {"unique_id": "macro.dbt.collect_freshness", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\freshness.sql", "original_file_path": "macros\\adapters\\freshness.sql", "name": "collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1934364, "supported_languages": null}, "macro.dbt.default__collect_freshness": {"unique_id": "macro.dbt.default__collect_freshness", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\freshness.sql", "original_file_path": "macros\\adapters\\freshness.sql", "name": "default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1934364, "supported_languages": null}, "macro.dbt.get_create_index_sql": {"unique_id": "macro.dbt.get_create_index_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\indexes.sql", "original_file_path": "macros\\adapters\\indexes.sql", "name": "get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.194436, "supported_languages": null}, "macro.dbt.default__get_create_index_sql": {"unique_id": "macro.dbt.default__get_create_index_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\indexes.sql", "original_file_path": "macros\\adapters\\indexes.sql", "name": "default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1954367, "supported_languages": null}, "macro.dbt.create_indexes": {"unique_id": "macro.dbt.create_indexes", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\indexes.sql", "original_file_path": "macros\\adapters\\indexes.sql", "name": "create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1954367, "supported_languages": null}, "macro.dbt.default__create_indexes": {"unique_id": "macro.dbt.default__create_indexes", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\indexes.sql", "original_file_path": "macros\\adapters\\indexes.sql", "name": "default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1964364, "supported_languages": null}, "macro.dbt.get_catalog": {"unique_id": "macro.dbt.get_catalog", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "name": "get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.198432, "supported_languages": null}, "macro.dbt.default__get_catalog": {"unique_id": "macro.dbt.default__get_catalog", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "name": "default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1994307, "supported_languages": null}, "macro.dbt.information_schema_name": {"unique_id": "macro.dbt.information_schema_name", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "name": "information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1994307, "supported_languages": null}, "macro.dbt.default__information_schema_name": {"unique_id": "macro.dbt.default__information_schema_name", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "name": "default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1994307, "supported_languages": null}, "macro.dbt.list_schemas": {"unique_id": "macro.dbt.list_schemas", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "name": "list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.1994307, "supported_languages": null}, "macro.dbt.default__list_schemas": {"unique_id": "macro.dbt.default__list_schemas", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "name": "default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2004306, "supported_languages": null}, "macro.dbt.check_schema_exists": {"unique_id": "macro.dbt.check_schema_exists", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "name": "check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2004306, "supported_languages": null}, "macro.dbt.default__check_schema_exists": {"unique_id": "macro.dbt.default__check_schema_exists", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "name": "default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2014306, "supported_languages": null}, "macro.dbt.list_relations_without_caching": {"unique_id": "macro.dbt.list_relations_without_caching", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "name": "list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2014306, "supported_languages": null}, "macro.dbt.default__list_relations_without_caching": {"unique_id": "macro.dbt.default__list_relations_without_caching", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "name": "default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2014306, "supported_languages": null}, "macro.dbt.alter_column_comment": {"unique_id": "macro.dbt.alter_column_comment", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "name": "alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2034361, "supported_languages": null}, "macro.dbt.default__alter_column_comment": {"unique_id": "macro.dbt.default__alter_column_comment", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "name": "default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2034361, "supported_languages": null}, "macro.dbt.alter_relation_comment": {"unique_id": "macro.dbt.alter_relation_comment", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "name": "alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2034361, "supported_languages": null}, "macro.dbt.default__alter_relation_comment": {"unique_id": "macro.dbt.default__alter_relation_comment", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "name": "default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2044098, "supported_languages": null}, "macro.dbt.persist_docs": {"unique_id": "macro.dbt.persist_docs", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "name": "persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2044098, "supported_languages": null}, "macro.dbt.default__persist_docs": {"unique_id": "macro.dbt.default__persist_docs", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "name": "default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2054365, "supported_languages": null}, "macro.dbt.make_intermediate_relation": {"unique_id": "macro.dbt.make_intermediate_relation", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "make_intermediate_relation", "macro_sql": "{% macro make_intermediate_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_intermediate_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__make_intermediate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.210407, "supported_languages": null}, "macro.dbt.default__make_intermediate_relation": {"unique_id": "macro.dbt.default__make_intermediate_relation", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "default__make_intermediate_relation", "macro_sql": "{% macro default__make_intermediate_relation(base_relation, suffix) %}\n    {{ return(default__make_temp_relation(base_relation, suffix)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.210407, "supported_languages": null}, "macro.dbt.make_temp_relation": {"unique_id": "macro.dbt.make_temp_relation", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2114363, "supported_languages": null}, "macro.dbt.default__make_temp_relation": {"unique_id": "macro.dbt.default__make_temp_relation", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {%- set temp_identifier = base_relation.identifier ~ suffix -%}\n    {%- set temp_relation = base_relation.incorporate(\n                                path={\"identifier\": temp_identifier}) -%}\n\n    {{ return(temp_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2114363, "supported_languages": null}, "macro.dbt.make_backup_relation": {"unique_id": "macro.dbt.make_backup_relation", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "make_backup_relation", "macro_sql": "{% macro make_backup_relation(base_relation, backup_relation_type, suffix='__dbt_backup') %}\n    {{ return(adapter.dispatch('make_backup_relation', 'dbt')(base_relation, backup_relation_type, suffix)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__make_backup_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.212444, "supported_languages": null}, "macro.dbt.default__make_backup_relation": {"unique_id": "macro.dbt.default__make_backup_relation", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "default__make_backup_relation", "macro_sql": "{% macro default__make_backup_relation(base_relation, backup_relation_type, suffix) %}\n    {%- set backup_identifier = base_relation.identifier ~ suffix -%}\n    {%- set backup_relation = base_relation.incorporate(\n                                  path={\"identifier\": backup_identifier},\n                                  type=backup_relation_type\n    ) -%}\n    {{ return(backup_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.212444, "supported_languages": null}, "macro.dbt.drop_relation": {"unique_id": "macro.dbt.drop_relation", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n  {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.212444, "supported_languages": null}, "macro.dbt.default__drop_relation": {"unique_id": "macro.dbt.default__drop_relation", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n  {% call statement('drop_relation', auto_begin=False) -%}\n    drop {{ relation.type }} if exists {{ relation }} cascade\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2134366, "supported_languages": null}, "macro.dbt.truncate_relation": {"unique_id": "macro.dbt.truncate_relation", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2134366, "supported_languages": null}, "macro.dbt.default__truncate_relation": {"unique_id": "macro.dbt.default__truncate_relation", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.214436, "supported_languages": null}, "macro.dbt.rename_relation": {"unique_id": "macro.dbt.rename_relation", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.214436, "supported_languages": null}, "macro.dbt.default__rename_relation": {"unique_id": "macro.dbt.default__rename_relation", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2154362, "supported_languages": null}, "macro.dbt.get_or_create_relation": {"unique_id": "macro.dbt.get_or_create_relation", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) -%}\n  {{ return(adapter.dispatch('get_or_create_relation', 'dbt')(database, schema, identifier, type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_or_create_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2154362, "supported_languages": null}, "macro.dbt.default__get_or_create_relation": {"unique_id": "macro.dbt.default__get_or_create_relation", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "default__get_or_create_relation", "macro_sql": "{% macro default__get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2164414, "supported_languages": null}, "macro.dbt.load_cached_relation": {"unique_id": "macro.dbt.load_cached_relation", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "load_cached_relation", "macro_sql": "{% macro load_cached_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2164414, "supported_languages": null}, "macro.dbt.load_relation": {"unique_id": "macro.dbt.load_relation", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "load_relation", "macro_sql": "{% macro load_relation(relation) %}\n    {{ return(load_cached_relation(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_cached_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2174358, "supported_languages": null}, "macro.dbt.drop_relation_if_exists": {"unique_id": "macro.dbt.drop_relation_if_exists", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "name": "drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2174358, "supported_languages": null}, "macro.dbt.create_schema": {"unique_id": "macro.dbt.create_schema", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\schema.sql", "original_file_path": "macros\\adapters\\schema.sql", "name": "create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.218436, "supported_languages": null}, "macro.dbt.default__create_schema": {"unique_id": "macro.dbt.default__create_schema", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\schema.sql", "original_file_path": "macros\\adapters\\schema.sql", "name": "default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.218436, "supported_languages": null}, "macro.dbt.drop_schema": {"unique_id": "macro.dbt.drop_schema", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\schema.sql", "original_file_path": "macros\\adapters\\schema.sql", "name": "drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2194438, "supported_languages": null}, "macro.dbt.default__drop_schema": {"unique_id": "macro.dbt.default__drop_schema", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\schema.sql", "original_file_path": "macros\\adapters\\schema.sql", "name": "default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2194438, "supported_languages": null}, "macro.dbt.current_timestamp": {"unique_id": "macro.dbt.current_timestamp", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "name": "current_timestamp", "macro_sql": "{%- macro current_timestamp() -%}\n    {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2204363, "supported_languages": null}, "macro.dbt.default__current_timestamp": {"unique_id": "macro.dbt.default__current_timestamp", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "name": "default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter ' + adapter.type()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2204363, "supported_languages": null}, "macro.dbt.snapshot_get_time": {"unique_id": "macro.dbt.snapshot_get_time", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "name": "snapshot_get_time", "macro_sql": "\n\n{%- macro snapshot_get_time() -%}\n    {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2214453, "supported_languages": null}, "macro.dbt.default__snapshot_get_time": {"unique_id": "macro.dbt.default__snapshot_get_time", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "name": "default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() %}\n    {{ current_timestamp() }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2214453, "supported_languages": null}, "macro.dbt.current_timestamp_backcompat": {"unique_id": "macro.dbt.current_timestamp_backcompat", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "name": "current_timestamp_backcompat", "macro_sql": "{% macro current_timestamp_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2214453, "supported_languages": null}, "macro.dbt.default__current_timestamp_backcompat": {"unique_id": "macro.dbt.default__current_timestamp_backcompat", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "name": "default__current_timestamp_backcompat", "macro_sql": "{% macro default__current_timestamp_backcompat() %}\n    current_timestamp::timestamp\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2214453, "supported_languages": null}, "macro.dbt.current_timestamp_in_utc_backcompat": {"unique_id": "macro.dbt.current_timestamp_in_utc_backcompat", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "name": "current_timestamp_in_utc_backcompat", "macro_sql": "{% macro current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_in_utc_backcompat', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__current_timestamp_in_utc_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2224083, "supported_languages": null}, "macro.dbt.default__current_timestamp_in_utc_backcompat": {"unique_id": "macro.dbt.default__current_timestamp_in_utc_backcompat", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "name": "default__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro default__current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.current_timestamp_backcompat", "macro.dbt.default__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2224083, "supported_languages": null}, "macro.dbt.convert_datetime": {"unique_id": "macro.dbt.convert_datetime", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\datetime.sql", "original_file_path": "macros\\etc\\datetime.sql", "name": "convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.225437, "supported_languages": null}, "macro.dbt.dates_in_range": {"unique_id": "macro.dbt.dates_in_range", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\datetime.sql", "original_file_path": "macros\\etc\\datetime.sql", "name": "dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partiton start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2274365, "supported_languages": null}, "macro.dbt.partition_range": {"unique_id": "macro.dbt.partition_range", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\datetime.sql", "original_file_path": "macros\\etc\\datetime.sql", "name": "partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2284372, "supported_languages": null}, "macro.dbt.py_current_timestring": {"unique_id": "macro.dbt.py_current_timestring", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\datetime.sql", "original_file_path": "macros\\etc\\datetime.sql", "name": "py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2294364, "supported_languages": null}, "macro.dbt.statement": {"unique_id": "macro.dbt.statement", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\statement.sql", "original_file_path": "macros\\etc\\statement.sql", "name": "statement", "macro_sql": "\n{%- macro statement(name=None, fetch_result=False, auto_begin=True, language='sql') -%}\n  {%- if execute: -%}\n    {%- set compiled_code = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime {} for node \"{}\"'.format(language, model['unique_id'])) }}\n      {{ write(compiled_code) }}\n    {%- endif -%}\n    {%- if language == 'sql'-%}\n      {%- set res, table = adapter.execute(compiled_code, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- elif language == 'python' -%}\n      {%- set res = submit_python_job(model, compiled_code) -%}\n      {#-- TODO: What should table be for python models? --#}\n      {%- set table = None -%}\n    {%- else -%}\n      {% do exceptions.raise_compiler_error(\"statement macro didn't get supported language\") %}\n    {%- endif -%}\n\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.231436, "supported_languages": null}, "macro.dbt.noop_statement": {"unique_id": "macro.dbt.noop_statement", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\statement.sql", "original_file_path": "macros\\etc\\statement.sql", "name": "noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.232436, "supported_languages": null}, "macro.dbt.run_query": {"unique_id": "macro.dbt.run_query", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\statement.sql", "original_file_path": "macros\\etc\\statement.sql", "name": "run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2334387, "supported_languages": null}, "macro.dbt.default__test_accepted_values": {"unique_id": "macro.dbt.default__test_accepted_values", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\generic_test_sql\\accepted_values.sql", "original_file_path": "macros\\generic_test_sql\\accepted_values.sql", "name": "default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2344363, "supported_languages": null}, "macro.dbt.default__test_not_null": {"unique_id": "macro.dbt.default__test_not_null", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\generic_test_sql\\not_null.sql", "original_file_path": "macros\\generic_test_sql\\not_null.sql", "name": "default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else column_name %}\n\nselect {{ column_list }}\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.235436, "supported_languages": null}, "macro.dbt.default__test_relationships": {"unique_id": "macro.dbt.default__test_relationships", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\generic_test_sql\\relationships.sql", "original_file_path": "macros\\generic_test_sql\\relationships.sql", "name": "default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.236436, "supported_languages": null}, "macro.dbt.default__test_unique": {"unique_id": "macro.dbt.default__test_unique", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\generic_test_sql\\unique.sql", "original_file_path": "macros\\generic_test_sql\\unique.sql", "name": "default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.236436, "supported_languages": null}, "macro.dbt.generate_alias_name": {"unique_id": "macro.dbt.generate_alias_name", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\get_custom_name\\get_custom_alias.sql", "original_file_path": "macros\\get_custom_name\\get_custom_alias.sql", "name": "generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2374074, "supported_languages": null}, "macro.dbt.default__generate_alias_name": {"unique_id": "macro.dbt.default__generate_alias_name", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\get_custom_name\\get_custom_alias.sql", "original_file_path": "macros\\get_custom_name\\get_custom_alias.sql", "name": "default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name is none -%}\n\n        {{ node.name }}\n\n    {%- else -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2384455, "supported_languages": null}, "macro.dbt.generate_database_name": {"unique_id": "macro.dbt.generate_database_name", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\get_custom_name\\get_custom_database.sql", "original_file_path": "macros\\get_custom_name\\get_custom_database.sql", "name": "generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2394357, "supported_languages": null}, "macro.dbt.default__generate_database_name": {"unique_id": "macro.dbt.default__generate_database_name", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\get_custom_name\\get_custom_database.sql", "original_file_path": "macros\\get_custom_name\\get_custom_database.sql", "name": "default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2394357, "supported_languages": null}, "macro.dbt.generate_schema_name": {"unique_id": "macro.dbt.generate_schema_name", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\get_custom_name\\get_custom_schema.sql", "original_file_path": "macros\\get_custom_name\\get_custom_schema.sql", "name": "generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name=none, node=none) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2404075, "supported_languages": null}, "macro.dbt.default__generate_schema_name": {"unique_id": "macro.dbt.default__generate_schema_name", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\get_custom_name\\get_custom_schema.sql", "original_file_path": "macros\\get_custom_name\\get_custom_schema.sql", "name": "default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2414384, "supported_languages": null}, "macro.dbt.generate_schema_name_for_env": {"unique_id": "macro.dbt.generate_schema_name_for_env", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\get_custom_name\\get_custom_schema.sql", "original_file_path": "macros\\get_custom_name\\get_custom_schema.sql", "name": "generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2414384, "supported_languages": null}, "macro.dbt.set_sql_header": {"unique_id": "macro.dbt.set_sql_header", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\configs.sql", "original_file_path": "macros\\materializations\\configs.sql", "name": "set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2424083, "supported_languages": null}, "macro.dbt.should_full_refresh": {"unique_id": "macro.dbt.should_full_refresh", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\configs.sql", "original_file_path": "macros\\materializations\\configs.sql", "name": "should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2424083, "supported_languages": null}, "macro.dbt.should_store_failures": {"unique_id": "macro.dbt.should_store_failures", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\configs.sql", "original_file_path": "macros\\materializations\\configs.sql", "name": "should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2434375, "supported_languages": null}, "macro.dbt.run_hooks": {"unique_id": "macro.dbt.run_hooks", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\hooks.sql", "original_file_path": "macros\\materializations\\hooks.sql", "name": "run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2454374, "supported_languages": null}, "macro.dbt.make_hook_config": {"unique_id": "macro.dbt.make_hook_config", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\hooks.sql", "original_file_path": "macros\\materializations\\hooks.sql", "name": "make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2454374, "supported_languages": null}, "macro.dbt.before_begin": {"unique_id": "macro.dbt.before_begin", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\hooks.sql", "original_file_path": "macros\\materializations\\hooks.sql", "name": "before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.24651, "supported_languages": null}, "macro.dbt.in_transaction": {"unique_id": "macro.dbt.in_transaction", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\hooks.sql", "original_file_path": "macros\\materializations\\hooks.sql", "name": "in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.24651, "supported_languages": null}, "macro.dbt.after_commit": {"unique_id": "macro.dbt.after_commit", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\hooks.sql", "original_file_path": "macros\\materializations\\hooks.sql", "name": "after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.24651, "supported_languages": null}, "macro.dbt.get_quoted_csv": {"unique_id": "macro.dbt.get_quoted_csv", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "original_file_path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "name": "get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2494755, "supported_languages": null}, "macro.dbt.diff_columns": {"unique_id": "macro.dbt.diff_columns", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "original_file_path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "name": "diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n\n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2504752, "supported_languages": null}, "macro.dbt.diff_column_data_types": {"unique_id": "macro.dbt.diff_column_data_types", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "original_file_path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "name": "diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type and not sc.can_expand_to(other_column=tc) %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.251475, "supported_languages": null}, "macro.dbt.get_merge_update_columns": {"unique_id": "macro.dbt.get_merge_update_columns", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "original_file_path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "name": "get_merge_update_columns", "macro_sql": "{% macro get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {{ return(adapter.dispatch('get_merge_update_columns', 'dbt')(merge_update_columns, merge_exclude_columns, dest_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.251475, "supported_languages": null}, "macro.dbt.default__get_merge_update_columns": {"unique_id": "macro.dbt.default__get_merge_update_columns", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "original_file_path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "name": "default__get_merge_update_columns", "macro_sql": "{% macro default__get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {%- set default_cols = dest_columns | map(attribute=\"quoted\") | list -%}\n\n  {%- if merge_update_columns and merge_exclude_columns -%}\n    {{ exceptions.raise_compiler_error(\n        'Model cannot specify merge_update_columns and merge_exclude_columns. Please update model to use only one config'\n    )}}\n  {%- elif merge_update_columns -%}\n    {%- set update_columns = merge_update_columns -%}\n  {%- elif merge_exclude_columns -%}\n    {%- set update_columns = [] -%}\n    {%- for column in dest_columns -%}\n      {% if column.column | lower not in merge_exclude_columns | map(\"lower\") | list %}\n        {%- do update_columns.append(column.quoted) -%}\n      {% endif %}\n    {%- endfor -%}\n  {%- else -%}\n    {%- set update_columns = default_cols -%}\n  {%- endif -%}\n\n  {{ return(update_columns) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2534754, "supported_languages": null}, "macro.dbt.materialization_incremental_default": {"unique_id": "macro.dbt.materialization_incremental_default", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\incremental.sql", "original_file_path": "macros\\materializations\\models\\incremental\\incremental.sql", "name": "materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  -- relations\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {%- set intermediate_relation = make_intermediate_relation(target_relation)-%}\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n\n  -- configs\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()  or existing_relation.is_view) -%}\n  {%- set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') -%}\n\n  -- the temp_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation)-%}\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n   -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = get_create_table_as_sql(False, target_relation, sql) %}\n  {% elif full_refresh_mode %}\n      {% set build_sql = get_create_table_as_sql(False, intermediate_relation, sql) %}\n      {% set need_swap = true %}\n  {% else %}\n    {% do run_query(get_create_table_as_sql(True, temp_relation, sql)) %}\n    {% do adapter.expand_target_column_types(\n             from_relation=temp_relation,\n             to_relation=target_relation) %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, temp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n\n    {#-- Get the incremental_strategy, the macro to use for the strategy, and build the sql --#}\n    {% set incremental_strategy = config.get('incremental_strategy') or 'default' %}\n    {% set incremental_predicates = config.get('incremental_predicates', none) %}\n    {% set strategy_sql_macro_func = adapter.get_incremental_strategy_macro(context, incremental_strategy) %}\n    {% set strategy_arg_dict = ({'target_relation': target_relation, 'temp_relation': temp_relation, 'unique_key': unique_key, 'dest_columns': dest_columns, 'predicates': incremental_predicates }) %}\n    {% set build_sql = strategy_sql_macro_func(strategy_arg_dict) %}\n\n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if need_swap %}\n      {% do adapter.rename_relation(target_relation, backup_relation) %}\n      {% do adapter.rename_relation(intermediate_relation, target_relation) %}\n      {% do to_drop.append(backup_relation) %}\n  {% endif %}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_temp_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.get_create_table_as_sql", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2615073, "supported_languages": ["sql"]}, "macro.dbt.is_incremental": {"unique_id": "macro.dbt.is_incremental", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\is_incremental.sql", "original_file_path": "macros\\materializations\\models\\incremental\\is_incremental.sql", "name": "is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2625134, "supported_languages": null}, "macro.dbt.get_merge_sql": {"unique_id": "macro.dbt.get_merge_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "name": "get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, predicates=none) -%}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, predicates) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2685175, "supported_languages": null}, "macro.dbt.default__get_merge_sql": {"unique_id": "macro.dbt.default__get_merge_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "name": "default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, predicates) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set merge_update_columns = config.get('merge_update_columns') -%}\n    {%- set merge_exclude_columns = config.get('merge_exclude_columns') -%}\n    {%- set update_columns = get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not mapping and unique_key is not string %}\n            {% for key in unique_key %}\n                {% set this_key_match %}\n                    DBT_INTERNAL_SOURCE.{{ key }} = DBT_INTERNAL_DEST.{{ key }}\n                {% endset %}\n                {% do predicates.append(this_key_match) %}\n            {% endfor %}\n        {% else %}\n            {% set unique_key_match %}\n                DBT_INTERNAL_SOURCE.{{ unique_key }} = DBT_INTERNAL_DEST.{{ unique_key }}\n            {% endset %}\n            {% do predicates.append(unique_key_match) %}\n        {% endif %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{ predicates | join(' and ') }}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt.get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.271484, "supported_languages": null}, "macro.dbt.get_delete_insert_merge_sql": {"unique_id": "macro.dbt.get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "name": "get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.271484, "supported_languages": null}, "macro.dbt.default__get_delete_insert_merge_sql": {"unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "name": "default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not string %}\n            delete from {{target }}\n            using {{ source }}\n            where (\n                {% for key in unique_key %}\n                    {{ source }}.{{ key }} = {{ target }}.{{ key }}\n                    {{ \"and \" if not loop.last }}\n                {% endfor %}\n            );\n        {% else %}\n            delete from {{ target }}\n            where (\n                {{ unique_key }}) in (\n                select ({{ unique_key }})\n                from {{ source }}\n            );\n\n        {% endif %}\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2735133, "supported_languages": null}, "macro.dbt.get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "name": "get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2735133, "supported_languages": null}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "name": "default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {#-- The only time include_sql_header is True: --#}\n    {#-- BigQuery + insert_overwrite strategy + \"static\" partitions config --#}\n    {#-- We should consider including the sql header at the materialization level instead --#}\n\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2745137, "supported_languages": null}, "macro.dbt.incremental_validate_on_schema_change": {"unique_id": "macro.dbt.incremental_validate_on_schema_change", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "original_file_path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "name": "incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n\n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n\n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n\n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n\n   {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2815144, "supported_languages": null}, "macro.dbt.check_for_schema_changes": {"unique_id": "macro.dbt.check_for_schema_changes", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "original_file_path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "name": "check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n\n  {% set schema_changed = False %}\n\n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n\n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n\n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'source_columns': source_columns,\n    'target_columns': target_columns,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2835138, "supported_languages": null}, "macro.dbt.sync_column_schemas": {"unique_id": "macro.dbt.sync_column_schemas", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "original_file_path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "name": "sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n\n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n\n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n\n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(schema_change_message) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.286516, "supported_languages": null}, "macro.dbt.process_schema_changes": {"unique_id": "macro.dbt.process_schema_changes", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "original_file_path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "name": "process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n\n    {% if on_schema_change == 'ignore' %}\n\n     {{ return({}) }}\n\n    {% else %}\n\n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n\n      {% if schema_changes_dict['schema_changed'] %}\n\n        {% if on_schema_change == 'fail' %}\n\n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways:\n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n\n              Additional troubleshooting context:\n                 Source columns not in target: {{ schema_changes_dict['source_not_in_target'] }}\n                 Target columns not in source: {{ schema_changes_dict['target_not_in_source'] }}\n                 New column types: {{ schema_changes_dict['new_target_types'] }}\n          {% endset %}\n\n          {% do exceptions.raise_compiler_error(fail_msg) %}\n\n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n\n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n        {% endif %}\n\n      {% endif %}\n\n      {{ return(schema_changes_dict['source_columns']) }}\n\n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.287484, "supported_languages": null}, "macro.dbt.get_incremental_append_sql": {"unique_id": "macro.dbt.get_incremental_append_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "name": "get_incremental_append_sql", "macro_sql": "{% macro get_incremental_append_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_append_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2895126, "supported_languages": null}, "macro.dbt.default__get_incremental_append_sql": {"unique_id": "macro.dbt.default__get_incremental_append_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "name": "default__get_incremental_append_sql", "macro_sql": "{% macro default__get_incremental_append_sql(arg_dict) %}\n\n  {% do return(get_insert_into_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"])) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_insert_into_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.290276, "supported_languages": null}, "macro.dbt.get_incremental_delete_insert_sql": {"unique_id": "macro.dbt.get_incremental_delete_insert_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "name": "get_incremental_delete_insert_sql", "macro_sql": "{% macro get_incremental_delete_insert_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_delete_insert_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__get_incremental_delete_insert_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2904832, "supported_languages": null}, "macro.dbt.default__get_incremental_delete_insert_sql": {"unique_id": "macro.dbt.default__get_incremental_delete_insert_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "name": "default__get_incremental_delete_insert_sql", "macro_sql": "{% macro default__get_incremental_delete_insert_sql(arg_dict) %}\n\n  {% do return(get_delete_insert_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"])) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2904832, "supported_languages": null}, "macro.dbt.get_incremental_merge_sql": {"unique_id": "macro.dbt.get_incremental_merge_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "name": "get_incremental_merge_sql", "macro_sql": "{% macro get_incremental_merge_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_merge_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_incremental_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.291504, "supported_languages": null}, "macro.dbt.default__get_incremental_merge_sql": {"unique_id": "macro.dbt.default__get_incremental_merge_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "name": "default__get_incremental_merge_sql", "macro_sql": "{% macro default__get_incremental_merge_sql(arg_dict) %}\n\n  {% do return(get_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"])) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.291504, "supported_languages": null}, "macro.dbt.get_incremental_insert_overwrite_sql": {"unique_id": "macro.dbt.get_incremental_insert_overwrite_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "name": "get_incremental_insert_overwrite_sql", "macro_sql": "{% macro get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_insert_overwrite_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_incremental_insert_overwrite_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.291504, "supported_languages": null}, "macro.dbt.default__get_incremental_insert_overwrite_sql": {"unique_id": "macro.dbt.default__get_incremental_insert_overwrite_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "name": "default__get_incremental_insert_overwrite_sql", "macro_sql": "{% macro default__get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {% do return(get_insert_overwrite_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"], arg_dict[\"predicates\"])) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2925131, "supported_languages": null}, "macro.dbt.get_incremental_default_sql": {"unique_id": "macro.dbt.get_incremental_default_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "name": "get_incremental_default_sql", "macro_sql": "{% macro get_incremental_default_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_default_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__get_incremental_default_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2925131, "supported_languages": null}, "macro.dbt.default__get_incremental_default_sql": {"unique_id": "macro.dbt.default__get_incremental_default_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "name": "default__get_incremental_default_sql", "macro_sql": "{% macro default__get_incremental_default_sql(arg_dict) %}\n\n  {% do return(get_incremental_append_sql(arg_dict)) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2925131, "supported_languages": null}, "macro.dbt.get_insert_into_sql": {"unique_id": "macro.dbt.get_insert_into_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "name": "get_insert_into_sql", "macro_sql": "{% macro get_insert_into_sql(target_relation, temp_relation, dest_columns) %}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    insert into {{ target_relation }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ temp_relation }}\n    )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2935154, "supported_languages": null}, "macro.dbt.get_create_table_as_sql": {"unique_id": "macro.dbt.get_create_table_as_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\table\\create_table_as.sql", "original_file_path": "macros\\materializations\\models\\table\\create_table_as.sql", "name": "get_create_table_as_sql", "macro_sql": "{% macro get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ adapter.dispatch('get_create_table_as_sql', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2945135, "supported_languages": null}, "macro.dbt.default__get_create_table_as_sql": {"unique_id": "macro.dbt.default__get_create_table_as_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\table\\create_table_as.sql", "original_file_path": "macros\\materializations\\models\\table\\create_table_as.sql", "name": "default__get_create_table_as_sql", "macro_sql": "{% macro default__get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ return(create_table_as(temporary, relation, sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2945135, "supported_languages": null}, "macro.dbt.create_table_as": {"unique_id": "macro.dbt.create_table_as", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\table\\create_table_as.sql", "original_file_path": "macros\\materializations\\models\\table\\create_table_as.sql", "name": "create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, compiled_code, language='sql') -%}\n  {# backward compatibility for create_table_as that does not support language #}\n  {% if language == \"sql\" %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code)}}\n  {% else %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code, language) }}\n  {% endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2955134, "supported_languages": null}, "macro.dbt.default__create_table_as": {"unique_id": "macro.dbt.default__create_table_as", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\table\\create_table_as.sql", "original_file_path": "macros\\materializations\\models\\table\\create_table_as.sql", "name": "default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.2965138, "supported_languages": null}, "macro.dbt.materialization_table_default": {"unique_id": "macro.dbt.materialization_table_default", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\table\\table.sql", "original_file_path": "macros\\materializations\\models\\table\\table.sql", "name": "materialization_table_default", "macro_sql": "{% materialization table, default %}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') %}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_table_as_sql(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if existing_relation is not none %}\n      {{ adapter.rename_relation(existing_relation, backup_relation) }}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.get_create_table_as_sql", "macro.dbt.create_indexes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3005154, "supported_languages": ["sql"]}, "macro.dbt.create_or_replace_view": {"unique_id": "macro.dbt.create_or_replace_view", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\view\\create_or_replace_view.sql", "original_file_path": "macros\\materializations\\models\\view\\create_or_replace_view.sql", "name": "create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {% set should_revoke = should_revoke(exists_as_view, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=True) %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3035133, "supported_languages": null}, "macro.dbt.get_create_view_as_sql": {"unique_id": "macro.dbt.get_create_view_as_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\view\\create_view_as.sql", "original_file_path": "macros\\materializations\\models\\view\\create_view_as.sql", "name": "get_create_view_as_sql", "macro_sql": "{% macro get_create_view_as_sql(relation, sql) -%}\n  {{ adapter.dispatch('get_create_view_as_sql', 'dbt')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3044853, "supported_languages": null}, "macro.dbt.default__get_create_view_as_sql": {"unique_id": "macro.dbt.default__get_create_view_as_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\view\\create_view_as.sql", "original_file_path": "macros\\materializations\\models\\view\\create_view_as.sql", "name": "default__get_create_view_as_sql", "macro_sql": "{% macro default__get_create_view_as_sql(relation, sql) -%}\n  {{ return(create_view_as(relation, sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3044853, "supported_languages": null}, "macro.dbt.create_view_as": {"unique_id": "macro.dbt.create_view_as", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\view\\create_view_as.sql", "original_file_path": "macros\\materializations\\models\\view\\create_view_as.sql", "name": "create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3044853, "supported_languages": null}, "macro.dbt.default__create_view_as": {"unique_id": "macro.dbt.default__create_view_as", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\view\\create_view_as.sql", "original_file_path": "macros\\materializations\\models\\view\\create_view_as.sql", "name": "default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }} as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3055131, "supported_languages": null}, "macro.dbt.handle_existing_table": {"unique_id": "macro.dbt.handle_existing_table", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\view\\helpers.sql", "original_file_path": "macros\\materializations\\models\\view\\helpers.sql", "name": "handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.306514, "supported_languages": null}, "macro.dbt.default__handle_existing_table": {"unique_id": "macro.dbt.default__handle_existing_table", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\view\\helpers.sql", "original_file_path": "macros\\materializations\\models\\view\\helpers.sql", "name": "default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.306514, "supported_languages": null}, "macro.dbt.materialization_view_default": {"unique_id": "macro.dbt.materialization_view_default", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\models\\view\\view.sql", "original_file_path": "macros\\materializations\\models\\view\\view.sql", "name": "materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='view') -%}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"existing_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the existing_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the existing_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if existing_relation is not none %}\n    {{ adapter.rename_relation(existing_relation, backup_relation) }}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3105495, "supported_languages": ["sql"]}, "macro.dbt.create_csv_table": {"unique_id": "macro.dbt.create_csv_table", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.317583, "supported_languages": null}, "macro.dbt.default__create_csv_table": {"unique_id": "macro.dbt.default__create_csv_table", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3185787, "supported_languages": null}, "macro.dbt.reset_csv_table": {"unique_id": "macro.dbt.reset_csv_table", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3195817, "supported_languages": null}, "macro.dbt.default__reset_csv_table": {"unique_id": "macro.dbt.default__reset_csv_table", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3195817, "supported_languages": null}, "macro.dbt.get_csv_sql": {"unique_id": "macro.dbt.get_csv_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "get_csv_sql", "macro_sql": "{% macro get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ adapter.dispatch('get_csv_sql', 'dbt')(create_or_truncate_sql, insert_sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_csv_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.320551, "supported_languages": null}, "macro.dbt.default__get_csv_sql": {"unique_id": "macro.dbt.default__get_csv_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "default__get_csv_sql", "macro_sql": "{% macro default__get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ create_or_truncate_sql }};\n    -- dbt seed --\n    {{ insert_sql }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.320551, "supported_languages": null}, "macro.dbt.get_binding_char": {"unique_id": "macro.dbt.get_binding_char", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.320551, "supported_languages": null}, "macro.dbt.default__get_binding_char": {"unique_id": "macro.dbt.default__get_binding_char", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3215516, "supported_languages": null}, "macro.dbt.get_batch_size": {"unique_id": "macro.dbt.get_batch_size", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3215516, "supported_languages": null}, "macro.dbt.default__get_batch_size": {"unique_id": "macro.dbt.default__get_batch_size", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3215516, "supported_languages": null}, "macro.dbt.get_seed_column_quoted_csv": {"unique_id": "macro.dbt.get_seed_column_quoted_csv", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.32255, "supported_languages": null}, "macro.dbt.load_csv_rows": {"unique_id": "macro.dbt.load_csv_rows", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.32255, "supported_languages": null}, "macro.dbt.default__load_csv_rows": {"unique_id": "macro.dbt.default__load_csv_rows", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "name": "default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3255785, "supported_languages": null}, "macro.dbt.materialization_seed_default": {"unique_id": "macro.dbt.materialization_seed_default", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seeds\\seed.sql", "original_file_path": "macros\\materializations\\seeds\\seed.sql", "name": "materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set grant_config = config.get('grants') -%}\n  {%- set agate_table = load_agate_table() -%}\n  -- grab current tables grants config for comparision later on\n\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation)) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ get_csv_sql(create_table_sql, sql) }};\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n\n  {% set should_revoke = should_revoke(old_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.get_csv_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.330578, "supported_languages": ["sql"]}, "macro.dbt.create_columns": {"unique_id": "macro.dbt.create_columns", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "name": "create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3355787, "supported_languages": null}, "macro.dbt.default__create_columns": {"unique_id": "macro.dbt.default__create_columns", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "name": "default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3365796, "supported_languages": null}, "macro.dbt.post_snapshot": {"unique_id": "macro.dbt.post_snapshot", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "name": "post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3365796, "supported_languages": null}, "macro.dbt.default__post_snapshot": {"unique_id": "macro.dbt.default__post_snapshot", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "name": "default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3365796, "supported_languages": null}, "macro.dbt.get_true_sql": {"unique_id": "macro.dbt.get_true_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "name": "get_true_sql", "macro_sql": "{% macro get_true_sql() %}\n  {{ adapter.dispatch('get_true_sql', 'dbt')() }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_true_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3365796, "supported_languages": null}, "macro.dbt.default__get_true_sql": {"unique_id": "macro.dbt.default__get_true_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "name": "default__get_true_sql", "macro_sql": "{% macro default__get_true_sql() %}\n    {{ return('TRUE') }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3375516, "supported_languages": null}, "macro.dbt.snapshot_staging_table": {"unique_id": "macro.dbt.snapshot_staging_table", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "name": "snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n  {{ adapter.dispatch('snapshot_staging_table', 'dbt')(strategy, source_sql, target_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_staging_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3375516, "supported_languages": null}, "macro.dbt.default__snapshot_staging_table": {"unique_id": "macro.dbt.default__snapshot_staging_table", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "name": "default__snapshot_staging_table", "macro_sql": "{% macro default__snapshot_staging_table(strategy, source_sql, target_relation) -%}\n\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *,\n            {{ strategy.unique_key }} as dbt_unique_key\n\n        from {{ target_relation }}\n        where dbt_valid_to is null\n\n    ),\n\n    insertions_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to,\n            {{ strategy.scd_id }} as dbt_scd_id\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            {{ strategy.updated_at }} as dbt_valid_to\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.invalidate_hard_deletes %}\n\n    deletes_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where snapshotted_data.dbt_unique_key is null\n           or (\n                snapshotted_data.dbt_unique_key is not null\n            and (\n                {{ strategy.row_changed }}\n            )\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.dbt_scd_id\n\n        from updates_source_data as source_data\n        join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.invalidate_hard_deletes -%}\n    ,\n\n    deletes as (\n\n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as dbt_valid_from,\n            {{ snapshot_get_time() }} as dbt_updated_at,\n            {{ snapshot_get_time() }} as dbt_valid_to,\n            snapshotted_data.dbt_scd_id\n\n        from snapshotted_data\n        left join deletes_source_data as source_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where source_data.dbt_unique_key is null\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.invalidate_hard_deletes %}\n    union all\n    select * from deletes\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3395782, "supported_languages": null}, "macro.dbt.build_snapshot_table": {"unique_id": "macro.dbt.build_snapshot_table", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "name": "build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) -%}\n  {{ adapter.dispatch('build_snapshot_table', 'dbt')(strategy, sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__build_snapshot_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3395782, "supported_languages": null}, "macro.dbt.default__build_snapshot_table": {"unique_id": "macro.dbt.default__build_snapshot_table", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "name": "default__build_snapshot_table", "macro_sql": "{% macro default__build_snapshot_table(strategy, sql) %}\n\n    select *,\n        {{ strategy.scd_id }} as dbt_scd_id,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3403864, "supported_languages": null}, "macro.dbt.build_snapshot_staging_table": {"unique_id": "macro.dbt.build_snapshot_staging_table", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "name": "build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set temp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, temp_relation, select) }}\n    {% endcall %}\n\n    {% do return(temp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3405488, "supported_languages": null}, "macro.dbt.materialization_snapshot_default": {"unique_id": "macro.dbt.materialization_snapshot_default", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\snapshot.sql", "original_file_path": "macros\\materializations\\snapshots\\snapshot.sql", "name": "materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n  -- grab current tables grants config for comparision later on\n  {%- set grant_config = config.get('grants') -%}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_code']) %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {{ adapter.valid_snapshot_target(target_relation) }}\n\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% set should_revoke = should_revoke(target_relation_exists, full_refresh_mode=False) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3496208, "supported_languages": ["sql"]}, "macro.dbt.snapshot_merge_sql": {"unique_id": "macro.dbt.snapshot_merge_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\snapshot_merge.sql", "original_file_path": "macros\\materializations\\snapshots\\snapshot_merge.sql", "name": "snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3506207, "supported_languages": null}, "macro.dbt.default__snapshot_merge_sql": {"unique_id": "macro.dbt.default__snapshot_merge_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\snapshot_merge.sql", "original_file_path": "macros\\materializations\\snapshots\\snapshot_merge.sql", "name": "default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id\n\n    when matched\n     and DBT_INTERNAL_DEST.dbt_valid_to is null\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3516216, "supported_languages": null}, "macro.dbt.strategy_dispatch": {"unique_id": "macro.dbt.strategy_dispatch", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "name": "strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3566146, "supported_languages": null}, "macro.dbt.snapshot_hash_arguments": {"unique_id": "macro.dbt.snapshot_hash_arguments", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "name": "snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.357621, "supported_languages": null}, "macro.dbt.default__snapshot_hash_arguments": {"unique_id": "macro.dbt.default__snapshot_hash_arguments", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "name": "default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.357621, "supported_languages": null}, "macro.dbt.snapshot_timestamp_strategy": {"unique_id": "macro.dbt.snapshot_timestamp_strategy", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "name": "snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set primary_key = config['unique_key'] %}\n    {% set updated_at = config['updated_at'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt-core/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.dbt_valid_from < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3586214, "supported_languages": null}, "macro.dbt.snapshot_string_as_time": {"unique_id": "macro.dbt.snapshot_string_as_time", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "name": "snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.359602, "supported_languages": null}, "macro.dbt.default__snapshot_string_as_time": {"unique_id": "macro.dbt.default__snapshot_string_as_time", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "name": "default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.359602, "supported_languages": null}, "macro.dbt.snapshot_check_all_get_existing_columns": {"unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "name": "snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) -%}\n    {%- if not target_exists -%}\n        {#-- no table yet -> return whatever the query does --#}\n        {{ return((false, query_columns)) }}\n    {%- endif -%}\n\n    {#-- handle any schema changes --#}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=node.alias) -%}\n\n    {% if check_cols_config == 'all' %}\n        {%- set query_columns = get_columns_in_query(node['compiled_code']) -%}\n\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {#-- query for proper casing/quoting, to support comparison below --#}\n        {%- set select_check_cols_from_target -%}\n          select {{ check_cols_config | join(', ') }} from ({{ node['compiled_code'] }}) subq\n        {%- endset -%}\n        {% set query_columns = get_columns_in_query(select_check_cols_from_target) %}\n\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set existing_cols = adapter.get_columns_in_relation(target_relation) | map(attribute = 'name') | list -%}\n    {%- set ns = namespace() -%} {#-- handle for-loop scoping with a namespace --#}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(adapter.quote(col)) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return((ns.column_added, intersection)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3616264, "supported_languages": null}, "macro.dbt.snapshot_check_strategy": {"unique_id": "macro.dbt.snapshot_check_strategy", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "name": "snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set check_cols_config = config['check_cols'] %}\n    {% set primary_key = config['unique_key'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n    {% set updated_at = config.get('updated_at', snapshot_get_time()) %}\n\n    {% set column_added = false %}\n\n    {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        {{ get_true_sql() }}\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.get_true_sql", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3646252, "supported_languages": null}, "macro.dbt.get_test_sql": {"unique_id": "macro.dbt.get_test_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\tests\\helpers.sql", "original_file_path": "macros\\materializations\\tests\\helpers.sql", "name": "get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.365622, "supported_languages": null}, "macro.dbt.default__get_test_sql": {"unique_id": "macro.dbt.default__get_test_sql", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\tests\\helpers.sql", "original_file_path": "macros\\materializations\\tests\\helpers.sql", "name": "default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.365622, "supported_languages": null}, "macro.dbt.materialization_test_default": {"unique_id": "macro.dbt.materialization_test_default", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\tests\\test.sql", "original_file_path": "macros\\materializations\\tests\\test.sql", "name": "materialization_test_default", "macro_sql": "{%- materialization test, default -%}\n\n  {% set relations = [] %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type='table') -%} %}\n\n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n\n    {% call statement(auto_begin=True) %}\n        {{ create_table_as(False, target_relation, sql) }}\n    {% endcall %}\n\n    {% do relations.append(target_relation) %}\n\n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n\n    {{ adapter.commit() }}\n\n  {% else %}\n\n      {% set main_sql = sql %}\n\n  {% endif %}\n\n  {% set limit = config.get('limit') %}\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit)}}\n\n  {%- endcall %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3696208, "supported_languages": ["sql"]}, "macro.dbt.get_where_subquery": {"unique_id": "macro.dbt.get_where_subquery", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\tests\\where_subquery.sql", "original_file_path": "macros\\materializations\\tests\\where_subquery.sql", "name": "get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery', 'dbt')(relation)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3705935, "supported_languages": null}, "macro.dbt.default__get_where_subquery": {"unique_id": "macro.dbt.default__get_where_subquery", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\tests\\where_subquery.sql", "original_file_path": "macros\\materializations\\tests\\where_subquery.sql", "name": "default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3705935, "supported_languages": null}, "macro.dbt.build_ref_function": {"unique_id": "macro.dbt.build_ref_function", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\python_model\\python.sql", "original_file_path": "macros\\python_model\\python.sql", "name": "build_ref_function", "macro_sql": "{% macro build_ref_function(model) %}\n\n    {%- set ref_dict = {} -%}\n    {%- for _ref in model.refs -%}\n        {%- set resolved = ref(*_ref) -%}\n        {%- do ref_dict.update({_ref | join(\".\"): resolved.quote(database=False, schema=False, identifier=False) | string}) -%}\n    {%- endfor -%}\n\ndef ref(*args,dbt_load_df_function):\n    refs = {{ ref_dict | tojson }}\n    key = \".\".join(args)\n    return dbt_load_df_function(refs[key])\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.373627, "supported_languages": null}, "macro.dbt.build_source_function": {"unique_id": "macro.dbt.build_source_function", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\python_model\\python.sql", "original_file_path": "macros\\python_model\\python.sql", "name": "build_source_function", "macro_sql": "{% macro build_source_function(model) %}\n\n    {%- set source_dict = {} -%}\n    {%- for _source in model.sources -%}\n        {%- set resolved = source(*_source) -%}\n        {%- do source_dict.update({_source | join(\".\"): resolved.quote(database=False, schema=False, identifier=False) | string}) -%}\n    {%- endfor -%}\n\ndef source(*args, dbt_load_df_function):\n    sources = {{ source_dict | tojson }}\n    key = \".\".join(args)\n    return dbt_load_df_function(sources[key])\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3746204, "supported_languages": null}, "macro.dbt.build_config_dict": {"unique_id": "macro.dbt.build_config_dict", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\python_model\\python.sql", "original_file_path": "macros\\python_model\\python.sql", "name": "build_config_dict", "macro_sql": "{% macro build_config_dict(model) %}\n    {%- set config_dict = {} -%}\n    {%- for key in model.config.config_keys_used -%}\n        {# weird type testing with enum, would be much easier to write this logic in Python! #}\n        {%- if key == 'language' -%}\n          {%- set value = 'python' -%}\n        {%- endif -%}\n        {%- set value = model.config[key] -%}\n        {%- do config_dict.update({key: value}) -%}\n    {%- endfor -%}\nconfig_dict = {{ config_dict }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3746204, "supported_languages": null}, "macro.dbt.py_script_postfix": {"unique_id": "macro.dbt.py_script_postfix", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\python_model\\python.sql", "original_file_path": "macros\\python_model\\python.sql", "name": "py_script_postfix", "macro_sql": "{% macro py_script_postfix(model) %}\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\n{{ build_ref_function(model ) }}\n{{ build_source_function(model ) }}\n{{ build_config_dict(model) }}\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = '{{ this.database }}'\n    schema = '{{ this.schema }}'\n    identifier = '{{ this.identifier }}'\n    def __repr__(self):\n        return '{{ this }}'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args: ref(*args, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = {{ is_incremental() }}\n\n# COMMAND ----------\n{{py_script_comment()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.build_ref_function", "macro.dbt.build_source_function", "macro.dbt.build_config_dict", "macro.dbt.is_incremental", "macro.dbt.py_script_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3755906, "supported_languages": null}, "macro.dbt.py_script_comment": {"unique_id": "macro.dbt.py_script_comment", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\python_model\\python.sql", "original_file_path": "macros\\python_model\\python.sql", "name": "py_script_comment", "macro_sql": "{%macro py_script_comment()%}\n{%endmacro%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3755906, "supported_languages": null}, "macro.dbt.any_value": {"unique_id": "macro.dbt.any_value", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\any_value.sql", "original_file_path": "macros\\utils\\any_value.sql", "name": "any_value", "macro_sql": "{% macro any_value(expression) -%}\n    {{ return(adapter.dispatch('any_value', 'dbt') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__any_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3766215, "supported_languages": null}, "macro.dbt.default__any_value": {"unique_id": "macro.dbt.default__any_value", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\any_value.sql", "original_file_path": "macros\\utils\\any_value.sql", "name": "default__any_value", "macro_sql": "{% macro default__any_value(expression) -%}\n\n    any_value({{ expression }})\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3766215, "supported_languages": null}, "macro.dbt.array_append": {"unique_id": "macro.dbt.array_append", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\array_append.sql", "original_file_path": "macros\\utils\\array_append.sql", "name": "array_append", "macro_sql": "{% macro array_append(array, new_element) -%}\n  {{ return(adapter.dispatch('array_append', 'dbt')(array, new_element)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__array_append"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3775935, "supported_languages": null}, "macro.dbt.default__array_append": {"unique_id": "macro.dbt.default__array_append", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\array_append.sql", "original_file_path": "macros\\utils\\array_append.sql", "name": "default__array_append", "macro_sql": "{% macro default__array_append(array, new_element) -%}\n    array_append({{ array }}, {{ new_element }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3775935, "supported_languages": null}, "macro.dbt.array_concat": {"unique_id": "macro.dbt.array_concat", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\array_concat.sql", "original_file_path": "macros\\utils\\array_concat.sql", "name": "array_concat", "macro_sql": "{% macro array_concat(array_1, array_2) -%}\n  {{ return(adapter.dispatch('array_concat', 'dbt')(array_1, array_2)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__array_concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3785927, "supported_languages": null}, "macro.dbt.default__array_concat": {"unique_id": "macro.dbt.default__array_concat", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\array_concat.sql", "original_file_path": "macros\\utils\\array_concat.sql", "name": "default__array_concat", "macro_sql": "{% macro default__array_concat(array_1, array_2) -%}\n    array_cat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3785927, "supported_languages": null}, "macro.dbt.array_construct": {"unique_id": "macro.dbt.array_construct", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\array_construct.sql", "original_file_path": "macros\\utils\\array_construct.sql", "name": "array_construct", "macro_sql": "{% macro array_construct(inputs=[], data_type=api.Column.translate_type('integer')) -%}\n  {{ return(adapter.dispatch('array_construct', 'dbt')(inputs, data_type)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3795922, "supported_languages": null}, "macro.dbt.default__array_construct": {"unique_id": "macro.dbt.default__array_construct", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\array_construct.sql", "original_file_path": "macros\\utils\\array_construct.sql", "name": "default__array_construct", "macro_sql": "{% macro default__array_construct(inputs, data_type) -%}\n    {% if inputs|length > 0 %}\n    array[ {{ inputs|join(' , ') }} ]\n    {% else %}\n    array[]::{{data_type}}[]\n    {% endif %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3806212, "supported_languages": null}, "macro.dbt.bool_or": {"unique_id": "macro.dbt.bool_or", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\bool_or.sql", "original_file_path": "macros\\utils\\bool_or.sql", "name": "bool_or", "macro_sql": "{% macro bool_or(expression) -%}\n    {{ return(adapter.dispatch('bool_or', 'dbt') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__bool_or"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3806212, "supported_languages": null}, "macro.dbt.default__bool_or": {"unique_id": "macro.dbt.default__bool_or", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\bool_or.sql", "original_file_path": "macros\\utils\\bool_or.sql", "name": "default__bool_or", "macro_sql": "{% macro default__bool_or(expression) -%}\n\n    bool_or({{ expression }})\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3806212, "supported_languages": null}, "macro.dbt.cast_bool_to_text": {"unique_id": "macro.dbt.cast_bool_to_text", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\cast_bool_to_text.sql", "original_file_path": "macros\\utils\\cast_bool_to_text.sql", "name": "cast_bool_to_text", "macro_sql": "{% macro cast_bool_to_text(field) %}\n  {{ adapter.dispatch('cast_bool_to_text', 'dbt') (field) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3816214, "supported_languages": null}, "macro.dbt.default__cast_bool_to_text": {"unique_id": "macro.dbt.default__cast_bool_to_text", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\cast_bool_to_text.sql", "original_file_path": "macros\\utils\\cast_bool_to_text.sql", "name": "default__cast_bool_to_text", "macro_sql": "{% macro default__cast_bool_to_text(field) %}\n    cast({{ field }} as {{ api.Column.translate_type('string') }})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3816214, "supported_languages": null}, "macro.dbt.concat": {"unique_id": "macro.dbt.concat", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\concat.sql", "original_file_path": "macros\\utils\\concat.sql", "name": "concat", "macro_sql": "{% macro concat(fields) -%}\n  {{ return(adapter.dispatch('concat', 'dbt')(fields)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3826218, "supported_languages": null}, "macro.dbt.default__concat": {"unique_id": "macro.dbt.default__concat", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\concat.sql", "original_file_path": "macros\\utils\\concat.sql", "name": "default__concat", "macro_sql": "{% macro default__concat(fields) -%}\n    {{ fields|join(' || ') }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3826218, "supported_languages": null}, "macro.dbt.type_string": {"unique_id": "macro.dbt.type_string", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "name": "type_string", "macro_sql": "\n\n{%- macro type_string() -%}\n  {{ return(adapter.dispatch('type_string', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3846245, "supported_languages": null}, "macro.dbt.default__type_string": {"unique_id": "macro.dbt.default__type_string", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "name": "default__type_string", "macro_sql": "{% macro default__type_string() %}\n    {{ return(api.Column.translate_type(\"string\")) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3846245, "supported_languages": null}, "macro.dbt.type_timestamp": {"unique_id": "macro.dbt.type_timestamp", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "name": "type_timestamp", "macro_sql": "\n\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3846245, "supported_languages": null}, "macro.dbt.default__type_timestamp": {"unique_id": "macro.dbt.default__type_timestamp", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "name": "default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() %}\n    {{ return(api.Column.translate_type(\"timestamp\")) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3856215, "supported_languages": null}, "macro.dbt.type_float": {"unique_id": "macro.dbt.type_float", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "name": "type_float", "macro_sql": "\n\n{%- macro type_float() -%}\n  {{ return(adapter.dispatch('type_float', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_float"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3856215, "supported_languages": null}, "macro.dbt.default__type_float": {"unique_id": "macro.dbt.default__type_float", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "name": "default__type_float", "macro_sql": "{% macro default__type_float() %}\n    {{ return(api.Column.translate_type(\"float\")) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3856215, "supported_languages": null}, "macro.dbt.type_numeric": {"unique_id": "macro.dbt.type_numeric", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "name": "type_numeric", "macro_sql": "\n\n{%- macro type_numeric() -%}\n  {{ return(adapter.dispatch('type_numeric', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.386592, "supported_languages": null}, "macro.dbt.default__type_numeric": {"unique_id": "macro.dbt.default__type_numeric", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "name": "default__type_numeric", "macro_sql": "{% macro default__type_numeric() %}\n    {{ return(api.Column.numeric_type(\"numeric\", 28, 6)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.386592, "supported_languages": null}, "macro.dbt.type_bigint": {"unique_id": "macro.dbt.type_bigint", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "name": "type_bigint", "macro_sql": "\n\n{%- macro type_bigint() -%}\n  {{ return(adapter.dispatch('type_bigint', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.386592, "supported_languages": null}, "macro.dbt.default__type_bigint": {"unique_id": "macro.dbt.default__type_bigint", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "name": "default__type_bigint", "macro_sql": "{% macro default__type_bigint() %}\n    {{ return(api.Column.translate_type(\"bigint\")) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.387592, "supported_languages": null}, "macro.dbt.type_int": {"unique_id": "macro.dbt.type_int", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "name": "type_int", "macro_sql": "\n\n{%- macro type_int() -%}\n  {{ return(adapter.dispatch('type_int', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.387592, "supported_languages": null}, "macro.dbt.default__type_int": {"unique_id": "macro.dbt.default__type_int", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "name": "default__type_int", "macro_sql": "{%- macro default__type_int() -%}\n  {{ return(api.Column.translate_type(\"integer\")) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.387592, "supported_languages": null}, "macro.dbt.type_boolean": {"unique_id": "macro.dbt.type_boolean", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "name": "type_boolean", "macro_sql": "\n\n{%- macro type_boolean() -%}\n  {{ return(adapter.dispatch('type_boolean', 'dbt')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__type_boolean"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.388593, "supported_languages": null}, "macro.dbt.default__type_boolean": {"unique_id": "macro.dbt.default__type_boolean", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "name": "default__type_boolean", "macro_sql": "{%- macro default__type_boolean() -%}\n  {{ return(api.Column.translate_type(\"boolean\")) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.388593, "supported_languages": null}, "macro.dbt.dateadd": {"unique_id": "macro.dbt.dateadd", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\dateadd.sql", "original_file_path": "macros\\utils\\dateadd.sql", "name": "dateadd", "macro_sql": "{% macro dateadd(datepart, interval, from_date_or_timestamp) %}\n  {{ return(adapter.dispatch('dateadd', 'dbt')(datepart, interval, from_date_or_timestamp)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3895917, "supported_languages": null}, "macro.dbt.default__dateadd": {"unique_id": "macro.dbt.default__dateadd", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\dateadd.sql", "original_file_path": "macros\\utils\\dateadd.sql", "name": "default__dateadd", "macro_sql": "{% macro default__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3895917, "supported_languages": null}, "macro.dbt.datediff": {"unique_id": "macro.dbt.datediff", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\datediff.sql", "original_file_path": "macros\\utils\\datediff.sql", "name": "datediff", "macro_sql": "{% macro datediff(first_date, second_date, datepart) %}\n  {{ return(adapter.dispatch('datediff', 'dbt')(first_date, second_date, datepart)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3905911, "supported_languages": null}, "macro.dbt.default__datediff": {"unique_id": "macro.dbt.default__datediff", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\datediff.sql", "original_file_path": "macros\\utils\\datediff.sql", "name": "default__datediff", "macro_sql": "{% macro default__datediff(first_date, second_date, datepart) -%}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3915913, "supported_languages": null}, "macro.dbt.date_trunc": {"unique_id": "macro.dbt.date_trunc", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\date_trunc.sql", "original_file_path": "macros\\utils\\date_trunc.sql", "name": "date_trunc", "macro_sql": "{% macro date_trunc(datepart, date) -%}\n  {{ return(adapter.dispatch('date_trunc', 'dbt') (datepart, date)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.392623, "supported_languages": null}, "macro.dbt.default__date_trunc": {"unique_id": "macro.dbt.default__date_trunc", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\date_trunc.sql", "original_file_path": "macros\\utils\\date_trunc.sql", "name": "default__date_trunc", "macro_sql": "{% macro default__date_trunc(datepart, date) -%}\n    date_trunc('{{datepart}}', {{date}})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.392623, "supported_languages": null}, "macro.dbt.escape_single_quotes": {"unique_id": "macro.dbt.escape_single_quotes", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\escape_single_quotes.sql", "original_file_path": "macros\\utils\\escape_single_quotes.sql", "name": "escape_single_quotes", "macro_sql": "{% macro escape_single_quotes(expression) %}\n      {{ return(adapter.dispatch('escape_single_quotes', 'dbt') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__escape_single_quotes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3936217, "supported_languages": null}, "macro.dbt.default__escape_single_quotes": {"unique_id": "macro.dbt.default__escape_single_quotes", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\escape_single_quotes.sql", "original_file_path": "macros\\utils\\escape_single_quotes.sql", "name": "default__escape_single_quotes", "macro_sql": "{% macro default__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\",\"''\") }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3936217, "supported_languages": null}, "macro.dbt.except": {"unique_id": "macro.dbt.except", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\except.sql", "original_file_path": "macros\\utils\\except.sql", "name": "except", "macro_sql": "{% macro except() %}\n  {{ return(adapter.dispatch('except', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3936217, "supported_languages": null}, "macro.dbt.default__except": {"unique_id": "macro.dbt.default__except", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\except.sql", "original_file_path": "macros\\utils\\except.sql", "name": "default__except", "macro_sql": "{% macro default__except() %}\n\n    except\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3946216, "supported_languages": null}, "macro.dbt.hash": {"unique_id": "macro.dbt.hash", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\hash.sql", "original_file_path": "macros\\utils\\hash.sql", "name": "hash", "macro_sql": "{% macro hash(field) -%}\n  {{ return(adapter.dispatch('hash', 'dbt') (field)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3946216, "supported_languages": null}, "macro.dbt.default__hash": {"unique_id": "macro.dbt.default__hash", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\hash.sql", "original_file_path": "macros\\utils\\hash.sql", "name": "default__hash", "macro_sql": "{% macro default__hash(field) -%}\n    md5(cast({{ field }} as {{ api.Column.translate_type('string') }}))\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3956223, "supported_languages": null}, "macro.dbt.intersect": {"unique_id": "macro.dbt.intersect", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\intersect.sql", "original_file_path": "macros\\utils\\intersect.sql", "name": "intersect", "macro_sql": "{% macro intersect() %}\n  {{ return(adapter.dispatch('intersect', 'dbt')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__intersect"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3956223, "supported_languages": null}, "macro.dbt.default__intersect": {"unique_id": "macro.dbt.default__intersect", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\intersect.sql", "original_file_path": "macros\\utils\\intersect.sql", "name": "default__intersect", "macro_sql": "{% macro default__intersect() %}\n\n    intersect\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3956223, "supported_languages": null}, "macro.dbt.last_day": {"unique_id": "macro.dbt.last_day", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\last_day.sql", "original_file_path": "macros\\utils\\last_day.sql", "name": "last_day", "macro_sql": "{% macro last_day(date, datepart) %}\n  {{ return(adapter.dispatch('last_day', 'dbt') (date, datepart)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3966372, "supported_languages": null}, "macro.dbt.default_last_day": {"unique_id": "macro.dbt.default_last_day", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\last_day.sql", "original_file_path": "macros\\utils\\last_day.sql", "name": "default_last_day", "macro_sql": "\n\n{%- macro default_last_day(date, datepart) -%}\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd(datepart, '1', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3976266, "supported_languages": null}, "macro.dbt.default__last_day": {"unique_id": "macro.dbt.default__last_day", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\last_day.sql", "original_file_path": "macros\\utils\\last_day.sql", "name": "default__last_day", "macro_sql": "{% macro default__last_day(date, datepart) -%}\n    {{dbt.default_last_day(date, datepart)}}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3976266, "supported_languages": null}, "macro.dbt.length": {"unique_id": "macro.dbt.length", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\length.sql", "original_file_path": "macros\\utils\\length.sql", "name": "length", "macro_sql": "{% macro length(expression) -%}\n    {{ return(adapter.dispatch('length', 'dbt') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__length"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3986216, "supported_languages": null}, "macro.dbt.default__length": {"unique_id": "macro.dbt.default__length", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\length.sql", "original_file_path": "macros\\utils\\length.sql", "name": "default__length", "macro_sql": "{% macro default__length(expression) %}\n\n    length(\n        {{ expression }}\n    )\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3986216, "supported_languages": null}, "macro.dbt.listagg": {"unique_id": "macro.dbt.listagg", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\listagg.sql", "original_file_path": "macros\\utils\\listagg.sql", "name": "listagg", "macro_sql": "{% macro listagg(measure, delimiter_text=\"','\", order_by_clause=none, limit_num=none) -%}\n    {{ return(adapter.dispatch('listagg', 'dbt') (measure, delimiter_text, order_by_clause, limit_num)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__listagg"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.3995917, "supported_languages": null}, "macro.dbt.default__listagg": {"unique_id": "macro.dbt.default__listagg", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\listagg.sql", "original_file_path": "macros\\utils\\listagg.sql", "name": "default__listagg", "macro_sql": "{% macro default__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        array_slice(\n            array_agg(\n                {{ measure }}\n            ){% if order_by_clause -%}\n            within group ({{ order_by_clause }})\n            {%- endif %}\n            ,0\n            ,{{ limit_num }}\n        ),\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    listagg(\n        {{ measure }},\n        {{ delimiter_text }}\n        )\n        {% if order_by_clause -%}\n        within group ({{ order_by_clause }})\n        {%- endif %}\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.400621, "supported_languages": null}, "macro.dbt.string_literal": {"unique_id": "macro.dbt.string_literal", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\literal.sql", "original_file_path": "macros\\utils\\literal.sql", "name": "string_literal", "macro_sql": "{%- macro string_literal(value) -%}\n  {{ return(adapter.dispatch('string_literal', 'dbt') (value)) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.4015906, "supported_languages": null}, "macro.dbt.default__string_literal": {"unique_id": "macro.dbt.default__string_literal", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\literal.sql", "original_file_path": "macros\\utils\\literal.sql", "name": "default__string_literal", "macro_sql": "{% macro default__string_literal(value) -%}\n    '{{ value }}'\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.4015906, "supported_languages": null}, "macro.dbt.position": {"unique_id": "macro.dbt.position", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\position.sql", "original_file_path": "macros\\utils\\position.sql", "name": "position", "macro_sql": "{% macro position(substring_text, string_text) -%}\n    {{ return(adapter.dispatch('position', 'dbt') (substring_text, string_text)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__position"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.4025915, "supported_languages": null}, "macro.dbt.default__position": {"unique_id": "macro.dbt.default__position", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\position.sql", "original_file_path": "macros\\utils\\position.sql", "name": "default__position", "macro_sql": "{% macro default__position(substring_text, string_text) %}\n\n    position(\n        {{ substring_text }} in {{ string_text }}\n    )\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.4025915, "supported_languages": null}, "macro.dbt.replace": {"unique_id": "macro.dbt.replace", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\replace.sql", "original_file_path": "macros\\utils\\replace.sql", "name": "replace", "macro_sql": "{% macro replace(field, old_chars, new_chars) -%}\n    {{ return(adapter.dispatch('replace', 'dbt') (field, old_chars, new_chars)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__replace"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.4035912, "supported_languages": null}, "macro.dbt.default__replace": {"unique_id": "macro.dbt.default__replace", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\replace.sql", "original_file_path": "macros\\utils\\replace.sql", "name": "default__replace", "macro_sql": "{% macro default__replace(field, old_chars, new_chars) %}\n\n    replace(\n        {{ field }},\n        {{ old_chars }},\n        {{ new_chars }}\n    )\n\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.4035912, "supported_languages": null}, "macro.dbt.right": {"unique_id": "macro.dbt.right", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\right.sql", "original_file_path": "macros\\utils\\right.sql", "name": "right", "macro_sql": "{% macro right(string_text, length_expression) -%}\n    {{ return(adapter.dispatch('right', 'dbt') (string_text, length_expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__right"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.4045928, "supported_languages": null}, "macro.dbt.default__right": {"unique_id": "macro.dbt.default__right", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\right.sql", "original_file_path": "macros\\utils\\right.sql", "name": "default__right", "macro_sql": "{% macro default__right(string_text, length_expression) %}\n\n    right(\n        {{ string_text }},\n        {{ length_expression }}\n    )\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.4055927, "supported_languages": null}, "macro.dbt.safe_cast": {"unique_id": "macro.dbt.safe_cast", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\safe_cast.sql", "original_file_path": "macros\\utils\\safe_cast.sql", "name": "safe_cast", "macro_sql": "{% macro safe_cast(field, type) %}\n  {{ return(adapter.dispatch('safe_cast', 'dbt') (field, type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.4055927, "supported_languages": null}, "macro.dbt.default__safe_cast": {"unique_id": "macro.dbt.default__safe_cast", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\safe_cast.sql", "original_file_path": "macros\\utils\\safe_cast.sql", "name": "default__safe_cast", "macro_sql": "{% macro default__safe_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.4065917, "supported_languages": null}, "macro.dbt.split_part": {"unique_id": "macro.dbt.split_part", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\split_part.sql", "original_file_path": "macros\\utils\\split_part.sql", "name": "split_part", "macro_sql": "{% macro split_part(string_text, delimiter_text, part_number) %}\n  {{ return(adapter.dispatch('split_part', 'dbt') (string_text, delimiter_text, part_number)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_duckdb.duckdb__split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.4075913, "supported_languages": null}, "macro.dbt.default__split_part": {"unique_id": "macro.dbt.default__split_part", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\split_part.sql", "original_file_path": "macros\\utils\\split_part.sql", "name": "default__split_part", "macro_sql": "{% macro default__split_part(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n        {{ part_number }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.4075913, "supported_languages": null}, "macro.dbt._split_part_negative": {"unique_id": "macro.dbt._split_part_negative", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\utils\\split_part.sql", "original_file_path": "macros\\utils\\split_part.sql", "name": "_split_part_negative", "macro_sql": "{% macro _split_part_negative(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n          length({{ string_text }})\n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 2 {{ part_number }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.4075913, "supported_languages": null}, "macro.dbt.test_unique": {"unique_id": "macro.dbt.test_unique", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "tests\\generic\\builtin.sql", "original_file_path": "tests\\generic\\builtin.sql", "name": "test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.4095912, "supported_languages": null}, "macro.dbt.test_not_null": {"unique_id": "macro.dbt.test_not_null", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "tests\\generic\\builtin.sql", "original_file_path": "tests\\generic\\builtin.sql", "name": "test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.4095912, "supported_languages": null}, "macro.dbt.test_accepted_values": {"unique_id": "macro.dbt.test_accepted_values", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "tests\\generic\\builtin.sql", "original_file_path": "tests\\generic\\builtin.sql", "name": "test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.410591, "supported_languages": null}, "macro.dbt.test_relationships": {"unique_id": "macro.dbt.test_relationships", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "tests\\generic\\builtin.sql", "original_file_path": "tests\\generic\\builtin.sql", "name": "test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1674148166.410591, "supported_languages": null}}, "docs": {"hcup.stg_sedd_description": {"unique_id": "hcup.stg_sedd_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "base\\SEDD\\stg_sedd_description.md", "original_file_path": "models\\base\\SEDD\\stg_sedd_description.md", "name": "stg_sedd_description", "block_contents": "Subset of original source file to include basic demographic and diagnosis information. We also assigned `db_file_name` to track file type."}, "hcup.stg_sedd_db_file_description": {"unique_id": "hcup.stg_sedd_db_file_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "base\\SEDD\\stg_sedd_description.md", "original_file_path": "models\\base\\SEDD\\stg_sedd_description.md", "name": "stg_sedd_db_file_description", "block_contents": "Concatenation of database and file."}, "hcup.stg_sedd_admit_date_description": {"unique_id": "hcup.stg_sedd_admit_date_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "base\\SEDD\\stg_sedd_description.md", "original_file_path": "models\\base\\SEDD\\stg_sedd_description.md", "name": "stg_sedd_admit_date_description", "block_contents": "concatenation of AYEAR + AMONTH + 01"}, "hcup.__overview__": {"unique_id": "hcup.__overview__", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "docs\\overview.md", "original_file_path": "models\\docs\\overview.md", "name": "__overview__", "block_contents": "## Welcome to UHC HCUP documentation!\r\n\r\nThis site is meant to provide documentation for HCUP data resources. HCUP is a `... insert summary of HCUP and why it may be useful for UHC/DSPH'\r\n\r\n## Navigation\r\n\r\nYou can use the Project and Database navigation tabs on the left side of the window to explore the models in your project. We recomend you stick with `Projects` as we have more control over how its organized. \r\n\r\nThere are two sections of the documentation useful for end-users:\r\n\r\n### Sources \r\n\r\nThe Sources section contains documentation for all of the original HCUP data. It is organized by database (folder) then file (file). It includes database/file summaries as well as what columns are avaiable for each file. \r\n \r\n\r\n\r\n###  Projects > hcup > models\r\n\r\nIn DBT the term `model` refers to a specific table within a database. The `models` folder contains code/blueprint for each of these specific tables. \r\n\r\n\r\n  \r\n- **base** this folder contains very simple base tables derived from our source data. The only logic contained in these models are basic column selection, renaming and type casting. The should match 1 to 1 with our source tables. This folder is organized by source database (folder) and then by model (file). End-users should not need to interact with this folder.\r\n- **intermediate** this folder contains intermediate tables that are derived from the base tables. These tables  contain merges and some basic transformations (e.g. recoding of certain variables or creation of indicator variables). This folder is organized by business/research use case (folder) and then by model (file). End-users should not need to interact with this folder.\r\n- **marts** In DBT, a `mart` type model is a subset of the larger data warehouse derived from intermediate models; `mart` models focus on a specific subject area or research use case and is designed to be consumed by end-users. This folder is organized by business/research use case (folder) and then by source file (model). **End-users should interact with this folder.**\r\n\r\n\r\n### Other folders\r\n\r\nThese folders are intended for end-users to interact with directly. But they do allow documentation on on the macros use in some of the intermediate and mart models. \r\n\r\n- **Projects > hcup > macros**: this folder contains the reusable functions aka `macros` that we wrote for this project. You can navigate through this folder to find documentation for each macro. Using macros allow us to write more concise code and avoid repeating ourselves. We split models into several folders similar to best practices recommended by the DBT community.\r\n- **Projects > hcup > analyses** (as a end-user you can ignore this one. Its mostly for internal testing.)"}, "hcup.sedd_description": {"unique_id": "hcup.sedd_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "docs\\state\\sedd\\src_sedd.md", "original_file_path": "models\\docs\\state\\sedd\\src_sedd.md", "name": "sedd_description", "block_contents": "## Abstract: HCUP State Emergency Department Databases (SEDD)\r\nThe State Emergency Department Databases (SEDD) are part of the Healthcare Cost and Utilization Project (HCUP), sponsored by the Agency for Healthcare Research and Quality (AHRQ).\r\n\r\nThe HCUP State Emergency Department Databases (SEDD) are a powerful set of databases that capture discharge information on all emergency department visits that do not result in an admission. Information on patients initially seen in the emergency room and then admitted to the hospital is included in the HCUP State Inpatient Databases (SID). To enumerate all emergency department visits, SEDD discharges should be combined with SID discharges that originate in the emergency department.\r\n\r\n- The SEDD contain the emergency department encounter abstracts from hospital-affiliated emergency departments in participating States, translated into a uniform format to facilitate multistate comparisons and analyses.\r\n- The SEDD contain a core set of clinical and nonclinical information on all visits, regardless of the expected payer, including but not limited to Medicare, Medicaid, private insurance, self-pay, or those billed as 'no charge'.\r\n- In addition to the core set of uniform data elements common to all SEDD, some State data include other elements such as the patient's race.\r\n\r\nResearchers and policymakers use the SEDD to investigate access to healthcare in a changing healthcare marketplace; identify State-specific trends in emergency department utilization, access, charges, and outcomes; and conduct market-area research and small-area variation analyses.\r\n\r\nThe individual State databases are in the same HCUP uniform format and represent 100 percent of records processed by AHRQ. However, the participating data organizations control the release of specific data elements. AHRQ is currently assisting the data organizations in the release of the 1999-2021 SEDD.\r\n\r\nThe SEDD can be linked to hospital-level data from the American Hospital Association (AHA) Annual Survey of Hospitals and county-level data from the Bureau of Health Professions' Area Resource File (ARF), except in States that do not allow the release of hospital identifiers.\r\n\r\nThirty of the data organizations participating in HCUP have agreed to release their SEDD files through the HCUP Central Distributor under the auspices of AHRQ. Uses are limited to research, analysis, and aggregate statistical reporting.\r\n\r\nUseful links include: \r\n\r\n- [SEDD database home page](https://www.hcup-us.ahrq.gov/db/state/sedddbdocumentation.jsp)\r\n- [Intro to SEDD database](https://www.hcup-us.ahrq.gov/db/state/sedddist/SEDD_Introduction.jsp)\r\n\r\n## Introduction to SEDD\r\n\r\n#### Overview\r\n\r\nThe Healthcare Cost and Utilization Project (HCUP) State Emergency Department Databases (SEDD) consist of individual data files from 42 participating data organizations. The SEDD contain information on emergency department (ED) visits to hospital-affiliated emergency departments that do not result in admissions. Information on patients initially seen in the emergency room and then admitted to the hospital is included in the HCUP State Inpatient Databases (SID). Composition and completeness of data files may vary from State to State. The SEDD are annual, State-specific files that share a common structure and common data elements. Most data elements are coded in a uniform format across all States. In addition to the core set of uniform data elements, the SEDD include State-specific data elements or data elements available only for a limited number of States. The uniform format of the SEDD helps facilitate cross-State comparisons. In addition, the SEDD, in combination with the SID, are well suited for research that requires complete enumeration of hospitals and emergency room encounters within market areas or States.\r\n\r\nThirty of the 42 participating data organizations have agreed to release their SEDD files through the HCUP Central Distributor under the auspices of AHRQ. The individual State databases are in the same HCUP uniform format. In general, they represent 100 percent of records processed by AHRQ. However, the participating data organizations control the release of specific data elements. AHRQ is currently assisting the data organizations in the release of the 1999-2021 SEDD.\r\n\r\nSEDD data sets are currently available for multiple States and years. Each release of the SEDD includes:\r\n\r\n- Data in American Standard Code for Information Interchange (ASCII) format on a compact disc with read-only memory CD-ROM.\r\n- Patient-level discharge abstract data in participating States for 100 percent of discharges from hospital-affiliated emergency departments that do not result in admissions.\r\n- American Hospital Association (AHA) Linkage File to link the SEDD to data from the AHA Annual Survey of Hospitals. This is only available for States that allow the release of hospital identifiers.\r\n\r\nThe SEDD are calendar year files for all data years except 2015. Because of the transition to ICD-10-CM/PCS1 on October 1, 2015, the 2015 SEDD are split into two parts. Nine months of the 2015 data with ICD-9-CM2 codes (discharges from Jan 1, 2015 - September 30, 2015) are in one set of files labeled Q1Q3. Three months of 2015 data with ICD-10-CM/PCS codes (discharges from October 1, 2015 - December 31, 2015) are in a separate set of files labeled Q4. More information about the changes to the HCUP databases for ICD-10-CM/PCS and use of data across the two coding system may be found on the HCUP User Support website under ICD-10-CM/PCS Resources (www.hcup-us.ahrq.gov/datainnovations/icd10_resources.jsp).\r\n\r\nSEDD documentation and tools\u2014including file specifications, programming source code for loading ASCII data into SAS (SAS Institute Inc.; Cary, NC), SPSS (IBM Corp.; Somers, NY), and Stata (StataCorp; College Station, TX), and value labels\u00e2\u20ac\u201dare available online at the HCUP User Support website www.hcup-us.ahrq.gov.\r\n\r\nStarting with the 2006 SEDD, the AHA Linkage files are available via the HCUP User Support website www.hcup-us.ahrq.gov. The AHA Linkage files may not be available when the discharge-level database is released.\r\n\r\n#### How the HCUP SEDD Differ from State Data Files\r\n\r\nThe SEDD available through the HCUP Central Distributor differ from the data files available from the data organizations in the following ways:\r\n\r\n- Data elements available on the files\r\n- Coding of data elements\r\n\r\nBecause the data organizations dictate the data elements that may be released through the HCUP Central Distributor, the data elements on the SEDD are a subset of the data collected by the corresponding data organizations. HCUP uniform coding is used on most data elements on the SEDD. A few State-specific data elements retain the original values provided by the respective data organizations.\r\n\r\n#### What is the File Structure of the SEDD in the 2019-2021 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n- Diagnosis and Procedure Groups file\r\n\r\n#### What Types of Facilities Are Included in the SEDD?\r\n\r\nThe types of hospitals are included in the SEDD depend on the information provided by the data organizations. Most State government data organizations provide information on all acute care hospitals in the respective State. Private data organizations are often restricted to member hospitals and may not provide information on all hospitals in their State. All hospitals reported by the data organizations are retained in the SEDD files.\r\n\r\nTables showing the number of hospitals in the SEDD can be found online at the HCUP User Support website (www.hcup-us.ahrq.gov). The tables present the hospitals by the number of:\r\n\r\n- Community hospitals\r\n- Hospitals not classified as community\r\n- Community hospitals not in the SEDD\r\n\r\nThe only reason a hospital is not included in the SEDD is if the data organization did not supply the necessary data.\r\n\r\nInformation contained in the AHA Annual Survey of Hospitals was used to determine if a hospital was a community hospital. Community hospitals, as defined by AHA, include \"all nonfederal, short term, general and other specialty hospitals, excluding hospital units of institutions.\" Included among community hospitals are academic medical centers and specialty hospitals such as obstetrics, gynecology, otolaryngology, short term rehabilitation, orthopedic, and pediatric hospitals. Noncommunity hospitals include Federal hospitals (e.g., Veterans Affairs, Department of Defense, and Indian Health Service hospitals), long-term hospitals, psychiatric hospitals, alcohol/chemical dependency treatment facilities, and hospital units within institutions such as prisons.\r\n\r\nSome hospitals could not be categorized as community or noncommunity hospitals because they could not be matched with AHA information. This occurs when a hospital was closed in a previous year or when the hospital does not report to the AHA.\r\n\r\n#### What is the File Structure of the SEDD in the 2019-2021 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n- Diagnosis and Procedure Groups file\r\n\r\n#### What is the File Structure of the SEDD in the 2016-2018 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the 2016 SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n\r\nUnavailable with the 2016-2018 SEDD is the Diagnosis and Procedure Groups file that had been included with the SEDD in prior data years. The data elements included in that file were derived from AHRQ software tools. If you are interested in applying the AHRQ software tools to the ICD-10-CM/PCS data in the 2016-2018 SEDD, beta versions of the AHRQ software tools are available on the HCUP User Support website at www.hcup-us.ahrq.gov/tools_software.jsp. Also available is a tutorial on how to apply the AHRQ software tools to the HCUP databases at www.hcup-us.ahrq.gov/tech_assist/tutorials.jsp."}, "hcup.sedd_aha_2016_2018_description": {"unique_id": "hcup.sedd_aha_2016_2018_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "docs\\state\\sedd\\2016_2018\\src_sedd_aha.md", "original_file_path": "models\\docs\\state\\sedd\\2016_2018\\src_sedd_aha.md", "name": "sedd_aha_2016_2018_description", "block_contents": "The AHA Linkage file contains AHA linkage data elements that allow the SEDD to be used in conjunction with the AHA Annual Survey of Hospitals' data files. These files contain information about hospital characteristics and are available for purchase through the AHA. Because the data organizations in participating States determine whether the AHA linkage data elements may be released through the HCUP Central Distributor with the SEDD, not all SEDD include AHA linkage data elements.\r\n\r\nStarting with the 2006 SEDD, the AHA Linkage files are available via the HCUP User Support website (www.hcup-us.ahrq.gov). The AHA Linkage files may not be available when the discharge-level database is released.\r\n\r\nThe AHA Linkage file is a hospital-level file with one observation per hospital or facility. To combine discharge-level files with the hospital-level file (AHA Linkage file), merge the files by the hospital identifier provided by the data source (DSHOSPID), but be careful of the different levels of aggregation. For example, the Core file may contain 5,000 discharges for DSHOSPID \"A,\" but the Hospital file contains only one record for DSHOSPID \"A.\""}, "hcup.sedd_chgs_2016_2018_description": {"unique_id": "hcup.sedd_chgs_2016_2018_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "docs\\state\\sedd\\2016_2018\\src_sedd_chgs.md", "original_file_path": "models\\docs\\state\\sedd\\2016_2018\\src_sedd_chgs.md", "name": "sedd_chgs_2016_2018_description", "block_contents": "The Charges file contains detailed charge information. There are three kinds of Charges files:\r\n\r\n1. Line item detail in which a submitted charge pertains to a specified revenue center and there may be multiple charges reported for the same revenue center. This type of Charges file includes multiple records per discharge abstract. Each record includes the following information for one service:\r\n  a. Revenue center (REVCODE))\r\n  b. Charge (CHARGE) \r\n  c. Unit of service (UNITS)\r\n  d. Current Procedural Terminology (CPT\u00ae) and Healthcare Common Procedure Coding System (HCPCS) codes (CPTHCPCS)\r\n  e. Day of service (SERVDAY) for some files\r\nFor example, if a patient had five laboratory tests, there are five records in the Charges file with information on the charge for each laboratory test. Information from this type of Charges file may be combined with the Core file by the unique record identifier (KEY), but there is not a one-to-one correspondence of records.\r\n\r\n2. Summarized detail in which charge information is summed within the revenue center. This type of Charges file includes one record per discharge abstract. Each record contains three corresponding arrays with the following information:\r\n  a. Revenue center (REVCDn)\r\n  b. Total charge for the revenue center (CHGn)\r\n  c. Total units of service for the revenue center (UNITn)\r\n\r\nFor example, if a patient had five laboratory tests, REVCD1 would include the revenue code for laboratory, CHG1 would include the total charge for the five tests, and UNIT1 would be five. To combine data elements between this type of Charges file and the Core file, merge the files by the unique record identifier (KEY). There will be a one-to-one correspondence of records.\r\n\r\n3. Collapsed detail in which charge information is summed across revenue centers. This type of Charges file includes one record per discharge abstract. Each record contains an array of collapsed charges (CHGn) that are predefined by the data organization that provided the data.\r\n\r\nConsider the example of a patient that had five laboratory tests from different revenue centers in the range of 300 to 319. CHG1, which was predefined as Laboratory Charges for revenue centers 300-319, would include the total charge for the five tests, but there is no detail on which specific revenue centers were used. To combine data elements between this type of Charges file and the Core file, merge the files by the unique record identifier (KEY). There will be a one-to-one correspondence of records.\r\n\r\nRefer to the Description of Data Elements online at the HCUP User Support website (www.hcup-us.ahrq.gov) for more information on the charge information from the different States."}, "hcup.sedd_core_2016_2018_description": {"unique_id": "hcup.sedd_core_2016_2018_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "docs\\state\\sedd\\2016_2018\\src_sedd_core.md", "original_file_path": "models\\docs\\state\\sedd\\2016_2018\\src_sedd_core.md", "name": "sedd_core_2016_2018_description", "block_contents": "The Core file is a discharge-level file that contains:\r\n\r\n- Core data elements that form the nucleus of the SEDD\r\n- State-specific data elements intended for limited use\r\n\r\nCore data elements meet at least one of the following criteria:\r\n\r\n- Are available from all or nearly all data sources\r\n- Lend themselves to uniform coding across sources\r\n- Are needed for traditional applications (e.g., patient age, sex)\r\n\r\nState-specific data elements meet at least one of the following criteria:\r\n\r\n- Are available from a limited number of sources\r\n- Do not lend themselves to uniform coding across sources\r\n- Are not needed for traditional applications\r\n\r\nThe Core file is a discharge-level file with one observation per discharge abstract."}, "hcup.sedd_2016_2018_description": {"unique_id": "hcup.sedd_2016_2018_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "docs\\state\\sedd\\2016_2018\\src_sedd_year.md", "original_file_path": "models\\docs\\state\\sedd\\2016_2018\\src_sedd_year.md", "name": "sedd_2016_2018_description", "block_contents": "**What is the File Structure of the SEDD in the 2016-2018 Files?**\r\n\r\nBased on the availability of data elements across States, data elements included in the 2016 SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n\r\nUnavailable with the 2016-2018 SEDD is the Diagnosis and Procedure Groups file that had been included with the SEDD in prior data years. The data elements included in that file were derived from AHRQ software tools. If you are interested in applying the AHRQ software tools to the ICD-10-CM/PCS data in the 2016-2018 SEDD, beta versions of the AHRQ software tools are available on the HCUP User Support website at www.hcup-us.ahrq.gov/tools_software.jsp. Also available is a tutorial on how to apply the AHRQ software tools to the HCUP databases at www.hcup-us.ahrq.gov/tech_assist/tutorials.jsp."}, "hcup.sedd_aha_2019_2021_description": {"unique_id": "hcup.sedd_aha_2019_2021_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "docs\\state\\sedd\\2019_2021\\src_sedd_aha.md", "original_file_path": "models\\docs\\state\\sedd\\2019_2021\\src_sedd_aha.md", "name": "sedd_aha_2019_2021_description", "block_contents": "The AHA Linkage file contains AHA linkage data elements that allow the SEDD to be used in conjunction with the AHA Annual Survey of Hospitals' data files. These files contain information about hospital characteristics and are available for purchase through the AHA. Because the data organizations in participating States determine whether the AHA linkage data elements may be released through the HCUP Central Distributor with the SEDD, not all SEDD include AHA linkage data elements.\r\n\r\nStarting with the 2006 SEDD, the AHA Linkage files are available via the HCUP User Support website (www.hcup-us.ahrq.gov). The AHA Linkage files may not be available when the discharge-level database is released.\r\n\r\nThe AHA Linkage file is a hospital-level file with one observation per hospital or facility. To combine discharge-level files with the hospital-level file (AHA Linkage file), merge the files by the hospital identifier provided by the data source (DSHOSPID), but be careful of the different levels of aggregation. For example, the Core file may contain 5,000 discharges for DSHOSPID \"A,\" but the Hospital file contains only one record for DSHOSPID \"A.\""}, "hcup.sedd_chgs_2019_2021_description": {"unique_id": "hcup.sedd_chgs_2019_2021_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "docs\\state\\sedd\\2019_2021\\src_sedd_chgs.md", "original_file_path": "models\\docs\\state\\sedd\\2019_2021\\src_sedd_chgs.md", "name": "sedd_chgs_2019_2021_description", "block_contents": "The Charges file contains detailed charge information. There are three kinds of Charges files:\r\n\r\n1. Line item detail in which a submitted charge pertains to a specified revenue center and there may be multiple charges reported for the same revenue center. This type of Charges file includes multiple records per discharge abstract. Each record includes the following information for one service:\r\n  a. Revenue center (REVCODE))\r\n  b. Charge (CHARGE) \r\n  c. Unit of service (UNITS)\r\n  d. Current Procedural Terminology (CPT\u00ae) and Healthcare Common Procedure Coding System (HCPCS) codes (CPTHCPCS)\r\n  e. Day of service (SERVDAY) for some files\r\nFor example, if a patient had five laboratory tests, there are five records in the Charges file with information on the charge for each laboratory test. Information from this type of Charges file may be combined with the Core file by the unique record identifier (KEY), but there is not a one-to-one correspondence of records.\r\n\r\n2. Summarized detail in which charge information is summed within the revenue center. This type of Charges file includes one record per discharge abstract. Each record contains three corresponding arrays with the following information:\r\n  a. Revenue center (REVCDn)\r\n  b. Total charge for the revenue center (CHGn)\r\n  c. Total units of service for the revenue center (UNITn)\r\n\r\nFor example, if a patient had five laboratory tests, REVCD1 would include the revenue code for laboratory, CHG1 would include the total charge for the five tests, and UNIT1 would be five. To combine data elements between this type of Charges file and the Core file, merge the files by the unique record identifier (KEY). There will be a one-to-one correspondence of records.\r\n\r\n3. Collapsed detail in which charge information is summed across revenue centers. This type of Charges file includes one record per discharge abstract. Each record contains an array of collapsed charges (CHGn) that are predefined by the data organization that provided the data.\r\n\r\nConsider the example of a patient that had five laboratory tests from different revenue centers in the range of 300 to 319. CHG1, which was predefined as Laboratory Charges for revenue centers 300-319, would include the total charge for the five tests, but there is no detail on which specific revenue centers were used. To combine data elements between this type of Charges file and the Core file, merge the files by the unique record identifier (KEY). There will be a one-to-one correspondence of records.\r\n\r\nRefer to the Description of Data Elements online at the HCUP User Support website (www.hcup-us.ahrq.gov) for more information on the charge information from the different States."}, "hcup.sedd_core_2019_2021_description": {"unique_id": "hcup.sedd_core_2019_2021_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "docs\\state\\sedd\\2019_2021\\src_sedd_core.md", "original_file_path": "models\\docs\\state\\sedd\\2019_2021\\src_sedd_core.md", "name": "sedd_core_2019_2021_description", "block_contents": "The Core file is an encounter-level file that contains:\r\n\r\n- Core data elements that form the nucleus of the SEDD\r\n- State-specific data elements intended for limited use\r\n\r\nCore data elements meet at least one of the following criteria:\r\n- Are available from all or nearly all data sources\r\n- Lend themselves to uniform coding across sources\r\n- Are needed for traditional applications (e.g., patient age, sex)\r\n\r\nState-specific data elements meet at least one of the following criteria:\r\n\r\n- Are available from a limited number of sources\r\n- Do not lend themselves to uniform coding across sources\r\n- Are not needed for traditional applications\r\n\r\nThe Core file is a discharge-level file with one observation per discharge abstract."}, "hcup.sedd_diag_2019_2021_description": {"unique_id": "hcup.sedd_diag_2019_2021_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "docs\\state\\sedd\\2019_2021\\src_sedd_diag.md", "original_file_path": "models\\docs\\state\\sedd\\2019_2021\\src_sedd_diag.md", "name": "sedd_diag_2019_2021_description", "block_contents": "Diagnosis and Procedure Groups file is an encounter-level file that contains data elements from AHRQ software tools. They are designed to facilitate the use of the International Classification of Diseases, Tenth Revision, Clinical Modification (ICD-10-CM/PCS) diagnostic and procedure information in the HCUP databases. The unit of observation is an emergency department visit. The HCUP unique record identifier (KEY) provides the linkage between the Core files and the Diagnosis and Procedure Groups files. These files are available beginning with the 2005 SEDD."}, "hcup.sedd_2019_2021_description": {"unique_id": "hcup.sedd_2019_2021_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "docs\\state\\sedd\\2019_2021\\src_sedd_year.md", "original_file_path": "models\\docs\\state\\sedd\\2019_2021\\src_sedd_year.md", "name": "sedd_2019_2021_description", "block_contents": "What is the File Structure of the SEDD in the 2019-2021 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n- Diagnosis and Procedure Groups file"}, "hcup.sid_description": {"unique_id": "hcup.sid_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "docs\\state\\sid\\src_sid.md", "original_file_path": "models\\docs\\state\\sid\\src_sid.md", "name": "sid_description", "block_contents": "## Abstract: HCUP State Inpatient Databases (SID) \r\nThe State Inpatient Databases (SID) are part of the Healthcare Cost and Utilization Project (HCUP), sponsored by the Agency for Healthcare Research and Quality (AHRQ).\r\n\r\nThe HCUP State Inpatient Databases (SID) are a powerful set of hospital databases from data organizations in participating States.\r\n\r\n- The SID contain the universe of the inpatient discharge abstracts from participating States that are translated into a uniform format to facilitate multistate comparisons and analyses.\r\n- Together, the SID encompass almost 97 percent of all U.S. hospital discharges. Some States include discharges from specialty hospitals, such as acute psychiatric hospitals.\r\n- The SID contain a core set of clinical and nonclinical information on all visits, regardless of the expected payer, including but not limited to Medicare, Medicaid, private insurance, self-pay, or those billed as 'no charge'.\r\n- In addition to the core set of uniform data elements common to all SID, some include other elements such as the patient's race.\r\n\r\nResearchers and policymakers use SID to investigate questions unique to one State; to compare data from two or more States; to conduct market-area variation analyses; and to identify State-specific trends in inpatient care utilization, access, charges, and outcomes.\r\n\r\nThe individual State databases are in the same HCUP uniform format and represent 100 percent of records processed by AHRQ. However, the participating data organizations control the release of specific data elements. AHRQ is currently assisting the data organizations in the release of the 1990-2021 SID.\r\n\r\nThe SID can be linked to hospital-level data from the American Hospital Association's Annual Survey of Hospitals and county-level data from the Bureau of Health Professions' Area Resource File, except in those States that do not allow the release of hospital identifiers.\r\n\r\nThirty-six of the data organizations participating in the HCUP have agreed to release their SID files through the HCUP Central Distributor under the auspices of the AHRQ. Uses are limited to research and aggregate statisitical reporting.\r\n\r\nUseful links include: \r\n\r\n- [SEDD database home page](https://www.hcup-us.ahrq.gov/db/state/sedddbdocumentation.jsp)\r\n- [Intro to SEDD database](https://www.hcup-us.ahrq.gov/db/state/sedddist/SEDD_Introduction.jsp)\r\n\r\n\r\n## Introduction to SID\r\n\r\n#### Overview\r\nThe Healthcare Cost and Utilization Project (HCUP) State Inpatient Databases (SID) consist of individual data files from data organizations in 49 participating data organizations. In general, the SID contain the universe of that State's hospital inpatient discharge records. They are composed of annual, State-specific files that share a common structure and common data elements. Most data elements are coded in a uniform format across all States. In addition to the core set of uniform data elements, the SID include State-specific data elements or data elements available only for a limited number of States. The uniform format of the SID helps facilitate cross-State comparisons. In addition, the SID are well suited for research that requires complete enumeration of hospitals and discharges within market areas or States.\r\n\r\nThirty-six of the 49 data organizations that participate in the HCUP have agreed to release their State-specific files through the HCUP Central Distributor under the auspices of AHRQ. The individual state databases are in the same HCUP uniform format and represent 100 percent of records processed by AHRQ. However, the participating data organizations control the release of specific data elements.\r\n\r\nSID data sets are currently available for multiple States and years. Each release of the SID includes:\r\n\r\n- Data in American Standard Code for Information Interchange (ASCII) format on a compact disc with read-only memory (CD-ROM).\r\n- Patient-level hospital discharge abstract data for 100 percent of discharges from hospitals in participating States.\r\n- American Hospital Association (AHA) Linkage File to link the SID to data from the AHA Annual Survey of Hospitals. This is only available for those States that allow the release of hospital identifiers.\r\n\r\nThe SID are calendar year files for all data years except 2015. Because of the transition to ICD-10-CM/PCS1 on October 1, 2015, the 2015 SID are split into two parts. Nine months of the 2015 data with ICD-9-CM2 codes (discharges from January 1, 2015 - September 30, 2015) are in one set of files labeled Q1Q3. Three months of 2015 data with ICD-10-CM/PCS codes (discharges from October 1, 2015 - December 31, 2015) are in a separate set of files labeled Q4. More information about the changes to the HCUP databases for ICD-10-CM/PCS and use of data across the two coding system may be found on the HCUP User Support website under ICD-10-CM/PCS Resources (www.hcup-us.ahrq.gov/datainnovations/icd10_resources.jsp).\r\n\r\nSID documentation and tools\u2014including file specifications, programming source code for loading ASCII data into SAS (SAS Institute Inc.; Cary, NC), SPSS (IBM Corp.; Somers, NY), and Stata (StataCorp; College Station, TX), and value labels\u2014are available online at the HCUP User Support website (www.hcup-us.ahrq.gov).\r\n\r\nStarting with the 2006 SID, the AHA Linkage files are available via the HCUP User Support website www.hcup-us.ahrq.gov. The AHA Linkage files may not be available when the discharge-level database is released.\r\n\r\n#### How the HCUP SID Differ from State Data Files\r\n\r\nHow the HCUP SID Differ from State Data Files\r\n\r\nThe SID available through the HCUP Central Distributor differ from the data files available from the data organizations in the following ways:\r\n\r\n- Data elements available on the files\r\n- Coding of data elements\r\n\r\nBecause the data organizations dictate the data elements that may be released through the HCUP Central Distributor, the data elements on the SID are a subset of the data collected by the corresponding data organizations. HCUP uniform coding is used on most data elements on the SID. A few State-specific data elements retain the original values provided by the respective data organizations.\r\n\r\n#### What Types of Hospitals Are Included in the SID?\r\n\r\nThe types of hospitals included in the SID depend on the information provided by the data organizations and how the files were handled during HCUP processing. Most State government data organizations provide information on all acute care hospitals in the respective State. Private data organizations are often restricted to member hospitals and may not provide information on all hospitals in their State.\r\n\r\nBeginning with the 1994 SID, all hospitals reported by the data organizations were retained in the SID files. Discharges from facilities such as psychiatric facilities, alcohol and drug dependency facilities, and State, Federal, and Veterans Affairs hospitals will be in the SID, if reported by the data source. Prior to 1994, only discharges from community hospitals were retained in the SID.\r\n\r\nCommunity hospitals, as defined by the AHA, include \"all nonfederal, short term, general and other specialty hospitals, excluding hospital units of institutions.\" Included among community hospitals are academic medical centers and specialty hospitals such as obstetrics, gynecology, otolaryngology, short term rehabilitation, orthopedic, and pediatric hospitals. Noncommunity hospitals include Federal hospitals (e.g., Veterans Affairs, Department of Defense, and Indian Health Service hospitals), long-term hospitals, psychiatric hospitals, alcohol/chemical dependency treatment facilities, and hospital units within institutions such as prisons.\r\n\r\nSome community hospitals may not be included in the SID because their data were not provided by the data source. To identify community hospitals, the SID must be linked to the AHA Annual Survey of Hospitals by the AHA hospital identifier.\r\n\r\nTables showing the number of hospitals in the SID can be found online at the HCUP User Support website: (www.hcup-us.ahrq.gov). The tables present the hospitals by the number of hospitals of:\r\n\r\n- Community hospitals\r\n- Hospitals not classified as community\r\n- Community hospitals not in the SID\r\n\r\nInformation contained in the AHA Annual Survey of Hospitals was used to determine if a hospital was a community hospital. Some hospitals could not be categorized as community or noncommunity hospitals because they could not be matched with AHA information. This occurs when a hospital was closed in a previous year or when the hospital does not report to the AHA.\r\n\r\n#### What is the File Structure of the SEDD in the 2019-2021 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n- Diagnosis and Procedure Groups file\r\n\r\n#### What is the File Structure of the SEDD in the 2016-2018 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the 2016 SEDD are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n\r\nUnavailable with the 2016-2018 SEDD is the Diagnosis and Procedure Groups file that had been included with the SEDD in prior data years. The data elements included in that file were derived from AHRQ software tools. If you are interested in applying the AHRQ software tools to the ICD-10-CM/PCS data in the 2016-2018 SEDD, beta versions of the AHRQ software tools are available on the HCUP User Support website at www.hcup-us.ahrq.gov/tools_software.jsp. Also available is a tutorial on how to apply the AHRQ software tools to the HCUP databases at www.hcup-us.ahrq.gov/tech_assist/tutorials.jsp."}, "hcup.sid_aha_2016_2018_description": {"unique_id": "hcup.sid_aha_2016_2018_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "docs\\state\\sid\\2016_2018\\src_sid_aha.md", "original_file_path": "models\\docs\\state\\sid\\2016_2018\\src_sid_aha.md", "name": "sid_aha_2016_2018_description", "block_contents": "The AHA Linkage file contains AHA linkage data elements that allow the SID to be used in conjunction with the AHA Annual Survey of Hospitals data files. These files contain information about hospital characteristics and are available for purchase through the AHA. Because the data organizations in participating States determine whether the AHA linkage data elements may be released through the HCUP Central Distributor with the SID, not all SID include AHA linkage data elements.\r\n\r\nThe AHA Linkage file is a hospital-level file with one observation per hospital or facility. To combine the discharge-level files with the hospital-level file (AHA Linkage file), merge the files by the hospital identifier provided by the data source (DSHOSPID), but be careful of the different levels of aggregation. For example, the Core file may contain 5,000 discharges for DSHOSPID \"A,\" but the Hospital file contains only 1 record for DSHOSPID \"A.\"\r\n\r\nStarting with the 2006 SID, the AHA Linkage files are available via the HCUP User Support website (www.hcup-us.ahrq.gov). The AHA Linkage files may not be available when the discharge-level database is released."}, "hcup.sid_chgs_2016_2018_description": {"unique_id": "hcup.sid_chgs_2016_2018_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "docs\\state\\sid\\2016_2018\\src_sid_chgs.md", "original_file_path": "models\\docs\\state\\sid\\2016_2018\\src_sid_chgs.md", "name": "sid_chgs_2016_2018_description", "block_contents": "The Charges file contains detailed charge information. There are three kinds of Charges files:\r\n\r\n## 1. Summarized detail\r\n\r\nSummarized detail in which charge information is summed within the revenue center. This type of Charges file includes one record per discharge abstract. Each record contains three corresponding arrays with the following information:\r\n\r\n- Revenue center (REVCDn)\r\n- Total charge for the revenue center (CHGn)\r\n- Total units of service for the revenue center (UNITn)\r\n\r\nFor example, if a patient had five laboratory tests, REVCD1 would include the revenue code for laboratory, CHG1 would include the total charge for the five tests, and UNIT1 would be five. To combine data elements between this type of Charges file and the Core file, merge the files by the unique record identifier (KEY). There will be a one-to-one correspondence of records.\r\n\r\n## 2. Collapsed detail\r\n\r\nCollapsed detail in which charge information is summed across revenue centers. This type of Charges file includes one record per discharge abstract. Each record contains an array of collapsed charges (CHGn) that are predefined by the data organization that provided the data.\r\n\r\nConsider the example of a patient that had five laboratory tests from different revenue centers in the range of 300 to 319. CHG1, which was predefined as Laboratory Charges for revenue centers 300-319, would include the total charge for the five tests, but there is no detail on which specific revenue centers were used. To combine data elements between this type of Charges file and the Core file, merge the files by the unique record identifier (KEY). There will be a one-to-one correspondence of records.\r\n\r\n## 3. Line level details\r\n\r\nLine item detail in which a submitted charge pertains to a specified revenue center and there may be multiple charges reported for the same revenue center. This type of Charges file includes multiple records per discharge abstract. Each record includes the following information for one service.\r\n\r\n- Revenue center (REVCODE)\r\n- Charge (CHARGE)\r\n- Unit of service (UNITS)\r\n- Day of service (SERVDAY) for some files\r\n\r\nFor example, if a patient had five laboratory tests, there are five records in the Charges file with information on the charge for each laboratory test. Information from this type of Charges file may be combined with the Core file by the unique record identifier (KEY), but there is not a one-to-one correspondence of records.\r\n\r\nRefer to the Description of Data Elements online at the HCUP User Support website (www.hcup-us.ahrq.gov) for more information on the charge information from the different States."}, "hcup.sid_core_2016_2018_description": {"unique_id": "hcup.sid_core_2016_2018_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "docs\\state\\sid\\2016_2018\\src_sid_core.md", "original_file_path": "models\\docs\\state\\sid\\2016_2018\\src_sid_core.md", "name": "sid_core_2016_2018_description", "block_contents": "The Core file is a discharge-level file that contains:\r\n\r\n- Core data elements that form the nucleus of the SID\r\n- State-specific data elements intended for limited use\r\n\r\nCore data elements meet at least one of the following criteria:\r\n\r\n- Are available from all or nearly all data sources\r\n- Lend themselves to uniform coding across sources\r\n- Are needed for traditional applications (e.g., length of stay, patient age)\r\n\r\nState-specific data elements meet at least one of the following criteria:\r\n\r\n- Are available from a limited number of sources\r\n- Do not lend themselves to uniform coding across sources\r\n- Are not needed for traditional applications"}, "hcup.sid_2016_2018_description": {"unique_id": "hcup.sid_2016_2018_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "docs\\state\\sid\\2016_2018\\src_sid_year.md", "original_file_path": "models\\docs\\state\\sid\\2016_2018\\src_sid_year.md", "name": "sid_2016_2018_description", "block_contents": "What is the File Structure of the SID in the 2016-2018 Files?\r\n\r\nBased on the availability of data elements across States, data elements included in the 2016-2018 SID are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n\r\nUnavailable with the 2016-2018 SID are two file types that had been included with the SID in prior data years: the Diagnosis and Procedure Groups file and the Disease Severity file. The data elements included in those two files were derived from AHRQ software tools. If you are interested in applying the AHRQ software tools to the ICD-10-CM/PCS data in the 2016-2018 SID, beta versions of the AHRQ software tools are available on the HCUP User Support website at www.hcup-us.ahrq.gov/tools_software.jsp. Also available is a tutorial on how to apply the AHRQ software tools to the HCUP databases at www.hcup-us.ahrq.gov/tech_assist/tutorials.jsp."}, "hcup.sid_aha_2019_2021_description": {"unique_id": "hcup.sid_aha_2019_2021_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "docs\\state\\sid\\2019_2021\\ny\\src_sid_aha.md", "original_file_path": "models\\docs\\state\\sid\\2019_2021\\ny\\src_sid_aha.md", "name": "sid_aha_2019_2021_description", "block_contents": "The AHA Linkage file contains AHA linkage data elements that allow the SID to be used in conjunction with the AHA Annual Survey of Hospitals data files. These files contain information about hospital characteristics and are available for purchase through the AHA. Because the data organizations in participating States determine whether the AHA linkage data elements may be released through the HCUP Central Distributor with the SID, not all SID include AHA linkage data elements.\r\n\r\nThe AHA Linkage file is a hospital-level file with one observation per hospital or facility. To combine the discharge-level files with the hospital-level file (AHA Linkage file), merge the files by the hospital identifier provided by the data source (DSHOSPID), but be careful of the different levels of aggregation. For example, the Core file may contain 5,000 discharges for DSHOSPID \"A,\" but the Hospital file contains only 1 record for DSHOSPID \"A.\"\r\n\r\nStarting with the 2006 SID, the AHA Linkage files are available via the HCUP User Support website (www.hcup-us.ahrq.gov). The AHA Linkage files may not be available when the discharge-level database is released."}, "hcup.sid_chgs_2019_2021_description": {"unique_id": "hcup.sid_chgs_2019_2021_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "docs\\state\\sid\\2019_2021\\ny\\src_sid_chgs.md", "original_file_path": "models\\docs\\state\\sid\\2019_2021\\ny\\src_sid_chgs.md", "name": "sid_chgs_2019_2021_description", "block_contents": "The Charges file contains detailed charge information. There are three kinds of Charges files:\r\n\r\n## 1. Summarized detail\r\n\r\nSummarized detail in which charge information is summed within the revenue center. This type of Charges file includes one record per discharge abstract. Each record contains three corresponding arrays with the following information:\r\n\r\n- Revenue center (REVCDn)\r\n- Total charge for the revenue center (CHGn)\r\n- Total units of service for the revenue center (UNITn)\r\n\r\nFor example, if a patient had five laboratory tests, REVCD1 would include the revenue code for laboratory, CHG1 would include the total charge for the five tests, and UNIT1 would be five. To combine data elements between this type of Charges file and the Core file, merge the files by the unique record identifier (KEY). There will be a one-to-one correspondence of records.\r\n\r\n## 2. Collapsed detail\r\n\r\nCollapsed detail in which charge information is summed across revenue centers. This type of Charges file includes one record per discharge abstract. Each record contains an array of collapsed charges (CHGn) that are predefined by the data organization that provided the data.\r\n\r\nConsider the example of a patient that had five laboratory tests from different revenue centers in the range of 300 to 319. CHG1, which was predefined as Laboratory Charges for revenue centers 300-319, would include the total charge for the five tests, but there is no detail on which specific revenue centers were used. To combine data elements between this type of Charges file and the Core file, merge the files by the unique record identifier (KEY). There will be a one-to-one correspondence of records.\r\n\r\n## 3. Line item detail\r\n\r\nLine item detail in which a submitted charge pertains to a specified revenue center and there may be multiple charges reported for the same revenue center. This type of Charges file includes multiple records per discharge abstract. Each record includes the following information for one service.\r\n\r\n- Revenue center (REVCODE)\r\n- Charge (CHARGE)\r\n- Unit of service (UNITS)\r\n- Day of service (SERVDAY) for some files\r\n\r\nFor example, if a patient had five laboratory tests, there are five records in the Charges file with information on the charge for each laboratory test. Information from this type of Charges file may be combined with the Core file by the unique record identifier (KEY), but there is not a one-to-one correspondence of records.\r\n\r\nRefer to the Description of Data Elements online at the HCUP User Support website (www.hcup-us.ahrq.gov) for more information on the charge information from the different States."}, "hcup.sid_core_2019_2021_description": {"unique_id": "hcup.sid_core_2019_2021_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "docs\\state\\sid\\2019_2021\\ny\\src_sid_core.md", "original_file_path": "models\\docs\\state\\sid\\2019_2021\\ny\\src_sid_core.md", "name": "sid_core_2019_2021_description", "block_contents": "The Core file is a discharge-level file that contains:\r\n\r\n- Core data elements that form the nucleus of the SID\r\n- State-specific data elements intended for limited use\r\n\r\nCore data elements meet at least one of the following criteria:\r\n\r\n- Are available from all or nearly all data sources\r\n- Lend themselves to uniform coding across sources\r\n- Are needed for traditional applications (e.g., length of stay, patient age)\r\n\r\nState-specific data elements meet at least one of the following criteria:\r\n\r\n- Are available from a limited number of sources\r\n- Do not lend themselves to uniform coding across sources\r\n- Are not needed for traditional applications"}, "hcup.sid_diag_2019_2021_description": {"unique_id": "hcup.sid_diag_2019_2021_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "docs\\state\\sid\\2019_2021\\ny\\src_sid_diag.md", "original_file_path": "models\\docs\\state\\sid\\2019_2021\\ny\\src_sid_diag.md", "name": "sid_diag_2019_2021_description", "block_contents": "Diagnosis and Procedure Groups File is a discharge-level file that contains data elements from AHRQ software tools designed to facilitate the use of the International Classification of Diseases, Tenth Revision, Clinical Modification (ICD-10-CM/PCS) diagnostic and procedure information in the HCUP databases. The unit of observation is an inpatient stay record. The HCUP unique record identifier (KEY) provides the linkage between the Core files and the Diagnosis and Procedure Groups files. These files are available beginning with the 2019 SID."}, "hcup.sid_2019_2021_description": {"unique_id": "hcup.sid_2019_2021_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "docs\\state\\sid\\2019_2021\\ny\\src_sid_year.md", "original_file_path": "models\\docs\\state\\sid\\2019_2021\\ny\\src_sid_year.md", "name": "sid_2019_2021_description", "block_contents": "Based on the availability of data elements across States, data elements included in the 2019-2021 SID are structured as follows:\r\n\r\n- Core file\r\n- Charges file\r\n- AHA Linkage file\r\n- Diagnosis and Procedure Groups file"}, "hcup.int_sedd_flu_description": {"unique_id": "hcup.int_sedd_flu_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "intermediate\\flu\\int_sedd_flu.md", "original_file_path": "models\\intermediate\\flu\\int_sedd_flu.md", "name": "int_sedd_flu_description", "block_contents": "True or false indicator for flu related dx codes. True if  either the primary or secondary ICD-10-CM Reason for visit diagnosis or  ICD-10-CM Diagnosis is a flu related dx code. See the `dx_flag_flu` macro for details"}, "hcup.int_sedd_flu_like_description": {"unique_id": "hcup.int_sedd_flu_like_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "intermediate\\flu\\int_sedd_flu.md", "original_file_path": "models\\intermediate\\flu\\int_sedd_flu.md", "name": "int_sedd_flu_like_description", "block_contents": "True or false indicator for flu-like related dx codes. True if  either the primary or secondary ICD-10-CM Reason for visit diagnosis or  ICD-10-CM Diagnosis is a flu-like related dx code. See the `dx_flag_flu_like` macro for details"}, "hcup.int_sedd_ili_diagnosis_var_description": {"unique_id": "hcup.int_sedd_ili_diagnosis_var_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "intermediate\\flu\\int_sedd_flu.md", "original_file_path": "models\\intermediate\\flu\\int_sedd_flu.md", "name": "int_sedd_ili_diagnosis_var_description", "block_contents": "Categorical indicator for influenza-like illness (ILI) diagnosis operationalized from the `flu` or `flu_like` intermediate indicators. There are three possible values:\r\n\r\n- \"BOTH\" if a patient has both flu and flu-like diagnoses\r\n- \"ILI\" if a patient has only flu diagnoses\r\n- \"ILI LIKE\" if a patient has only flu-like diagnoses\r\n- \"OTHER\" if a patient has neither flu nor flu-like diagnoses"}, "hcup.mart__er_flu__line_level_description": {"unique_id": "hcup.mart__er_flu__line_level_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "marts\\flu\\line_level\\mart__er_flu__line_level.md", "original_file_path": "models\\marts\\flu\\line_level\\mart__er_flu__line_level.md", "name": "mart__er_flu__line_level_description", "block_contents": "This final user facing model is meant the analysis of all emergency room HCUP related encounters for NY for the years of 2017 and 2018. It includes basic demographics as well as indiciators for flu, flu-like or ILI diagnosis. Staging and intermediate columns are removed.\r\n\r\nTo access this table, you can use the following code:\r\n\r\n```r\r\nlibrary(dplyr)\r\nlibrary(arrow)\r\n\r\n## work within Arrow \r\ndb = arrow::open_dataset(\"\\\\\\\\files.drexel.edu\\\\encrypted\\\\SOPH\\\\UHC\\\\SchnakeMahl_HCUP\\\\dbt\\\\v0\\\\models\\\\mart__er_flu__line_level.parquet\")\r\ndb %>% filter(flu) \r\n\r\n## work  within RAM\r\ndf = db %>% collect()\r\ndf %>% filter(flu) \r\n\r\n```"}, "hcup.mart__er_flu__zip_level_description": {"unique_id": "hcup.mart__er_flu__zip_level_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "marts\\flu\\zip_level\\mart__er_flu__zip_level.md", "original_file_path": "models\\marts\\flu\\zip_level\\mart__er_flu__zip_level.md", "name": "mart__er_flu__zip_level_description", "block_contents": "This final user facing table is meant the analysis of all emergency room HCUP related encounters for NY for the years of 2017 and 2018; all counts are aggregated at the zip-code level. It includes basic demographics as well as indiciators for flu, flu-like or ILI diagnosis. Staging and intermediate columns are removed. \r\n\r\nTo access this table, you can use the following code:\r\n\r\n```r\r\nlibrary(dplyr)\r\nlibrary(arrow)\r\n\r\n## work within Arrow \r\ndb = arrow::open_dataset(\"\\\\\\\\files.drexel.edu\\\\encrypted\\\\SOPH\\\\UHC\\\\SchnakeMahl_HCUP\\\\dbt\\\\v0\\\\models\\\\mart__er_flu__zip_level.parquet\")\r\ndb %>% filter(flu) \r\n\r\n## work  within RAM\r\ndf = db %>% collect()\r\ndf %>% filter(flu) \r\n\r\n```"}, "hcup.mart__er_flu__zip_level_n_description": {"unique_id": "hcup.mart__er_flu__zip_level_n_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "marts\\flu\\zip_level\\mart__er_flu__zip_level.md", "original_file_path": "models\\marts\\flu\\zip_level\\mart__er_flu__zip_level.md", "name": "mart__er_flu__zip_level_n_description", "block_contents": "this columns is the count of encounters by AGE, RACE, HISPANIC, ZIP, FEMALE, flu, flu_like, ili_diagnosis_var."}, "hcup.mart__er_flu__zip_level_refactor_description": {"unique_id": "hcup.mart__er_flu__zip_level_refactor_description", "package_name": "hcup", "root_path": "D:\\git\\hcup-dbt", "path": "marts\\flu\\zip_level\\mart__er_flu__zip_level_refactor.md", "original_file_path": "models\\marts\\flu\\zip_level\\mart__er_flu__zip_level_refactor.md", "name": "mart__er_flu__zip_level_refactor_description", "block_contents": "This final user facing table is meant the analysis of all emergency room HCUP related encounters for NY for the years of 2017 and 2018; all counts are aggregated at the zip-code level. It includes basic demographics as well as indiciators for flu, flu-like or ILI diagnosis. Staging and intermediate columns are removed. \r\n\r\nTo access this table, you can use the following code:\r\n\r\n```r\r\nlibrary(dplyr)\r\nlibrary(arrow)\r\n\r\n## work within Arrow \r\ndb = arrow::open_dataset(\"\\\\\\\\files.drexel.edu\\\\encrypted\\\\SOPH\\\\UHC\\\\SchnakeMahl_HCUP\\\\dbt\\\\v0\\\\models\\\\mart__er_flu__zip_level_refactor.parquet\")\r\ndb %>% filter(flu) \r\n\r\n## work  within RAM\r\ndf = db %>% collect()\r\ndf %>% filter(flu) \r\n```"}, "dbt.__overview__": {"unique_id": "dbt.__overview__", "package_name": "dbt", "root_path": "d:\\git\\hcup-dbt\\.venv\\lib\\site-packages\\dbt\\include\\global_project", "path": "overview.md", "original_file_path": "docs\\overview.md", "name": "__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--select` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/introduction)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [dbt Community](https://www.getdbt.com/community/) for questions and discussion"}}, "exposures": {}, "metrics": {}, "selectors": {}, "disabled": {}, "parent_map": {"model.hcup.stg_ny_sedd_2017_core": ["source.hcup.SEDD.NY_SEDD_2017_CORE"], "model.hcup.stg_ny_sedd_2018_core": ["source.hcup.SEDD.NY_SEDD_2018_CORE"], "model.hcup.int_sedd_flu_line_level": ["model.hcup.stg_ny_sedd_2017_core", "model.hcup.stg_ny_sedd_2018_core"], "model.hcup.mart__er_flu__line_level": ["model.hcup.int_sedd_flu_line_level"], "model.hcup.mart__er_flu__zip_level": ["model.hcup.mart__er_flu__line_level"], "model.hcup.mart__er_flu__zip_level_refactor": ["model.hcup.mart__er_flu__line_level"], "analysis.hcup.dev__sedd_dbt_prod_test": ["source.hcup.SEDD.NY_SEDD_2017_CHGS"], "source.hcup.SEDD.NY_SEDD_2017_CHGS": [], "source.hcup.SEDD.NY_SEDD_2017_CORE": [], "source.hcup.SEDD.NY_SEDD_2018_CHGS": [], "source.hcup.SEDD.NY_SEDD_2018_CORE": [], "source.hcup.SID.NY_SID_2017_CHGS": [], "source.hcup.SID.NY_SID_2017_CORE": [], "source.hcup.SID.NY_SID_2018_CHGS": [], "source.hcup.SID.NY_SID_2018_CORE": []}, "child_map": {"model.hcup.stg_ny_sedd_2017_core": ["model.hcup.int_sedd_flu_line_level"], "model.hcup.stg_ny_sedd_2018_core": ["model.hcup.int_sedd_flu_line_level"], "model.hcup.int_sedd_flu_line_level": ["model.hcup.mart__er_flu__line_level"], "model.hcup.mart__er_flu__line_level": ["model.hcup.mart__er_flu__zip_level", "model.hcup.mart__er_flu__zip_level_refactor"], "model.hcup.mart__er_flu__zip_level": [], "model.hcup.mart__er_flu__zip_level_refactor": [], "analysis.hcup.dev__sedd_dbt_prod_test": [], "source.hcup.SEDD.NY_SEDD_2017_CHGS": ["analysis.hcup.dev__sedd_dbt_prod_test"], "source.hcup.SEDD.NY_SEDD_2017_CORE": ["model.hcup.stg_ny_sedd_2017_core"], "source.hcup.SEDD.NY_SEDD_2018_CHGS": [], "source.hcup.SEDD.NY_SEDD_2018_CORE": ["model.hcup.stg_ny_sedd_2018_core"], "source.hcup.SID.NY_SID_2017_CHGS": [], "source.hcup.SID.NY_SID_2017_CORE": [], "source.hcup.SID.NY_SID_2018_CHGS": [], "source.hcup.SID.NY_SID_2018_CORE": []}}